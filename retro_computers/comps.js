const comps={
dir:1,
items:{
"Partner_01_01":{
dir:1,
items:{
"english.txt":{
name:"Partner 01.01",
params:"Year\x09≤1990\x0ARAM\x0964 kB\x0AROM\x0916 kB\x0ACPU\x09i8080 1.7 MHz\x0AGraph\x09128x129x2\x0AText\x0964x25x2\x0ASound\x09i8253\x0AGroup\x09Radio 86RK",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"row2wav":{
dir:1,
items:{
"source":{
dir:1,
items:{
"bin2wav.c":{},
},
},
"bin2wav.ubuntu64":{},
"bin2wav.exe":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Партнер 01.01",
params:"Год\x09≤1990\x0AОЗУ\x0964 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AГрафика\x09128x129x2\x0AТекст\x0964x25x2\x0AЗвук\x09К580ВИ53\x0AГруппа\x09Радио 06РК",
body:"Партнер 01.01 это улучшенная версия компьютера Радио 86РК. У компьютера Партнер\x0A01.01 объем оперативной памяти увеличен до 64 килобайт. Его ПЗУ содержит\x0Aнесколько программ: Монитор, Текстовый редактор, Бейсик и Ассемблер. Сразу после\x0Aвключения компьютера можно начать программировать. Не нужно загружать Бейсик или\x0AАссемблер с магнитной ленты.\x0A\x0AКомпьютер Партнер 01.01 обладает плохой совместимостью с компьютером Радио 86РК.\x0AБольшинство игровых программ не запустится на этом компьютере, потому что адреса\x0Aвсех устройств компьютера были изменены. Совместимость обеспечивается только на\x0Aуровне точек входа в ПЗУ.\x0A\x0AЗнакогенератор компьютера \x22Партнер 01.01\x22 содержит 1024 символа. 8 наборов по\x0A128 символов. Но есть ограничение, на экране в одной строке символов допускается\x0Aне более 16 переключений наборов. Помимо стандартного набора символов компьютера\x0AРадио 86РК в этот компьютер добавлена основная кодировка ГОСТ и множество\x0Aпсевдографических символов.\x0A\x0AИз схемы компьютера убрали встроенный параллельный порт. Во всех компьютерах\x0AРадио 86РК он есть, а тут нет. Из-за этого внешнее ПЗУ или контроллер SD карты\x0Aподключать не получится.\x0A\x0AЭтот компьютер часто переделывался в ZX Spectrum-совместимый. Плата компьютера\x0AПартнер 01.01 заменялась на плату ZX Spectrum-совместимого компьютера. Например,\x0Aна Ленинград или Пентагон. Внутри корпуса достаточно места для большинства\x0Aпечатных плат. Можно даже разместить в этом корпусе дисковод. Клавиатура легко\x0Aпеределывается в стандарт ZX Spectrum. В клавиши вставляются новые бумажки с\x0Aнадписями, а дорожки перерезаются и соединяются проводами. Клавиатура у\x0Aкомпьютера Партнер 01.01 герконовая, то есть надежная.\x0A\x0AВнутри корпуса установлен импульсный блок питания.\x0A\x0AУ компьютера на верхней плоскости корпуса находится 4 слота расширения. Я знаю о\x0A5 модулях расширения:\x0A\x0AПартнёр-02.01 - Модуль параллельного интерфейса.\x0A\x0AПартнёр-02.11 - Модуль последовательного интерфейса. На основе КР580ВВ51А,\x0Aскорость 9600 бод.\x0A\x0AПартнёр-03.11 - Модуль программатора ПЗУ.\x0A\x0AПартнёр-01.51 - Модуль контроллера дисковода.Позволяет работать с CP/M и его\x0Aпрограммами.\x0A\x0AПартнёр-01.61 - Модуль цветной псевдографический (МЦПГ). Добавляет в компьютер\x0Aизменяемый знакогенератор, каждая точка которого может быть любого из 8 цветов.\x0AМодуль поддерживается только несколькими играми идущими в комплекте с модулем\x0AМЦПГ. Фотографии модуля ниже взяты у Kinder5912.\x0A",},
"software":{
dir:1,
items:{
"games":{
dir:1,
items:{
"rocker.rkp":{},
"symgen2.rkp":{},
"wall.rkp":{},
"pingpong.rkp":{},
"teletype.rkp":{},
"chudov.rkp":{},
"mars2.rkp":{},
"lestn.rkp":{},
"barmen2.rkp":{},
"ed_music.rkp":{},
"moon.rkp":{},
"perelet.rkp":{},
"land.rkp":{},
"skachky.rkp":{},
"best.rkp":{},
"scythe.rkp":{},
"rom_lpt1.rkp":{},
"ramdos.rkp":{},
"zmeya.rkp":{},
"krestnol.rkp":{},
"zmej_gor.rkp":{},
"circus.rkp":{},
"morze2.rkp":{},
"ramdos2.rkp":{},
"mak1.rkp":{},
"speaker.rkp":{},
"bomber.rkp":{},
"speedway.rkp":{},
"disasm.rkp":{},
"stelby.rkp":{},
"panika.rkp":{},
"ephir.rkp":{},
"xonix.rkp":{},
"digger.rkp":{},
"morze.rkp":{},
"crossfir.rkp":{},
"windows.rkp":{},
"stf_8000.rkp":{},
"panika2.rkp":{},
"mars3.rkp":{},
"r_flower.rkp":{},
"rise1.rkp":{},
"lestnica.rkp":{},
"worm.rkp":{},
"pentis.rkp":{},
"press3.rkp":{},
"basic_mk.rkp":{},
"ball.rkp":{},
"bs_graph.rkp":{},
"froggi15.rkp":{},
"lestn2.rkp":{},
"tennis2.rkp":{},
"press.rkp":{},
"saper.rkp":{},
"ed_term.rkp":{},
"mus_synt.rkp":{},
"torpedat.rkp":{},
"sid_vm10.rkp":{},
"tetris3.rkp":{},
"rise.rkp":{},
"piton2.rkp":{},
"loader.rkp":{},
"volcano.rkp":{},
"reversi.rkp":{},
"stf_0000.rkp":{},
"foxhunt.rkp":{},
"stranger.rkp":{},
"torpatt.rkp":{},
"way+.rkp":{},
"test.rkp":{},
"rom_fdd.rkp":{},
"ocean.rkp":{},
"samolet.rkp":{},
"descent.rkp":{},
"b_dash.rkp":{},
"rikoshet.rkp":{},
"sp_lab_1.rkp":{},
"light.rkp":{},
"exolon.rkp":{},
"shakhta.rkp":{},
"maraphon.rkp":{},
"faraon.rkp":{},
"pif.rkp":{},
"scwosh.rkp":{},
"xonix2.rkp":{},
"schoper.rkp":{},
"rom_mcpg.rkp":{},
"mirazh.rkp":{},
"klad.rkp":{},
"cr_fire.rkp":{},
"edcolor.rkp":{},
"slams.rkp":{},
"jumper.rkp":{},
"stakan.rkp":{},
"ed_assm.rkp":{},
"tetris4.rkp":{},
"ralli.rkp":{},
"duck.rkp":{},
"labirint.rkp":{},
"pilot_g3.rkp":{},
"edmusic.rkp":{},
"pacman.rkp":{},
"liquid_s.rkp":{},
"klad2.rkp":{},
"barmen.rkp":{},
"pwo.rkp":{},
"zagibon.rkp":{},
"rom_lpt2.rkp":{},
"liqsky.rkp":{},
"aliaz1.rkp":{},
"digger1.rkp":{},
"press2.rkp":{},
"sos.rkp":{},
"xtro.rkp":{},
"mn_rk-86.rkp":{},
"trn_asm.rkp":{},
"skachki.rkp":{},
"sp_saver.rkp":{},
"stonefld.rkp":{},
"tulpan.rkp":{},
"sp_lab_2.rkp":{},
"speak.rkp":{},
"boa.rkp":{},
"l_runner.rkp":{},
"life.rkp":{},
"saboteur.rkp":{},
"mus_sys.rkp":{},
"formula.rkp":{},
"lifepro.rkp":{},
"stopkr.rkp":{},
"bldrdash.rkp":{},
"maze.rkp":{},
"pasjans.rkp":{},
"tetris.rkp":{},
"karate.rkp":{},
"piton.rkp":{},
"life2.rkp":{},
"symgen1.rkp":{},
"coa.rkp":{},
"mars.rkp":{},
"ed_graph.rkp":{},
"submarin.rkp":{},
"n_rally2.rkp":{},
"lomaze.rkp":{},
"lestn_1.rkp":{},
"starwars.rkp":{},
"tetris2.rkp":{},
"rocker2.rkp":{},
"stelby2.rkp":{},
"s_demise.rkp":{},
"spysdem.rkp":{},
"submarin2.rkp":{},
"apples.rkp":{},
"shtab.rkp":{},
"cobra.rkp":{},
"slams2.rkp":{},
"sapper.rkp":{},
"tennis.rkp":{},
"murawej.rkp":{},
"ral_trek.rkp":{},
"gold.rkp":{},
"football.rkp":{},
"gonka.rkp":{},
"n_rally.rkp":{},
"ed_dump.rkp":{},
"tetris1.rkp":{},
"ldrunner.rkp":{},
"jump.rkp":{},
},
},
"readme.txt":{},
"mcpg_games":{
dir:1,
items:{
"mars2.rkp":{},
"moon.rkp":{},
"tetrisc.rkp":{},
"land.rkp":{},
"pressc2.rkp":{},
"hyper.rkp":{},
"striker.rkp":{},
"billiard.rkp":{},
"columns.rkp":{},
"pitonc.rkp":{},
"aeroplan.rkp":{},
"xonixc.rkp":{},
"batty.rkp":{},
"seab.rkp":{},
"letter.rkp":{},
"b_dash.rkp":{},
"sp_lab_1.rkp":{},
"exolon.rkp":{},
"bank.rkp":{},
"sherif.rkp":{},
"strip.rkp":{},
"pacman.rkp":{},
"hakker.rkp":{},
"gardener.rkp":{},
"sp_lab_2.rkp":{},
"mars.rkp":{},
"lestn_1.rkp":{},
"pressc.rkp":{},
"pilot.rkp":{},
"tennis.rkp":{},
"n_rally.rkp":{},
"bd3.rkp":{},
"tank.rkp":{},
},
},
"software":{
dir:1,
items:{
"asm-ed.rkp":{},
"best.rkp":{},
"debug.rkp":{},
"dumpcor2.rkp":{},
"wel.rkp":{},
"dumpcor1.rkp":{},
"bssearch.rkp":{},
"morse.rkp":{},
"tpp.rkp":{},
"colmusic.rkp":{},
"sort.rkp":{},
"c.rkp":{},
"lsforth.rkp":{},
"basic.rkp":{},
"pascal.rkp":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"font.rom":{},
"mcpg.rom":{},
"lpt2.rkp":{},
"fdd.rom":{},
"bios.rom":{},
"lpt1.rkp":{},
"basic.rom":{},
},
},
"doc":{
dir:1,
items:{
"Partner_01_01_List_of_service_centers.pdf":{},
"Parallel_interface_controller":{
dir:1,
items:{
"0201.gif":{},
"0201.html":{},
},
},
"Partner_01_01_Chargen.png":{},
"Partner_01_01_Circuits.pdf":{},
"Color_controller":{
dir:1,
items:{
"readme.txt":{},
"0161.html":{},
"0161b.gif":{},
"6301447.png":{},
"Partner_01_01_MCPG.pdf":{},
"6351622.png":{},
"0161a.gif":{},
},
},
"Partner_01_01_User_manual.pdf":{},
"Floppy_controller":{
dir:1,
items:{
"0151.gif":{},
"Partner FDC.PCB":{},
"D2.dsk":{},
"Partner FDC.SCH":{},
"ROM_FDD.bin":{},
"D1.dsk":{},
"Partner 01.01 floppy_profile.fpf":{},
"0151.html":{},
"Partner FDC proto front.jpg":{},
"Partner FDC.pdf":{},
},
},
"Partner_01_01_Software.pdf":{},
"Partner_01_01_Software_on_tape.pdf":{},
},
},
},
},
"Electronica_MK_90":{
dir:1,
items:{
"english.txt":{
name:"Electronica MK-90",
params:"Year\x091988\x0ARAM\x0916 kB\x0AROM\x0932 kB\x0ACPU\x09KA588\x0AGraph\x09120x64x2\x0AIn ROM\x09Basic",
body:"Electronica MK-90 is a Soviet portable computer. The computer contains \x0Amonochrome LCD display with a resolution of 120x64 pixels. Contains \x0A16 bit processor. More precisely, the multi-chip sectional microprocessor KA588.\x0AThe processor is a several chips. The computer contains 16 kilobytes of RAM \x0Aand 32 kilobytes of ROM.\x0A\x0AWhen you turn on the power, the computer prompts you to select:\x0A\x0A1. BASIC - Run the programming language BASIC, which is in ROM computer.\x0A\x0A2. SMP0 - Run the program from the memory module 1.\x0A\x0A3. SMP1 - Run the program from the memory module 2.\x0A\x0ATwo memory modules can be installed in the computer. Memory module store \x0Aa programs and data. My computer contains 1 module.\x0A\x0AThe memory module contains the same memory chips as the computer itself.\x0AThe memory module contains 5x A573RU10 chips (analog 6216) with a total \x0Acapacity of 10 kilobytes. This is static memory. It needs electricity to \x0Astore data. Therefore, a battery is installed in the memory module. Batteries \x0Alast for half a year. The large chip in the memory module is the controller \x0Athat communicates with computer over a serial data bus, much like I2C. \x0AChipselect, clock, data lines.\x0A\x0AThe computer is powered by 4 AA batteries or a power supply. Charger for \x0A4x AA batteries and power supply included with a computer.\x0A\x0AFor this computer, a color portable printer Electronica MK-92 was produced.\x0A",},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"17.jpg":{},
"11.jpg":{},
"6.jpg":{},
"15.jpg":{},
"13.jpg":{},
"20.jpg":{},
"19.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"18.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Электроника МК-90",
params:"Год\x091988\x0AОЗУ\x0916 кБ\x0AПЗУ\x0932 кБ\x0AПроц\x09КА588\x0AГрафика\x09120x64x2\x0AВ ПЗУ\x09Бейсик",
body:"Электроника МК-90 это советский портативный компьютер. В компьютере установлен\x0Aмонохромный ЖК экран разрешением 120x64 точек. Установлен 16 битный процессор,\x0Aточнее многокристальный секционный микропроцессор KA588. Процессор состоял из\x0Aнескольких микросхем. Установлено 16 килобайт ОЗУ и 32 килобайта ПЗУ.\x0A\x0AПри включении питания компьютер предлагает выбрать:\x0A\x0A1. БЕЙСИК - Запустить язык программирования Бейсик, который находится в ПЗУ\x0Aкомпьютера.\x0A\x0A2. СМП0 - Запустить программу с модуля памяти 1.\x0A\x0A3. СМП1 - Запустить программу с модуля памяти 2.\x0A\x0AВ компьютер можно установить два модуля памяти. На них хранятся программы и\x0Aданные. У меня установлен 1 модуль.\x0A\x0AМодуль памяти собран на таких же микросхемах памяти, что и сам компьютер.\x0AВ модуле памяти установлено 5 микросхем А573РУ10 общим объемом 10 килобайт.\x0AЭто статическая память. Ей необходимо электричество, что бы хранить данные.\x0AПоэтому в модуль памяти установлена батарейка. Батарейки хватает на пол года.\x0AБольшая микросхема в модуле памяти это контроллер, который взаимодействует с\x0Aкомпьютером по последовательной шине данных, очень похожей на I2C. \x0AЛинии chipselect, clock, data.\x0A\x0AКомпьютер работает от 4-х аккумуляторов размера AA, либо от блока питания. \x0AЗарядное устройство для 4-х аккумуляторов АА и блок питания в комплекте \x0Aс компьютером.\x0A\x0AДля этого компьютера выпускался цветной портативный принтер \x22Электроника МК-92\x22.\x0A",},
},
},
"Delta-S_52_chips":{
dir:1,
items:{
"english.txt":{
name:"Delta S 52 chips",
params:"Year\x091989\x0ARAM\x0948 kB\x0AROM\x0916 kB\x0ACPU\x09Z80 3.5 MHz\x0AGraph\x09256x192x15\x0AIn ROM\x09Basic\x0AGroup\x09ZX Spectrum 48",
body:"Several ZX Spectrum 48 or ZX Spectrum 128 compatible computers were produced \x0Aunder the name \x22Delta S\x22. That computers differed in cases, keyboards,\x0Asupport for the russian language, speed, compatibility and memory capacity.\x0AMy model is popularly called \x22Delta C 52 chips\x22. This is a \x22ZX Spectrum 48\x22\x0Acompatible computer.\x0A\x0AThis Delta is the most beautiful ZX Spectrum compatible computer from the USSR.\x0AIt looks complete. It has the best keyboard among all Soviet spectrums. Its \x0Akeyboard has become the standard for the rest of computers. With my point of\x0Aview, even the original ZX Spectrum is worse than the Delta.\x0A\x0AAn external floppy drive controller was produced for the Delta S. It connects \x0Ato the side extension connector.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Дельта С 52 микросхемы",
params:"Год\x091989\x0AОЗУ\x0948 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09Z80 3.5 Мгц\x0AГрафика\x09256x192x15\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09ZX Spectrum 48",
body:"Под названием \x22Дельта С\x22 выпускалось несколько \x22ZX Spectrum 48\x22 или \x22ZX\x0ASpectrum 128\x22 совместимых компьютеров. Компьютеры отличались корпусами,\x0Aклавиатурами, поддержкой русского языка, скоростью работы, совместимостью и\x0Aобъемом памяти. Модель на фото в народе называется \x22Дельта С 52 микросхемы\x22.\x0AЭто \x22ZX Spectrum 48\x22 совместимый компьютер.\x0A\x0AЭта Дельта это самый красивый спектрум совместимый компьютер из СССР. Он \x0Aвыглядит завершенным. У него лучшая клавиатура среди всех отечественных\x0Aспектрумов. Его клавиатура стала стандартом для остальных спектрумов. С моей\x0Aточки зрения даже оригинальный ZX Spectrum гораздо хуже Дельты.\x0A\x0AДля Дельты С выпускался контролелр дисковода. Он подключался к боковому разъему\x0Aрасширения.\x0A",},
"doc":{
dir:1,
items:{
"Delta_S_52_chips_BOM.txt":{},
"Delta_S_52_chips_Board.gif":{},
"Delta_S_52_chips_Circuit.gif":{},
"Delta_S_52_chips_Connectors.png":{},
"Delta_S_52_chips_Board_2.gif":{},
},
},
},
},
"Yamaha_YIS503III":{
dir:1,
items:{
"english.txt":{
name:"Yamaha YIS-503IIIR KUVT 2",
params:"Year\x091985\x0ARAM\x09256 kB + 128 kB\x0AROM\x0948 kB\x0ACPU\x09Z80 3.6 MHz\x0AGraph\x09512x424x16, 256x424x256, sprites, 512 colors palette\x0ASound\x09AY-3-8910\x0AIn ROM\x09Basic\x0AGroup\x09MSX2",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Yamaha YIS-503IIIR КУВТ 2",
params:"Год\x091985\x0AОЗУ\x09256 кБ + 128 кБ\x0AПЗУ\x0948 кБ\x0AПроц\x09Z80 3.6 МГц\x0AГрафика\x09512x424x16, 256x424x256, спрайты, палитра 512 цв\x0AЗвук\x09AY-3-8910\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09MSX2",
body:"Yamaha YIS-503IIIR это японский домашний компьютер стандарта MSX2. Этот\x0Aкомпьютер поставлялся в школы СССР на радость детям. Как это получилось?\x0AРуководство страны приняло решение закупить в школы самый лучший компьютер в\x0Aмире. Ну а что в этом такого? Лучшим оказался этот.\x0A\x0AСначала покупали модель с меньшим объемом памяти Yamaha YIS-503IIR, уже потом\x0AIII. Для учителя покупали более мощную модель Yamaha YIS-805/128R с 3,5\x22\x0Aдисководом или даже двумя.\x0A\x0AЭтот компьютер отличается от всех остальных компьютеров того времени шикарной\x0Aграфикой. Разрешение 256x212 256 цветов или 512x212 16 цветов. Компьютер выпущен\x0Aв 1985 году! На IBM PC и ZX Spectrum графика была \x22немного\x22 похуже. А еще\x0Aвертикальное разрешение может быть увеличено в 2 раза до 414 строк, но при этом\x0Aвместо прогрессивной развертки используется чересстрочная и экран заметно\x0Aмерцает. Тут есть аппаратное ускорение графики и спрайты.\x0A\x0AУ этого компьютера много оперативной памяти. В заводской комплектации у моего\x0Aкомпьютера было 256 кБ. Это 128 кБ основной плюс 128 кБ видео памяти. Я\x0Aрасширил оперативную память до 384 кБ, а знакомые расширяли аж до 4 Мб.\x0AОперативная память установлена на отдельной печатной плате и её легко заменить.\x0A\x0AЗа звук тут отвечает знакомая нам микросхема AY-3-8910.\x0A\x0AНа этом компьютере используется операционная система MSX DOS, написанная фирмой\x0AMicrosoft. Но для её работы требуется контроллер дисковода (с дисководом) или\x0Aкакой нибудь другой контроллер с накопителем. Я купил контроллер \x22SUNRISE IDE\x0Aдля MSX2 от MAXIOL\x22.",},
"firmware":{
dir:1,
items:{
"ide_sunrise":{
dir:1,
items:{
"cfcard.bin.7z":{},
"rom.bin":{},
},
},
},
},
"doc":{
dir:1,
items:{
"Yamaha_YIS503III_Circuit_ram128.jpg":{},
"Yamaha_YIS503III_Circuit_yis503.jpg":{},
"Yamaha_YIS503III_Circuit_cx5m2mapper64k.jpg":{},
"Yamaha_YIS503III_Upgrade_128k_RAM_to_256k.png":{},
"Yamaha_YIS503III_Circuit_5cx_full.jpg":{},
"Yamaha_YIS503III_Circuit_netc_end copy.jpg":{},
"Yamaha_YIS503III_Circuit_vidun1.gif":{},
"Yamaha_YIS503III_Circuit_vidun2.gif":{},
},
},
},
},
"Assistent_86_128":{
dir:1,
items:{
"english.txt":{
name:"Assistent 86 128",
params:"Year\x091988\x0ARAM\x09128 - 1024 kB\x0AROM\x0948 kB\x0ACPU\x09i8086 4.7 MHz\x0AGraph\x09320x200x4, 640x200x2\x0AText\x0980x25x16, 80x25x16\x0ASound\x09i8253\x0AGroup\x09IBM PC",
body:"Assistant 86 128 is an IBM PC-compatible Soviet home computer. All computer\x0APCBs are in a single case with a keyboard. Assistant 128 is the coolest and\x0Alargest computer in this form factor in the USSR.\x0A\x0AInside the computer, one above the other, there are 5 PCBs: a keyboard board,\x0Aa video adapter board and 128 kilobytes of RAM, a central processor board, a\x0AROM board, a drive controller board and 1 megabyte of RAM. Inside the computer\x0Acase is still a switching power supply.\x0A\x0AAssistant 86 128 computer has a i8086 processor operating at a frequency of\x0A4.7 MHz. This is a faster processor than was found in the original IBM PC.\x0Ai8088 was used there. i8086 has an external data bus of 16 bits, while i8088\x0Ahas only 8 bits, which significantly affects the speed of exchange with RAM.\x0AA full-fledged CGA video adapter is installed in the Assistant 86 128. Unlike\x0Athe original IBM PC, the \x22snow\x22 in the Assistant was removed in the 80x25x16\x0Acolor text mode. The original IBM PC did not have enough video memory speed to\x0Arun the processor and monitor at the same time. When the program changed\x0Asomething on the screen, a noise similar to snow appeared on the screen. The\x0AAssistant 86 128 has a full-fledged XT keyboard with a separate microcontroller\x0A(KR1816BE35). The expansion connector on the computer is non-standard, but if\x0Ayou wish, you can make an adapter for an ISA board.\x0A\x0AMy computer has an expansion board containing 1 megabyte of RAM (976 kB\x0Aavailable) and a floppy disk drive controller. Without this board, you will have\x0Ato load programs from a tape cassette. By the way, the first IBM PC had such an\x0Aopportunity. A program or game found on a floppy disk with friends simply cannot\x0Abe recorded on a cassette. It is not obvious how to connect a tape recorder to\x0Aa regular IBM PC and where to get programs for recording on a cassette. The game\x0Abeing recorded should work without MS DOS operating system, on a bare BIOS and\x0Arequire no more than ~100 KB of RAM. Without a RAM expansion card, the computer\x0Ahas only 128 kilobytes, some of which uses the BIOS and video adapter. The most\x0Ainteresting games and programs disappear immediately. But on the other hand,\x0ABASIC is flashed into the ROM of the computer. Without an expansion board\x0Ainstalled, after turning on the computer, we get into BASIC. You can start\x0Awriting your program.\x0A\x0AWhen we load MS DOS no program starts due to lack of RAM. MS DOS does not see\x0Aextended memory, all ~100 KB of base memory are occupied by the operating system\x0Aitself. It is required to reflash the BIOS, which is tightly soldered to the\x0Aboard. Or download the driver, which fortunately was found on one of the floppy\x0Adisks. The ability to create a virtual disk using RAM was built into this\x0Adriver. MS DOS cannot use the entire megabyte of memory. The excess is just\x0Aconvenient to use for a virtual disk. After the operating system is loaded,\x0Asystem files are copied there, which are constantly loaded from a floppy disk\x0A(command.com, vc.com...). The boot floppy after loading can be removed from the\x0Adrive, replacing it, for example, with a game.\x0A\x0AMS DOS only supports 5.25\x22 360 kB floppy disks. If you connect a newer 80-track\x0Adrive instead of a 40-track drive to your computer and load the 800.com driver,\x0Athen the same 360 ​​kB floppy disks can be formatted on 800 kB. It 800 kB floppies\x0Acan be read and write on a big computer.\x0A\x0AIn general, this is a full-fledged IBM PC, a little faster than the original and\x0Awithout some of its jambs. It can run all programs for MS DOS / 8086 / CGA. You\x0Acan even run Windows 3.0 and older versions.\x0A",},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"21.jpg":{},
"7.jpg":{},
"17.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"25.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"20.jpg":{},
"19.jpg":{},
"24.jpg":{},
"12.jpg":{},
"26.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"23.jpg":{},
"10.jpg":{},
"14.jpg":{},
"18.jpg":{},
"8.jpg":{},
"22.jpg":{},
},
},
"russian.txt":{
name:"Ассистент 86 128",
params:"Год\x091988\x0AОЗУ\x09128 - 1024 кБ\x0AПЗУ\x0948 кБ\x0AПроц\x09К1810ВМ86 4.7 MГц\x0AГрафика\x09320x200x4, 640x200x2\x0AТекст\x0980x25x16, 80x25x16\x0AЗвук\x09К580ВИ53\x0AГруппа\x09IBM PC",
body:"Ассистент 86 128 это IBM PC-совместимый советский домашний компьютер. Все платы\x0Aкомпьютера находятся в едином корпусе с клавиатурой. Ассистент 128 это самый\x0Aкрутой и самый большой компьютер в таком формфакторе в СССР.\x0A\x0AВнутри компьютера друг над другом находятся 5 плат: плата клавиатуры, плата\x0Aвидеоадаптера и 128 килобайт оперативной памяти, плата центрального процессора,\x0Aплата ПЗУ, плата контроллера дисковода и 1 мегабайт оперативной памяти. Внутри\x0Aкорпуса компьютера еще находится импульсный блок питания.\x0A\x0AВ компьютере Ассистент 86 128 установлен процессор К1810ВМ86, совместимый с\x0AIntel 8086, работающий на частоте 4.7 МГц. Это более быстрый процессор, чем был\x0Aустановлен в оригинальном IBM PC. Там использовался Intel 8088. У Intel 8086\x0Aвнешняя шина данных 16 бит, а у Intel 8088 всего 8 бит, что заметно влияет на\x0Aскорость обмена с оперативной памятью. В Ассистенте установлен полноценный\x0Aвидеоадаптер CGA. Используется микросхема КМ1809ВГ6 (совместимая с Motorola\x0A6845), причем в отличии от оригинального IBM PC, в Ассистенте убрали \x22снег\x22 в\x0Aцветном текстовом режиме 80x25x16. У оригинального IBM PC не хватало скорости\x0Aвидеопамяти, что бы одновременно работали процессор и монитор. Когда программа\x0Aчто то изменяла на экране, то на экране появлялся шум похожий на снег. В \x0AАссистенте установлена полноценная XT клавиатура с отдельным микроконтроллером\x0A(КР1816ВЕ35). Разъем расширения у компьютера нестандартный, но при желании можно\x0Aизготовить переходник на ISA плату.\x0A\x0AВ этом компьютере установлена плата расширения содержащая 1 мегабайт оперативной\x0Aпамяти (доступно 976 Кб из за ПЗУ) и контроллер дисковода. Без этой платы\x0Aпридется загружать программы с магнитофонной кассеты. Кстати, в первых IBM PC\x0Aбыла такая возможность. Программу или игру найденную на дискете у знакомых\x0Aпросто так не получится записать на кассету. Не очевидно как подключить\x0Aмагнитофон к обычному IBM PC и где взять программы для записи на кассету.\x0AЗаписываемая игра должна работать без операционной системы MS DOS, на голом\x0ABIOS-е и требовать не более ~100 Кб оперативной памяти. Без платы расширения\x0Aоперативной памяти у компьютера всего 128 килобайт, часть из которой использует\x0ABIOS и видеоадаптер. Т.е. большинство интересных игр и программ отпадают сразу\x0Aже. Но зато в ПЗУ компьютера прошит Бейсик. Без установленной платы расширения\x0Aпосле включения компьютера мы попадаем в Бейсик. Можно начинать писать свою\x0Aпрограмму.\x0A\x0AЗагружаем MS DOS, но ни одна программа не запускается из за нехватки оперативной\x0Aпамяти. MS DOS не видит расширенной памяти, все ~100 Кб базовой памяти заняты\x0Aсамой операционной системой. Требуется перепрошить BIOS, который намертво впаян\x0Aв плату. Либо загрузить драйвер, который к счастью нашелся на одной из дискет.\x0AВ этот драйвер встроили возможность создавать виртуальный диск использующий\x0Aоперативную память. MS DOS не может использовать весь мегабайт памяти. Лишнее\x0Aкак раз удобно использовать под виртуальный диск. После загрузки операционной\x0Aсистемы туда копируются файлы системы, которые постоянно загружаются с дискеты\x0A(command.com, vc.com...). Загрузочную дискету после загрузки можно извлечь из\x0Aдисковода, заменив её, например, игрой.\x0A\x0AMS DOS поддерживает только 5,25\x22 дискеты на 360 Кб. Только с такой загружается\x0Aсистема. Если к компьютеру подключить более новый 80-дорожечный дисковод вместо\x0A40 дорожечного и загрузить драйвер 800.com, то те же самые дискеты 360 Кб можно\x0Aбудет отформатировать на 800 Кб. Такие дискеты можно будет читать и записывать\x0Aна большом компьютере. Но дискеты в формате 360 Кб, с которых загружается\x0Aкомпьютер, на IBM PC читаться уже не будут. Большой компьютер считает, что при\x0Aиспользовании 80 дорожечного дисковода в формате 360 Кб надо использовать только\x0Aнечетные дорожки. Он ведет себя так, как будто установлен 40 дорожечный\x0Aдисковод. Это правильно. А вот Ассистент считает, что установлен 40 дорожечный\x0Aдисковод, хотя установлен 80 дорожечный и пишет все дорожки подряд.\x0A\x0AЭто решаемо. Можно установить два дисковода. Один будет 720 Кб, а второй 360 Кб.\x0AПодключаем второй дисковод, но его не видит BIOS и операционная система. Почему?\x0AПотому что надо указать в BIOS-е то, что в компьютере установлен второй\x0Aдисковод. Логично. Как попасть в BIOS? Ваш вариант? Правильно, надо разобрать\x0Aкомпьютер, а он состоит из 5 печатных плат расположенных друг над другом. На\x0A4-ой плате плате находятся перемычки. Перемычки представляют собой дорожки\x0Aпечатной платы, которые надо перерезать ножом. Дорожки эти сверху справа платы.\x0A\x0AВ общем, это полноценный IBM PC, немного быстрее оригинала и без некоторых его\x0Aкосяков. На нем можно запустить все программы для MS DOS / 8086 / CGA. Можно\x0Aдаже запустить Windows 3.0 и более старые версии.\x0A",},
"software":{
dir:1,
items:{
"fdc_drivers":{
dir:1,
items:{
"config.sys":{
name: "Пример загрузки драйвера VD.SYS",
},
"720b.com":{
name: "Поддержка дискет более чем на 360 Кб",
},
"720.com":{
name: "Поддержка дискет более чем на 360 Кб",
},
"800.com":{
name: "Поддержка дискет более чем на 360 Кб",
},
"vd.sys":{
name: "Драйвер дисковода и дополнительного ОЗУ компьютера Ассистент 86 128",
},
"vd2.sys":{
name: "Драйвер дисковода и дополнительного ОЗУ компьютера Ассистент 86 128",
},
},
},
"tapes":{
dir:1,
items:{
"tape2":{
dir:1,
items:{
"a_10_nomer10.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_12_piton.mp3":{
name: "Игра 'Питон'",
},
"a_09_nomer9.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_13_chess.mp3":{
name: "Игра 'Шахматы'",
},
"readme.txt":{
name: "Описание кассеты, копирайты",
},
"a_00_dop.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_03_nomer3.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_08_nomer8.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_02_nomer2.mp3":{
name: "Демонстрационно-обучающая программа",
},
"b_01_fly.mp3":{
name: "Игра 'Воздушный бой'",
},
"cover.jpg":{
name: "Обложка кассеты",
},
"a_07_nomer7.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_11_piramida.mp3":{
name: "Игра 'Пирамида'",
},
"a_06_nomer6.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_01_nomer1.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_04_nomer4.mp3":{
name: "Демонстрационно-обучающая программа",
},
"a_05_nomer5.mp3":{
name: "Демонстрационно-обучающая программа",
},
},
},
"tape1":{
dir:1,
items:{
"readme.txt":{
name: "Описание кассеты, копирайты",
},
"t1.mp3":{
name: "Тест функционирования",
},
"cover.jpg":{
name: "Обложка кассеты",
},
"t2.mp3":{
name: "Тест-прогон",
},
},
},
},
},
},
},
"firmware":{
dir:1,
items:{
"rom_f400.bin":{},
"source":{
dir:1,
items:{
"asst-ext.asm":{},
"asstfe00.asm":{},
"asstfe00.bin":{},
},
},
},
},
"my_extensions":{
dir:1,
items:{
"RGB_adapter_and_sync_corrector":{
dir:1,
items:{
"photo7.jpg":{},
"readme.txt":{},
"photo8.jpg":{},
"photo3.jpg":{},
"color.dsn":{},
"details.txt":{},
"photo2.jpg":{},
"color.lyt":{},
"photo5.jpg":{},
"photo1.jpg":{},
"photo4.jpg":{},
"cir.png":{},
"photo6.jpg":{},
},
},
},
},
"doc":{
dir:1,
items:{
"Assistent_86_128_User_manual.djvu":{},
"Assistent_86_128_Joystick.pdf":{},
"Assistent_86_128_User_manual.pdf":{},
"Assistent_86_128_Circuits.djvu":{},
"Assistent_86_128_Floppy_and_RAM_controller.pdf":{},
"Assistent_86_128_Software.pdf":{},
"Assistent_86_128_Circuits.txt":{},
},
},
},
},
"Specialist":{
dir:1,
items:{
"english.txt":{
name:"Specialist",
params:"Year\x091987\x0ARAM\x0948 kB\x0AROM\x092 - 16 kB\x0ACPU\x09i8080 2 MHz\x0AGraph\x09384x256x2, 384x256x5, 384x256x8\x0AGroup\x09Specialist",
body:"TODO\x0A",},
"keyboard_circuit.svg":{},
"my_software":{
dir:1,
items:{
"mxos_for_specialist_mx2":{
dir:1,
items:{
"spmx.rom":{},
"readme.txt":{},
"disk-a":{
dir:1,
items:{
"tasm.exe":{},
"-make.bat":{},
"disk-a.asm":{},
"disk-a.lst":{},
"tasm85.tab":{},
},
},
"nc.com":{
dir:1,
items:{
"f4.inc":{},
"inputforcopymove.inc":{},
"f9.inc":{},
"getselectedfile.inc":{},
"f6.inc":{},
"main.inc":{},
"printinvselfile.inc":{},
"tasm.exe":{},
"memset_hl_a_c.inc":{},
"printcurdrive.inc":{},
"printstringinv.inc":{},
"setcursorpospanel.inc":{},
"f3.inc":{},
"f5.inc":{},
"rwbytepanel.inc":{},
"tapeerrorhandler.inc":{},
"tapewrite.inc":{},
"input.inc":{},
"-make.bat":{},
"f8.inc":{},
"enter.inc":{},
"draw.inc":{},
"printdec.inc":{},
"printseldrive.inc":{},
"inverserect.inc":{},
"clearcmdline.inc":{},
"mxos.inc":{},
"enter2.inc":{},
"copyfileint.inc":{},
"nc.lst":{},
"drawwindow.inc":{},
"printfilepanel.inc":{},
"printspaces.inc":{},
"loadandprint.inc":{},
"tab.inc":{},
"printinfoline.inc":{},
"driver.inc":{},
"selfiletocmdline.inc":{},
"loadfiles.inc":{},
"nc.asm":{},
"memcpy_hl_de_3.inc":{},
"loadselfileat0.inc":{},
"printfilename.inc":{},
"savestate.inc":{},
"main2.inc":{},
"f7.inc":{},
"tasm85.tab":{},
"drawcursor.inc":{},
"printinfopanel.inc":{},
"nc.53248.com":{},
"f2.inc":{},
"compactname.inc":{},
"updownleftright.inc":{},
"printstring2.inc":{},
"start.inc":{},
},
},
"makerom":{
dir:1,
items:{
"r63v8.32767.exe":{},
"bas-p.0.com":{},
"reboot.53248.com":{},
"rbas1.34418.exe":{},
"mon2.61696.com":{},
"dos.57344.sys":{},
"list.tmp":{},
"asm-hq.53248.com":{},
"tbl.bin":{},
"sp-580.55296.com":{},
"format.53248.com":{},
"romfnt.0.com":{},
"prak32.28671.exe":{},
"e.53248.com":{},
"disk-h.64000.com":{},
"autoex.bat":{},
"font.bin":{},
"-makeRom.js":{},
"mon-88.55296.com":{},
"spmx.bin":{},
"dl-red.53248.com":{},
"specsvga.bin":{},
"ramfos.0.com":{},
"prg171.32767.exe":{},
"nc.53248.com":{},
},
},
"romfont":{
dir:1,
items:{
"romfnt.lst":{},
"tasm.exe":{},
"-make.bat":{},
"romfnt.0.com":{},
"romfnt.asm":{},
"tasm85.tab":{},
},
},
"unpackrom":{
dir:1,
items:{
"-unpack.js":{},
"tbl.bin":{},
},
},
"reboot":{
dir:1,
items:{
"tasm.exe":{},
"reboot.53248.com":{},
"reboot.lst":{},
"-make.bat":{},
"reboot.asm":{},
"tasm85.tab":{},
},
},
"dos.sys":{
dir:1,
items:{
"printchar5.inc":{},
"getch.inc":{},
"printchar3.inc":{},
"calccs.inc":{},
"taperead.inc":{},
"printer.inc":{},
"filegetsetattr.inc":{},
"filegetsetaddr.inc":{},
"scrollup2.inc":{},
"fileload.inc":{},
"calccursoraddr.inc":{},
"memset_de_20_b.inc":{},
"tasm.exe":{},
"reboot1.inc":{},
"scrolldown.inc":{},
"loadsavefatdir.inc":{},
"jmps_c800.inc":{},
"keyscan.inc":{},
"installdriver.inc":{},
"fileexecbat.inc":{},
"reboot2.inc":{},
"memmove_bc_hl.inc":{},
"filegetinfoaddr.inc":{},
"unpacker.asm":{},
"tapewrite.inc":{},
"tapewritedelay.inc":{},
"filecmpext.inc":{},
"printchar6.inc":{},
"memcpy_bc_hl.inc":{},
"input.inc":{},
"-make.bat":{},
"unpacker0.bin":{},
"dos.57344.sys":{},
"filedelete.inc":{},
"printchar4.inc":{},
"scrollup.inc":{},
"megalz.exe":{},
"printhex.inc":{},
"tapereaderror.inc":{},
"delay_l.inc":{},
"getch2.inc":{},
"tapeloadint.inc":{},
"jmps_c000.inc":{},
"dos.49152.mlz":{},
"filenameprepare.inc":{},
"filegetsetdrive.inc":{},
"drawcursor2.inc":{},
"getch3.inc":{},
"cmp_hl_de_2.inc":{},
"setgetcursorpos.inc":{},
"tapeload.inc":{},
"cmp_hl_de.inc":{},
"tapereaddelay.inc":{},
"driver_sel.inc":{},
"reboot3.inc":{},
"drawchar.inc":{},
"tapesave.inc":{},
"tapewriteword.inc":{},
"beep.inc":{},
"driver_ffc0.inc":{},
"dos.asm":{},
"driver.inc":{},
"filefindcluster.inc":{},
"printchar2.inc":{},
"clearscreen.inc":{},
"filelist.inc":{},
"filefind.inc":{},
"calccursoraddr2.inc":{},
"unpacker.lst":{},
"fileexec.inc":{},
"printstring.inc":{},
"setgetmemtop.inc":{},
"tasm85.tab":{},
"reboot0.inc":{},
"dos.lst":{},
"filecreate.inc":{},
"dos.49152.sys":{},
"filerename.inc":{},
"drawcursor.inc":{},
"sbb_de_hl_to_hl.inc":{},
"printstring1.inc":{},
"printchar.inc":{},
"font.inc":{},
},
},
"makerom_forram":{
dir:1,
items:{
"test.bin":{},
"-make.bat":{},
"dos.57344.sys":{},
"driver.64000.com":{},
"config.64512.bat":{},
"tbl.bin":{},
"mx2loader":{
dir:1,
items:{
"mx2loader.bin":{},
"tasm.exe":{},
"-make.bat":{},
"mx2loader.lst":{},
"mx2loader.asm":{},
"tasm85.tab":{},
},
},
"-makeRom.js":{},
"spmx.bin":{},
"specsvga.bin":{},
},
},
"font":{
dir:1,
items:{
"tbl.bin":{},
"font.bin":{},
"-make.js":{},
"font.inc":{},
},
},
"original":{
dir:1,
items:{
"nc.com":{},
"-test.bat":{},
"font.bin":{},
"dos.sys":{},
"format.com":{},
"total.rom":{},
},
},
"specsvga.bin":{},
"disk-h":{
dir:1,
items:{
"tasm.exe":{},
"disk-h.asm":{},
"-make.bat":{},
"disk-h.64000.com":{},
"disk-h.lst":{},
"tasm85.tab":{},
},
},
},
},
"game_lines":{
dir:1,
items:{
"source":{
dir:1,
items:{
"specialist-game_lines":{
dir:1,
items:{
"lines.h":{},
"lines.c":{},
"stdlib8080.inc":{},
"Graph":{
dir:1,
items:{
"title.c":{},
"playerWin.c":{},
"-make.bat":{},
"screen.bmp":{},
"player.bmp":{},
"playerWin.bmp":{},
"player.c":{},
"screen.c":{},
"cursor_top.bmp":{},
"MegaLZ.exe":{},
"playerD.c":{},
"free.c":{},
"king.bmp":{},
"cursor_bottom.bmp":{},
"playerD.bmp":{},
"SpecialistGraphConverter.exe":{},
"balls.c":{},
"kingLose.c":{},
"game.bmp":{},
"kingLose.bmp":{},
"balls.bmp":{},
"free.bmp":{},
},
},
"graph.c":{},
"keyb.h":{},
"-make-rks.js":{},
"spec_music.h":{},
"errors.txt":{},
"spec_interface.c":{},
"graph.h":{},
"spec_music.c":{},
"SpecialistGraphConverter":{
dir:1,
items:{
"StdAfx.h":{},
"SpecialistGraphConverter.vcproj":{},
"SpecialistGraphConverter.vcxproj.filters":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"SpecialistGraphConverter.vcxproj":{},
"-clean.bat":{},
"SpecialistGraphConverter.cpp":{},
"SpecialistGraphConverter.sln":{},
},
},
"unmlz.h":{},
"fon_spets.inc":{},
"tbl.bin":{},
"interface.h":{},
"-compile.bat":{},
"lines.lst":{},
"lines.rks":{},
"keyb.c":{},
"game.c":{},
"lines.bin":{},
"lines.asm":{},
"unmlz.c":{},
"TASM85.TAB":{},
},
},
"c8080":{
dir:1,
items:{
"TASM.EXE":{},
"c8080.exe":{},
"Include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"op_cmp16":{},
"strchr.c":{},
"Spec":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"setcolor.c":{},
"clrscr.c":{},
"fs_read.c":{},
"fs.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"bios.h":{},
"fs_seek.c":{},
"setcolorautodisable.c":{},
"fs_swap.c":{},
"key.h":{},
"fs_exec.c":{},
"putch.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
"color.h":{},
},
},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"Lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_mul":{},
"stdlib.h":{},
"n":{
dir:1,
items:{
"div32.c":{},
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"op_ig":{},
"Apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"getmemtop.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
"sound.h":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"op_shr":{},
},
},
"TASM85.TAB":{},
},
},
},
},
"screenshot1.png":{},
"screenshot2.png":{},
"lines.rks":{},
},
},
"ramfos_for_specialist_mx2":{
dir:1,
items:{
"ramfos":{
dir:1,
items:{
"filesave.inc":{},
"getcursorpos.inc":{},
"printchar3.inc":{},
"filesetaddr.inc":{},
"chargen.inc":{},
"memcpy_de_hl_c.inc":{},
"checkaram_v2.inc":{},
"printerhex.inc":{},
"setcolor.inc":{},
"taperead.inc":{},
"printer.inc":{},
"fileload.inc":{},
"hl_div_2.inc":{},
"capslock.inc":{},
"inputfilename.inc":{},
"tasm.exe":{},
"topline.inc":{},
"scrolldown.inc":{},
"filefromtape.inc":{},
"keyscan.inc":{},
"printchar_fast.inc":{},
"ramfos.asm":{},
"filefind1.inc":{},
"filefromtapecom.inc":{},
"pagenext.inc":{},
"filechanged.inc":{},
"pagewriteblock.inc":{},
"f800.inc":{},
"ramfos.lst":{},
"exec.inc":{},
"printchara.inc":{},
"fileprev.inc":{},
"cursor.inc":{},
"tapewrite.inc":{},
"pagereadblock.inc":{},
"input.inc":{},
"pushcolor.inc":{},
"-make.bat":{},
"filedelete.inc":{},
"scrollup.inc":{},
"keycheck.inc":{},
"printhex.inc":{},
"popcolor.inc":{},
"delay_l.inc":{},
"starteditordebuger.inc":{},
"deletedate.inc":{},
"keywaitnocursor.inc":{},
"setcolorchar.inc":{},
"oldbeep.inc":{},
"keywait.inc":{},
"bigrom.inc":{},
"tapepulse.inc":{},
"sub_hl_de.inc":{},
"c800.inc":{},
"tapewritepilot.inc":{},
"filesettype.inc":{},
"setcursorpos.inc":{},
"fileverify.inc":{},
"printchars.inc":{},
"keycursor.inc":{},
"cmp_hl_de.inc":{},
"biosinit.inc":{},
"window.inc":{},
"filefindfree.inc":{},
"filegetstartandsize2.inc":{},
"loadmxdos.inc":{},
"tapewait.inc":{},
"checkaram.inc":{},
"fileloadheader.inc":{},
"parsedate.inc":{},
"beep.inc":{},
"keysound.inc":{},
"memcpy_hl_de_c2.inc":{},
"ramfos_std.bin":{},
"clearline.inc":{},
"inverse.inc":{},
"calccharaddr.inc":{},
"getcharfromscreen.inc":{},
"printerecho.inc":{},
"filesetpage.inc":{},
"fileloadheader2.inc":{},
"filetotape.inc":{},
"printchar2.inc":{},
"v_printerxlat.inc":{},
"clearscreen.inc":{},
"rks.inc":{},
"dialog.inc":{},
"bottomline.inc":{},
"ramfos.bin":{},
"filefind.inc":{},
"tapereadpilot.inc":{},
"printfilename.inc":{},
"strtohex.inc":{},
"inputdate.inc":{},
"fullclearscreen.inc":{},
"filesetgetname.inc":{},
"printstring.inc":{},
"memcpyb_hl_de_c2.inc":{},
"comparefilename.inc":{},
"printerechomode.inc":{},
"setgetmemtop.inc":{},
"tasm85.tab":{},
"printstringex.inc":{},
"tapemode.inc":{},
"memcmp_hl1_de_c.inc":{},
"memcmp_hl_de_c.inc":{},
"pushpopcursor.inc":{},
"printhexword.inc":{},
"filesaveheader.inc":{},
"printchar.inc":{},
"calccrc.inc":{},
"init.inc":{},
},
},
"config.inc":{},
"tasm.exe":{},
"sdloader.inc":{},
"readme.txt":{},
"loader1.asm":{},
"loader0.asm":{},
"megalz.exe":{},
"unpackromdisk":{
dir:1,
items:{
"-unpack.js":{},
"tbl.bin":{},
},
},
"logo.inc":{},
"specialistmx2.bin":{},
"tbl.bin":{},
"romdisk.bin":{},
"unmlz.inc":{},
"romdisk":{
dir:1,
items:{
"pacman3.rks":{},
"dump_mx.59392.exe":{},
"-make-disk.js":{},
"tetris2.rks":{},
"checkers.rks":{},
"zoo.rks":{},
"ball.rks":{},
"tbl.bin":{},
"monitor2.49152.sys":{},
"keybtest.rks":{},
"ramdtst.0.exe":{},
"sdbios.rks":{},
"music.rks":{},
"basic.rks":{},
"debuger.59392.exe":{},
"colortst.54272.exe":{},
"editor.59392.exe":{},
"disasm.61440.exe":{},
},
},
"tasm85.tab":{},
"-make.js":{},
"logo":{
dir:1,
items:{
"tbl.bin":{},
"logo.bmp":{},
"-make.js":{},
},
},
},
},
},
},
"my_sources":{
dir:1,
items:{
"MXOS":{
dir:1,
items:{
"spmx.rom":{},
"readme.txt":{},
"nc.com":{
dir:1,
items:{
"f4.inc":{},
"inputforcopymove.inc":{},
"f9.inc":{},
"getselectedfile.inc":{},
"f6.inc":{},
"main.inc":{},
"printinvselfile.inc":{},
"tasm.exe":{},
"memset_hl_a_c.inc":{},
"printcurdrive.inc":{},
"printstringinv.inc":{},
"setcursorpospanel.inc":{},
"f3.inc":{},
"f5.inc":{},
"rwbytepanel.inc":{},
"tapeerrorhandler.inc":{},
"tapewrite.inc":{},
"input.inc":{},
"-make.bat":{},
"f8.inc":{},
"enter.inc":{},
"draw.inc":{},
"printdec.inc":{},
"printseldrive.inc":{},
"inverserect.inc":{},
"clearcmdline.inc":{},
"mxos.inc":{},
"enter2.inc":{},
"copyfileint.inc":{},
"nc.lst":{},
"drawwindow.inc":{},
"printfilepanel.inc":{},
"printspaces.inc":{},
"loadandprint.inc":{},
"tab.inc":{},
"printinfoline.inc":{},
"driver.inc":{},
"selfiletocmdline.inc":{},
"loadfiles.inc":{},
"nc.asm":{},
"memcpy_hl_de_3.inc":{},
"loadselfileat0.inc":{},
"printfilename.inc":{},
"savestate.inc":{},
"main2.inc":{},
"f7.inc":{},
"tasm85.tab":{},
"drawcursor.inc":{},
"printinfopanel.inc":{},
"nc.53248.com":{},
"f2.inc":{},
"compactname.inc":{},
"updownleftright.inc":{},
"printstring2.inc":{},
"start.inc":{},
},
},
"makerom":{
dir:1,
items:{
"r63v8.32767.exe":{},
"bas-p.0.com":{},
"rbas1.34418.exe":{},
"-makerom.js":{},
"mon2.61696.com":{},
"dos.57344.sys":{},
"asm-hq.53248.com":{},
"tbl.bin":{},
"sp-580.55296.com":{},
"format.53248.com":{},
"romfnt.0.com":{},
"prak32.28671.exe":{},
"e.53248.com":{},
"disk-h.64000.com":{},
"font.bin":{},
"mon-88.55296.com":{},
"spmx.bin":{},
"dl-red.53248.com":{},
"specsvga.bin":{},
"ramfos.0.com":{},
"prg171.32767.exe":{},
"nc.53248.com":{},
},
},
"romfont":{
dir:1,
items:{
"romfnt.lst":{},
"tasm.exe":{},
"-make.bat":{},
"romfnt.0.com":{},
"romfnt.asm":{},
"tasm85.tab":{},
},
},
"unpackrom":{
dir:1,
items:{
"-unpack.js":{},
"tbl.bin":{},
"romdisk.bin":{},
},
},
"dos.sys":{
dir:1,
items:{
"printchar5.inc":{},
"getch.inc":{},
"printchar3.inc":{},
"calccs.inc":{},
"taperead.inc":{},
"printer.inc":{},
"filegetsetattr.inc":{},
"filegetsetaddr.inc":{},
"scrollup2.inc":{},
"fileload.inc":{},
"calccursoraddr.inc":{},
"memset_de_20_b.inc":{},
"tasm.exe":{},
"reboot1.inc":{},
"scrolldown.inc":{},
"loadsavefatdir.inc":{},
"jmps_c800.inc":{},
"keyscan.inc":{},
"installdriver.inc":{},
"fileexecbat.inc":{},
"reboot2.inc":{},
"memmove_bc_hl.inc":{},
"filegetinfoaddr.inc":{},
"unpacker.asm":{},
"tapewrite.inc":{},
"tapewritedelay.inc":{},
"filecmpext.inc":{},
"printchar6.inc":{},
"memcpy_bc_hl.inc":{},
"input.inc":{},
"-make.bat":{},
"unpacker0.bin":{},
"dos.57344.sys":{},
"filedelete.inc":{},
"printchar4.inc":{},
"scrollup.inc":{},
"megalz.exe":{},
"printhex.inc":{},
"tapereaderror.inc":{},
"delay_l.inc":{},
"getch2.inc":{},
"tapeloadint.inc":{},
"jmps_c000.inc":{},
"dos.49152.mlz":{},
"filenameprepare.inc":{},
"filegetsetdrive.inc":{},
"drawcursor2.inc":{},
"getch3.inc":{},
"cmp_hl_de_2.inc":{},
"setgetcursorpos.inc":{},
"tapeload.inc":{},
"cmp_hl_de.inc":{},
"tapereaddelay.inc":{},
"driver_sel.inc":{},
"reboot3.inc":{},
"drawchar.inc":{},
"tapesave.inc":{},
"tapewriteword.inc":{},
"beep.inc":{},
"driver_ffc0.inc":{},
"dos.asm":{},
"driver.inc":{},
"filefindcluster.inc":{},
"printchar2.inc":{},
"clearscreen.inc":{},
"filelist.inc":{},
"filefind.inc":{},
"calccursoraddr2.inc":{},
"unpacker.lst":{},
"fileexec.inc":{},
"printstring.inc":{},
"setgetmemtop.inc":{},
"tasm85.tab":{},
"reboot0.inc":{},
"dos.lst":{},
"filecreate.inc":{},
"dos.49152.sys":{},
"filerename.inc":{},
"drawcursor.inc":{},
"sbb_de_hl_to_hl.inc":{},
"printstring1.inc":{},
"printchar.inc":{},
"font.inc":{},
},
},
"font":{
dir:1,
items:{
"tbl.bin":{},
"font.bin":{},
"-make.js":{},
"font.inc":{},
},
},
"original":{
dir:1,
items:{
"nc.com":{},
"nc.txt":{},
"-test.bat":{},
"font.bin":{},
"dos.sys":{},
"format.com":{},
"total.rom":{},
},
},
"specsvga.bin":{},
"disk-h":{
dir:1,
items:{
"tasm.exe":{},
"disk-h.asm":{},
"-make.bat":{},
"disk-h.64000.com":{},
"disk-h.lst":{},
"tasm85.tab":{},
},
},
},
},
"RamFOS":{
dir:1,
items:{
"ramfos":{
dir:1,
items:{
"filesave.inc":{},
"getcursorpos.inc":{},
"printchar3.inc":{},
"filesetaddr.inc":{},
"chargen.inc":{},
"memcpy_de_hl_c.inc":{},
"checkaram_v2.inc":{},
"printerhex.inc":{},
"setcolor.inc":{},
"taperead.inc":{},
"printer.inc":{},
"fileload.inc":{},
"hl_div_2.inc":{},
"capslock.inc":{},
"inputfilename.inc":{},
"tasm.exe":{},
"topline.inc":{},
"scrolldown.inc":{},
"filefromtape.inc":{},
"keyscan.inc":{},
"printchar_fast.inc":{},
"ramfos.asm":{},
"filefind1.inc":{},
"filefromtapecom.inc":{},
"pagenext.inc":{},
"filechanged.inc":{},
"errors.txt":{},
"pagewriteblock.inc":{},
"f800.inc":{},
"ramfos.lst":{},
"exec.inc":{},
"printchara.inc":{},
"fileprev.inc":{},
"cursor.inc":{},
"tapewrite.inc":{},
"pagereadblock.inc":{},
"input.inc":{},
"pushcolor.inc":{},
"-make.bat":{},
"filedelete.inc":{},
"scrollup.inc":{},
"keycheck.inc":{},
"printhex.inc":{},
"popcolor.inc":{},
"delay_l.inc":{},
"starteditordebuger.inc":{},
"deletedate.inc":{},
"keywaitnocursor.inc":{},
"setcolorchar.inc":{},
"oldbeep.inc":{},
"keywait.inc":{},
"bigrom.inc":{},
"tapepulse.inc":{},
"sub_hl_de.inc":{},
"c800.inc":{},
"tapewritepilot.inc":{},
"filesettype.inc":{},
"setcursorpos.inc":{},
"fileverify.inc":{},
"printchars.inc":{},
"keycursor.inc":{},
"cmp_hl_de.inc":{},
"biosinit.inc":{},
"window.inc":{},
"filefindfree.inc":{},
"filegetstartandsize2.inc":{},
"loadmxdos.inc":{},
"tapewait.inc":{},
"checkaram.inc":{},
"fileloadheader.inc":{},
"parsedate.inc":{},
"beep.inc":{},
"keysound.inc":{},
"memcpy_hl_de_c2.inc":{},
"ramfos_std.bin":{},
"clearline.inc":{},
"inverse.inc":{},
"calccharaddr.inc":{},
"getcharfromscreen.inc":{},
"printerecho.inc":{},
"filesetpage.inc":{},
"fileloadheader2.inc":{},
"filetotape.inc":{},
"printchar2.inc":{},
"v_printerxlat.inc":{},
"clearscreen.inc":{},
"rks.inc":{},
"dialog.inc":{},
"bottomline.inc":{},
"ramfos.bin":{},
"filefind.inc":{},
"tapereadpilot.inc":{},
"printfilename.inc":{},
"strtohex.inc":{},
"inputdate.inc":{},
"fullclearscreen.inc":{},
"filesetgetname.inc":{},
"printstring.inc":{},
"memcpyb_hl_de_c2.inc":{},
"comparefilename.inc":{},
"printerechomode.inc":{},
"setgetmemtop.inc":{},
"tasm85.tab":{},
"printstringex.inc":{},
"tapemode.inc":{},
"memcmp_hl1_de_c.inc":{},
"memcmp_hl_de_c.inc":{},
"pushpopcursor.inc":{},
"printhexword.inc":{},
"filesaveheader.inc":{},
"printchar.inc":{},
"calccrc.inc":{},
"init.inc":{},
},
},
"config.inc":{},
"tasm.exe":{},
"sdloader.inc":{},
"readme.txt":{},
"loader1.asm":{},
"loader0.asm":{},
"megalz.exe":{},
"unpackromdisk":{
dir:1,
items:{
"-unpack.js":{},
"tbl.bin":{},
"romdisk.bin":{},
},
},
"logo.inc":{},
"specialistmx2.bin":{},
"tbl.bin":{},
"romdisk.bin":{},
"unmlz.inc":{},
"romdisk":{
dir:1,
items:{
"pacman3.rks":{},
"dump_mx.59392.exe":{},
"-make-disk.js":{},
"tetris2.rks":{},
"checkers.rks":{},
"zoo.rks":{},
"ball.rks":{},
"tbl.bin":{},
"monitor2.49152.sys":{},
"keybtest.rks":{},
"ramdtst.0.exe":{},
"music.rks":{},
"basic.rks":{},
"debuger.59392.exe":{},
"colortst.54272.exe":{},
"editor.59392.exe":{},
"disasm.61440.exe":{},
},
},
"tasm85.tab":{},
"-make.js":{},
"logo":{
dir:1,
items:{
"tbl.bin":{},
"logo.bmp":{},
"-make.js":{},
},
},
},
},
},
},
"utils":{
dir:1,
items:{
"rom2wav":{
dir:1,
items:{
"sources":{
dir:1,
items:{
"bin2wav.c":{},
},
},
"bin2wav.ubuntu64":{},
"bin2wav.exe":{},
},
},
},
},
"photo":{
dir:1,
items:{
"0.jpg":{},
},
},
"russian.monitor1.html":{},
"russian.txt":{
name:"Специалист",
params:"Год\x091987\x0AОЗУ\x0948 кБ\x0AПЗУ\x092 - 16 кБ\x0AПроц\x09К580ВМ80А 2 MГц\x0AГраифка\x09384x256x2, 384x256x5, 384x256x8\x0AГруппа\x09Специалист",
body:"Специалист это советский любительский компьютер. Он появился в виде схем,\x0Aпечатных плат и 16-ричных дампов в журнале Моделист Конструктор 1987-2.\x0AРадиолюбители должны были собрать компьютер самостоятельно. Чуть позже заводы,\x0Aкооперативы, институты начали выпуск своих Специалистов.\x0A\x0AСхему Специалиста опубликовали на год позже любительского компьютера Радио 86РК.\x0AСпециалист содержал чуть больше микросхем, но зато содержал меньше редких и\x0Aдорогих микросхем, например, Специалисту не нужны КР580ВГ75, КР580ВТ57, а ПЗУ\x0AКР573РФ2 в Специалисте всего одна. Специалист состоит из ~26 маленьких микросхем\x0Aсерий К155, К589, К140; трех больших микросхем КР580ВМ80А, КР572РФ2, КР580ВВ55А;\x0Aи 16-24 микросхем памяти К565РУ3/РУ6. Вместо 24-х микросхем К565РУ6 можно\x0Aустановить 8 микросхем К565РУ5. Но главное отличие Специалиста от Радио 86РК,\x0Aэто то, что Специалист мог показывать графику. По моему личному мнению,\x0AСпециалист это 8 битный компьютер с лучшей схемотехникой. Лучшей, потому что\x0Aпростой и позволяющей получить от процессора максимум.\x0A\x0A*** ПЗУ ***\x0A\x0AПосле включения компьютера или перезагрузки на черном экране отображается\x0Aприветствие: \x22PROGRAM ?\x22 или \x22ПРОГРАММА ?\x22. Компьютер ждет загрузки программы\x0Aс магнитной ленты.\x0A\x0AСуществуют заводские компьютеры с единственной микросхемой ПЗУ КР573РФ2. Такой\x0Aкомпьютер может только лишь загружаться с магнитной ленты. И некоторые программы\x0Aне запустятся на компьютере с одной ПЗУ. В такой компьютер надо установить\x0Aвторую ПЗУ с программой \x22Монитор версии 2\x22. Версия 2 это наиболее совместимая\x0Aс существующими программами версия Монитора.\x0A\x0AЕсли у вас установлена ПЗУ с Монитором, то нажав клавишу F1 (или любая F1 - \x0AF10), а затем ENTER, вы запустите Монитор. Команды Монитора описаны на отдельной\x0Aстраницы Монитор версии 1 или Монитор версии 2.\x0A\x0A*** Графика ***\x0A\x0AУ компьютера единственный графический режим 384x256 2 цвета*. Это очень удачное\x0Aразрешение, потому что пиксель почти квадратный, разрешение соответствует\x0Aмаксимальному разрешению цветного телевизора и в строке можно разборчиво\x0Aнарисовать 64 символа, что достаточно для комфортной работы с текстами.\x0A\x0AВидеопамять устроена очень просто. Байт по адресу 9000h кодирует 8 первых точек\x0Aв первой строке экрана. Байт по адресу 9001h кодирует 8 первых точек во второй\x0Aстроке, а байт по адресу 9100h кодирует точки с 8 по 16 в первой строке и т.д.\x0AСтаршие биты располагаются слева. Установленный бит это светлая точка.\x0A\x0AЧуть позже для Специалиста была опубликована простая и гениальная доработка,\x0Aпозволяющая выводить цветную графику. Графические режимы 384x256 5 цветов и\x0A384x256 8 цветов. В обоих режимах есть ограничение, в блоке 8x1 пиксели могут\x0Aбыть только двух цветов, один из которых черный. В компьютер добавлялось всего\x0A6 микросхем. Вывод цветной графики был не значительно медленнее черно-белой.\x0AАдресное пространство оставалось прежним. Сохранялась полная совместимость с\x0Aсуществующими черно-белыми программами. Было не сложно доработать существующие\x0Aчерно-белые программы до цветных.\x0A\x0AПринцип работы этой с доработкой прост. В трёх неиспользуемых битах системного\x0Aпорта появляется порт цвета. Если в него записать код красного цвета, то после\x0Aэтого вся графика выводимая на экран будет красной.\x0A\x0AВ журнальном расширении нет возможности из программы прочитать цвет точки, что\x0Aне позволяет самым простым алгоритмом (копированием видеопамяти) выполнить\x0Aпрокрутку цветного экрана. Это было сделано ради удешевления схемы.\x0A\x0AВ большинстве компьютеров того времени процессор тормозит видеоадаптер. Они оба\x0Aобращаются к оперативной памяти. Когда обращение происходит одновременно, то\x0Aпроцессор ждет, пока не освободится память.\x0A\x0AОсобенностью Специалиста является то, что процессор не тормозится\x0Aвидеоадаптером. Процессор работает на максимальной скорости, а программист с\x0Aточностью до такта процессора знает время выполнения программы.\x0A\x0AКак же в Специалисте решили конфликт видеоадаптера и процессора? Видеоадаптер\x0Aвсегда делает две попытки чтения из памяти подряд, одного и того же адреса. Одна\x0Aиз попыток всегда удачная, потому что процессор КР580ВМ80 никогда не обращается\x0Aк памяти два раза подряд.\x0A\x0AЧастота процессора и памяти 2 МГц. Видеоадаптер делая два попытки подряд читает\x0Aданные из памяти со скоростью 1 МГц. Скорость чтения 1 МГц нам дает разрешение\x0A384 пикселя в ширину (1 МГц / 15625 Гц * 0,75 * 8 = 384 бит).\x0A\x0AПри таком подходе получается, что разрешение экрана зависит от частоты\x0Aпроцессора. Если бы частота процессора была 2.5 МГц, то разрешение было бы 480\x0Aпикселей. При частоте 2.66 МГц разрешение было бы 512 пикселей в ширину.\x0A\x0A*** Клавиатура ***\x0A\x0AУ Специалиста необычный, даже провокационный способ работы с клавиатурой.\x0AКлавиши клавиатуры объединены в матрицу, как обычно бывает, но способ работы с\x0Aэтой матрицей кнопок уникальный.\x0A\x0AВ большинстве других компьютеров напряжение подаётся на колонки матрицы, а со\x0Aстрок считывается информация о нажатых клавишах. Или наоборот, напряжение\x0Aподаётся на ряды матрицы, а с колонок считывается сигнал. Компьютер\x0Aпоследовательно подает \x220\x22 на каждый ряд, когда на всех остальных рядах \x221\x22.\x0AМежду выходами микросхемы и рядами стоят защитные диоды, которые предотвращают\x0Aкороткое замыкание между выходами микросхемы, когда пользователь нажимает\x0Aнесколько клавиш одновременно. Без диодов нажатые клавиши соединили бы два\x0Aвыхода микросхемы, соединили бы \x220\x22 и \x221\x22, что недопустимо. Строки матрицы\x0Aподтянуты резисторами к питанию и при считывании все не нажатые клавиши\x0Aсчитываются как \x221\x22.\x0A\x0AВ Специалисте же защитных диодов нет, а матрица кнопок подключена к\x0Aпараллельному порту КР580ВВ55А, который программно может изменять режим:\x0Aвход/выход. BIOS компьютера при сканировании клавиатуры сначала подаёт \x220\x22 на\x0Aвсе ряды, считывая колонки. А затем подает \x220\x22 на все колонки, считывая ряды.\x0AТак как микросхема на все выходы подаёт \x220\x22, то и замыкание ей не страшно.\x0AСтроки и ряды матрицы подтянуты резисторами к питанию и при считывании все не\x0Aнажатые клавиши считываются как \x221\x22. Всего за два обращения к клавиатуре драйвер\x0Aклавиатуры определяет нажатую клавишу.\x0A\x0AНо такой способ чтения не позволяет распознать более одной нажатой клавиши, если\x0Aнажатые клавиши не находятся в одном ряду или столбце. Если же программист решит\x0Aприменить стандартный способ, позволяющий распознать больше нажатых клавиш, т.е.\x0Aвыполнить проверку каждого ряда отдельно, то тем самым он может вывести из строя\x0Aкомпьютер. Это в теории, а на практике микросхема КР580ВВ55А переживает такое.\x0A\x0A*** Доработки ***\x0A\x0AДля Специалиста разработано множество улучшений. Многие фирмы расширяли\x0Aкомпьютер по своему, не беспокоясь о совместимости и документации. Я же\x0Aперечислю наиболее известные расширения.\x0A\x0AЛично я считаю следующим поколением компьютера Специалист любительский компьютер\x0AОрион 128. В основном он повторяет схемотехнику Специалиста, но у него стало\x0Aбольше оперативной памяти, два графических режима, процессор работает на частоте\x0A2.5 МГц. Из-за повышения скорости процессора изображение занимает не весь экран.\x0AВ Орионе появилась возможность прочитать цвет точки из программы, использовать\x0Aцветную видеопамять для хранения данных, но при этом скорость вывода графики\x0Aстала значительно медленнее. Прямой совместимости у Специалиста и Ориона нет.\x0A\x0AЯ разработал два расширения для Специалиста:\x0A\x0A* Подключение PS/2 клавиатуры.\x0A* Подключение SD карты.\x0A\x0A",},
"russian.monitor2.html":{},
"software":{
dir:1,
items:{
"games":{
dir:1,
items:{
"jet-set.rks":{},
"land_c.rks":{},
"scrap2.rks":{},
"file_id.diz":{},
"helicopt.rks":{},
"land_s.rks":{},
"starwars.rks":{},
"jumpjek.rks":{},
"stena2.rks":{},
"tennis.rks":{},
"mars.rks":{},
"lamp.rks":{},
"gs_1.txt":{},
"tennis3.rks":{},
"tetris5.rks":{},
"defence.rks":{},
"gr_demo.rks":{},
"starwar2.rks":{},
"pacman3.rks":{},
"cosman.rks":{},
"piton3.rks":{},
"wwar.rks":{},
"samfox.rks":{},
"land.rks":{},
"gs_3.txt":{},
"krestno.rks":{},
"tetris2.rks":{},
"v-perehv.rks":{},
"chess4.rks":{},
"pusher.rks":{},
"descript2.ion":{},
"saboteur.rks":{},
"descript.ion":{},
"adskok.rks":{},
"chess.rks":{},
"checkers.rks":{},
"scrapper.rks":{},
"stakan.rks":{},
"cat.rks":{},
"rally2.rks":{},
"sonata.rks":{},
"dash2.rks":{},
"ochko.rks":{},
"gs_4.txt":{},
"harrier.rks":{},
"piton2.rks":{},
"skachki2.rks":{},
"file_id3.diz":{},
"piton1.rks":{},
"mars2.rks":{},
"pentax.rks":{},
"klad.rks":{},
"stakan2.rks":{},
"vampir.rks":{},
"skachki.rks":{},
"budi.rks":{},
"rally.rks":{},
"robot.rks":{},
"nardy.rks":{},
"zoo.rks":{},
"udav.rks":{},
"r-test.rks":{},
"krot.rks":{},
"tip-top.rks":{},
"reversi3.rks":{},
"ball.rks":{},
"digger.rks":{},
"psst.rks":{},
"football.rks":{},
"treasure.rks":{},
"tutankh.rks":{},
"dushman.rks":{},
"pogonya.rks":{},
"file_id2.diz":{},
"stena.rks":{},
"dash1.rks":{},
"treasur2.rks":{},
"patrol.rks":{},
"sp_king.rks":{},
"adventur.rks":{},
"tetris3.rks":{},
"downeart.rks":{},
"klad2.rks":{},
"vertol2.rks":{},
"lines.rks":{},
"spatrol.rks":{},
"riseout.rks":{},
"paket.rks":{},
"lrunner.rks":{},
"budi2.rks":{},
"gold.rks":{},
"reversi2.rks":{},
"almaz.rks":{},
"file_id4.diz":{},
"tetris-m.rks":{},
"dushman2.rks":{},
"nardy2.rks":{},
"kolobki.rks":{},
"tetris4.rks":{},
"peregon.rks":{},
"popcorn.rks":{},
"cooky.rks":{},
"buran.rks":{},
"kom13_1.rks":{},
"music.rks":{},
"suppiton.rks":{},
"gs_2.txt":{},
"ladder.rks":{},
"rain.rks":{},
"bkt.rks":{},
"pango.rks":{},
"pool.rks":{},
"loderun.rks":{},
"square.rks":{},
"chess3.rks":{},
"chess2.rks":{},
"pilot.rks":{},
"vertolet.rks":{},
"startrek.rks":{},
"copter.rks":{},
"circus.rks":{},
"dungeon2.rks":{},
"tetris1.rks":{},
"manager.rks":{},
"dungeon.rks":{},
"titan.rks":{},
"tip-top2.rks":{},
"pacman2.rks":{},
"kamikadz.rks":{},
"spking2.rks":{},
"kom13_2.rks":{},
"xonix.rks":{},
"arcanoid.rks":{},
"descript4.ion":{},
"tennis2.rks":{},
"reversi.rks":{},
"piton4.rks":{},
"peregon2.rks":{},
"descript3.ion":{},
"pacman.rks":{},
},
},
"for_mx2":{
dir:1,
items:{
"1":{
dir:1,
items:{
"dump_mx.59392.exe":{},
"tetris_3.0.exe":{},
"dump_mx.59392.com":{},
"test-m.54272.exe":{},
"musictst.0.exe":{},
"ramdtst.0.exe":{},
"destroy.4608.exe":{},
"chess.0.exe":{},
"boulder2.7664.exe":{},
"debuger.59392.exe":{},
"colortst.54272.exe":{},
"beat_3_0.exe":{},
"editor.59392.exe":{},
"col_ball.23552.exe":{},
"disasm.61440.exe":{},
},
},
"2":{
dir:1,
items:{
"r_test.cpu":{},
"basic.i80":{},
"forth.i80":{},
"maestro.i80":{},
"layout.i80":{},
"mus_ed.i80":{},
"test.i80":{},
"m2_d400.mon":{},
"mus_edm1.i80":{},
"r_test.i80":{},
"b1_d800.mon":{},
"basic.cpu":{},
"forth.cpu":{},
"mus_edm1.cpu":{},
"m3_6800.mon":{},
"b2_d7e9.mon":{},
"debug1.cpu":{},
"lastword.i80":{},
"mus_ed.cpu":{},
"r6_0000.mon":{},
"mus_edm0.i80":{},
"rk_d800.mon":{},
"m1_d800.mon":{},
"basic_m.cpu":{},
"music.cpu":{},
"test_mx.rom":{},
"mx_d400.mon":{},
"music.i80":{},
"specimx.rom":{},
"nc.rom":{},
"basic_m.i80":{},
"xtree.i80":{},
"ncrdy.rom":{},
"mp_0000.mon":{},
"debug2.i80":{},
"test.cpu":{},
"lastword.cpu":{},
"maestro.cpu":{},
"debug1.i80":{},
"layout.cpu":{},
"b3_d800.mon":{},
"xtree.cpu":{},
"mus_edm0.cpu":{},
"debug2.cpu":{},
},
},
},
},
"software":{
dir:1,
items:{
"bas-srv.rks":{},
"bas-s.rks":{},
"bas-sg.rks":{},
"descript.ion":{},
"assm.rks":{},
"bas-gr.rks":{},
"debug.rks":{},
"asm-ed1.rks":{},
"basic-a.rks":{},
"bas-new.rks":{},
"progr2.rks":{},
"bas-cir.rks":{},
"dssm.rks":{},
"const1.rks":{},
"forth.rks":{},
"bas-mag2.rks":{},
"basic2.rks":{},
"progr1.rks":{},
"bas-micr.rks":{},
"bas-spec.rks":{},
"bas-mic2.rks":{},
"basic.rks":{},
"basic3.rks":{},
"basmic87.rks":{},
"bas-mag.rks":{},
"renum.rks":{},
"bas-rdk.rks":{},
"asm-ed2.rks":{},
"debug2.rks":{},
"mus-syst.rks":{},
"const2.rks":{},
"basic1.rks":{},
"bas-kbh.rks":{},
"dssm2.rks":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"monitor_version_1":{
dir:1,
items:{
"c800_monitor.rom":{},
"c000_loader.rom":{},
"e000_basic.rom":{},
"d800_basic.rom":{},
"d000_basic.rom":{},
},
},
"monitor_version_2":{
dir:1,
items:{
"c800_monitor.rom":{},
"c000_loader.rom":{},
"d000_font.rom":{},
"c800_monitor_for_color.rom":{},
},
},
"tests":{
dir:1,
items:{
"c000_test.doc":{},
"c000_test.rom":{},
},
},
},
},
"my_emulator":{
dir:1,
items:{
"file_buran.js":{},
"specialistkeyboard.js":{},
"file_cat.js":{},
"file_jumpjek.js":{},
"file_budi.js":{},
"file_digger.js":{},
"specialistrom.js":{},
"filelist.js":{},
"file_loderun.js":{},
"file_psst.js":{},
"file_lines.js":{},
"i8080.js":{},
"specialistemu.js":{},
"file_zoo.js":{},
"specialistvideo.js":{},
"index.html":{},
"file_dash2.js":{},
"file_dash1.js":{},
"file_adskok.js":{},
"file_arcanoid.js":{},
"file_samfox.js":{},
"file_basic.js":{},
},
},
"my_extensons":{
dir:1,
items:{
"ps2_keyboard":{
dir:1,
items:{
"ps2_ready.png":{},
"ps2_fuses.png":{},
"russian.html":{},
"ps2_ready3.png":{},
"codes.png":{},
"atmega8_firmware":{
dir:1,
items:{
"spec_keyb.hex":{},
"sources":{
dir:1,
items:{
"_clean.bat":{},
"spec_keyb.c":{},
"spec_keyb.prj":{},
},
},
},
},
"ps2_codes.png":{},
"ps2_cir.png":{},
"pcb_circuit_tqfp":{
dir:1,
items:{
"ready_top.jpg":{},
"bottom.png":{},
"top.png":{},
"pin_descr.txt":{},
"keyb.png":{},
"plata.docx":{},
"keyb.do":{},
"ready_bottom.jpg":{},
"keyb.dsn":{},
"keyb.sts":{},
"keyb2.png":{},
"pin_descr.jpg":{},
"keyb.lyt":{},
"keyb.edf":{},
},
},
"pcb_circuit_dip":{
dir:1,
items:{
"keyb.png":{},
"plata.docx":{},
"keyb.do":{},
"keyb.dsn":{},
"keyb.sts":{},
"keyb.lyt":{},
"keyb.edf":{},
},
},
"key_bindings_setup.html":{},
"default.png":{},
"ps2_ready2.png":{},
"ps2_codes_default.png":{},
},
},
"sd_controller":{
dir:1,
items:{
"ps2_fuses.png":{},
"pcb_dip_от_mifody":{
dir:1,
items:{
"specialist sd card reader.lay":{},
},
},
"sd_cir.png":{},
"russian.html":{},
"atmega8_firmware":{
dir:1,
items:{
"sources":{
dir:1,
items:{
"proto.h":{},
"fs.c":{},
"sd.h":{},
"spi.h":{},
"sd.c":{},
"specsd.c":{},
"fs.h":{},
"_clean.bat":{},
"specsd.prj":{},
"spi.c":{},
"proto.c":{},
"common.h":{},
},
},
"specsd.hex":{},
"specsd.rom":{},
},
},
"pcb_tqfp":{
dir:1,
items:{
"ready_top.jpg":{},
"bottom.png":{},
"top.png":{},
"pin_descr.txt":{},
"plata.docx":{},
"ready_bottom.jpg":{},
"shema.png":{},
"specsd_tqfp.dsn":{},
"pin_descr.jpg":{},
"specsd_tqfp.lyt":{},
},
},
"pcb_dip":{
dir:1,
items:{
"specsd_dip.dsn":{},
"specsd_dip.lyt":{},
},
},
"specialist_firmware":{
dir:1,
items:{
"sources":{
dir:1,
items:{
"stdbios_a.bin":{},
"-make.bat":{},
"stdbios_c.bin":{},
"stdbios_b.bin":{},
},
},
"bios8.rom":{},
},
},
"sources":{
dir:1,
items:{
"shell_rks":{
dir:1,
items:{
"shell.h":{},
"cmd_delete.c":{},
"stdlib8080.inc":{},
"graph.c":{},
"fon_spets.bin":{},
"keyb.h":{},
"errors.txt":{},
"shell.rks":{},
"shell.lst":{},
"graph.h":{},
"cmd_run.c":{},
"fon_spets.inc":{},
"-compile.bat":{},
"cmd_mkdir.c":{},
"keyb.c":{},
"do.txt":{},
"cmd_copymove.c":{},
"shell.c":{},
"cmd_freespace.c":{},
"tasm85.tab":{},
"dlg.h":{},
"shell.asm":{},
"files.h":{},
"dlg.c":{},
},
},
"boot_rks":{
dir:1,
items:{
"e.bin":{},
"boot.lst":{},
"tasm.exe":{},
"-make.bat":{},
"e.lst":{},
"boot.rks":{},
"s.asm":{},
"boot.bin":{},
"tasm85.tab":{},
"s.bin":{},
"boot.asm":{},
"e.asm":{},
"s.lst":{},
},
},
"c8080":{
dir:1,
items:{
"c8080.exe":{},
"tasm.exe":{},
"tasm85.tab":{},
"include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"op_cmp16":{},
"spec":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"setcolor.c":{},
"clrscr.c":{},
"fs_read.c":{},
"fs.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"bios.h":{},
"fs_seek.c":{},
"setcolorautodisable.c":{},
"fs_swap.c":{},
"key.h":{},
"fs_exec.c":{},
"putch.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
"color.h":{},
},
},
"strchr.c":{},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"op_mul":{},
"stdlib.h":{},
"n":{
dir:1,
items:{
"div32.c":{},
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_ig":{},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"getmemtop.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
"sound.h":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"op_shr":{},
},
},
},
},
"sdbios_rks":{
dir:1,
items:{
"sdbios.lst":{},
"tasm.exe":{},
"-make.bat":{},
"sdbios.rks":{},
"tasm85.tab":{},
"sdbios.asm":{},
},
},
},
},
"sd_ready2.jpg":{},
"specialist_firmware_and_sd_starter":{
dir:1,
items:{
"source":{
dir:1,
items:{
"tasm.exe":{},
"-make.bat":{},
"stdbios_a_corrected.bin":{},
"loader.asm":{},
"stdbios_c.bin":{},
"loader.bin":{},
"stdbios_b.bin":{},
"loader.lst":{},
"tasm85.tab":{},
},
},
"bios8.rom":{},
},
},
"sd_ready3.jpg":{},
"sd_ready.jpg":{},
"sdcard_contents":{
dir:1,
items:{
"boot":{
dir:1,
items:{
"shell.rks":{},
"boot.rks":{},
"sdbios.rks":{},
},
},
},
},
},
},
},
},
"my_utils":{
dir:1,
items:{
},
},
"start_screen.png":{},
"doc":{
dir:1,
items:{
"Specialist_Circuit_16_colors.djvu":{},
"All_articles_from_magazine_Modelist_Constructor":{
dir:1,
items:{
"mk1989_04.djvu":{},
"mk1991_05.djvu":{},
"mk1994_03.djvu":{},
"mk1990_08.djvu":{},
"mk1990_01.djvu":{},
"mk1990_12.djvu":{},
"mk1987_07.djvu":{},
"mk1987_02.djvu":{},
"mk1997_01.djvu":{},
"mk1987_06.djvu":{},
"mk1989_12.djvu":{},
"mk1991_12.djvu":{},
"mk1991_02.djvu":{},
"mk1990_02.djvu":{},
"mk1991_01.djvu":{},
"mk1988_04.djvu":{},
"mk1991_08.djvu":{},
"mk1988_06.djvu":{},
"mk1990_03.djvu":{},
"mk1987_03.djvu":{},
"mk1995_06.djvu":{},
"mk1991_03.djvu":{},
"mk1991_11.djvu":{},
"mk1996_04.djvu":{},
"mk1988_10.djvu":{},
"mk1994_10.djvu":{},
"mk1988_08.djvu":{},
"mk1991_04.djvu":{},
"mk1988_09.djvu":{},
"mk1991_09.djvu":{},
"mk1989_06.djvu":{},
"mk1987_05.djvu":{},
},
},
"Specialist_Circuit.png":{},
},
},
},
synced:{
"Specialist/russian.monitor1.html": "Специалист. Монитор версии 1.",
"Specialist/russian.monitor2.html": "Специалист. Монитор версии 2.",
},
},
"Krista_2":{
dir:1,
items:{
"english.txt":{
name:"Krista 2",
params:"Year\x09≤1990\x0ARAM\x0964 kB\x0AROM\x090.5 kB\x0ACPU\x09i8080 2.5 MHz\x0AGraph\x091024x256x2, 512x256x4, 256x256x16\x0ASound\x09i8253 x3\x0AGroup\x09Vector 06C",
body:"Krista 2 is a Soviet home computer. This computer is partially compatible with\x0Athe Vector 06C computer. Unlike the Vector 06C computer, the Krista 2 computer\x0Adoes not have a palette, 16 colors are fixed, the processor speed is lower, the\x0Atape recording format is different. Krista has very few own programs.\x0A",},
"utils":{
dir:1,
items:{
"rom2wav_2":{
dir:1,
items:{
"source":{
dir:1,
items:{
"bin2wav.c":{},
},
},
"bin2wav.ubuntu64":{},
"bin2wav.exe":{},
},
},
"rom2wav_1":{
dir:1,
items:{
"Rom2WavKrista2.exe":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Криста 2",
params:"Год\x09≤1990\x0AОЗУ\x0964 кБ\x0AПЗУ\x090.5 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AГрафика\x091024x256x2, 512x256x4, 256x256x16\x0AЗвук\x09К580ВИ53 x3\x0AГруппа\x09Вектор 06Ц",
body:"Криста 2 это советский домашний компьютер. Этот компьютер частично совестим с\x0Aкомпьютером Вектор 06Ц. В отличии от компьютера Вектор 06Ц в компьютере Криста 2\x0Aнет палитры, 16 цветов фиксированные, скорость процессора ниже, формат записи на\x0Aмагнитофонную ленту отличается. Своих программ у Кристы очень мало.\x0A",},
"software":{
dir:1,
items:{
"kresnull.r44":{},
"pdizzy.rom":{},
"a05-krestiki-noliki.r44":{},
"a03-tetris.rom":{},
"b02-basic.txt":{},
"mbr.rom":{},
"a04-gibbon.txt":{},
"posadka.rom":{},
"copyc.txt":{},
"posad06c.rom":{},
"mbr.r71":{},
"a05-krestiki-noliki.txt":{},
"a01-test.rom":{},
"kresnull.rom":{},
"copyc.rom":{},
"rockford.rom":{},
"putup.rom":{},
"a08-transassembler.txt":{},
"b02-basic.r0m":{},
"a08-transassembler.r0m":{},
"a10-copyb.r59":{},
"a01-test.mp3":{},
"konfetti.rom":{},
"exolon.rom":{},
"a02-graphed.txt":{},
"b01-usermanual.txt":{},
"a03-tetris.txt":{},
"b01-usermanual.r03":{},
"a09-copya.r5f":{},
"a04-gibbon.rom":{},
"krista_l.txt":{},
"krista_l.rom":{},
"mbr.txt":{},
"a01-test.txt":{},
"posadka [pack].rom":{},
"a06-texteditor.r57":{},
"a10-copyb.txt":{},
"krista_l.r70":{},
"a07-ukart.r0m":{},
"a06-texteditor.txt":{},
"a02-graphed.r60":{},
"ghostbus.rom":{},
"a09-copya.txt":{},
"a07-ukart.txt":{},
},
},
"firmware":{
dir:1,
items:{
"super.bin":{},
"super.txt":{},
},
},
"doc":{
dir:1,
items:{
"Krista_2_Secrets_1.txt":{},
"Krista_2_User_manual_2.djvu":{},
"Krista_2_Secrets_2.txt":{},
"Krista_2_Circuits.djvu":{},
"Krista_2_Floppy.txt":{},
"Krista_2_Floppy_1.txt":{},
"Krista_2_Gepard_tape_software.djvu":{},
"Krista_2_ROM_description.djvu":{},
"Krista_2_Floppy_2.txt":{},
"Krista_2_User_manual.djvu":{},
"Krista_2_Floppy_controller_circuit.gif":{},
"Krista_2_Gepard_floppy_software.djvu":{},
},
},
},
},
"_TV_to_VGA_converter_on_microcontroller_sources":{
dir:1,
items:{
"monochrome_stm32f103":{
dir:1,
items:{
"files":{},
"Inc":{
dir:1,
items:{
"main.h":{},
"stm32f1xx_hal_conf.h":{},
"stm32f1xx_it.h":{},
},
},
"startup_stm32f105xc.s":{},
"Makefile":{},
"internal_stm32_hardware_links.svg":{},
"monochrome_stm32f103.ioc":{},
"monochrome_stm32f103.creator":{},
"photo3.jpg":{},
"prog":{},
".mxproject":{},
"circuit.png":{},
"photo2.jpg":{},
"circuit.dsn":{},
"STM32F105R8Tx_FLASH.ld":{},
"monochrome_stm32f103.files":{},
"photo5.jpg":{},
"photo1.jpg":{},
"photo4.jpg":{},
"orion.bin":{},
"Src":{
dir:1,
items:{
"stm32f1xx_it.c":{},
"old_dma.c":{},
"orion.c":{},
"orion.h":{},
"old_dma.h":{},
"system_stm32f1xx.c":{},
"main.c":{},
"stm32f1xx_hal_msp.c":{},
},
},
"Drivers":{
dir:1,
items:{
"STM32F1xx_HAL_Driver":{
dir:1,
items:{
"Inc":{
dir:1,
items:{
"stm32f1xx_ll_utils.h":{},
"stm32f1xx_hal_spi.h":{},
"stm32f1xx_ll_system.h":{},
"stm32f1xx_hal_dma.h":{},
"stm32f1xx_hal_can.h":{},
"stm32f1xx_hal_rtc.h":{},
"stm32_assert_template.h":{},
"stm32f1xx_hal_gpio.h":{},
"stm32f1xx_ll_usart.h":{},
"stm32f1xx_hal.h":{},
"stm32f1xx_hal_usart.h":{},
"stm32f1xx_hal_flash_ex.h":{},
"stm32f1xx_hal_adc_ex.h":{},
"stm32f1xx_ll_i2c.h":{},
"stm32f1xx_hal_pcd_ex.h":{},
"stm32f1xx_hal_sram.h":{},
"stm32f1xx_hal_gpio_ex.h":{},
"stm32f1xx_hal_hcd.h":{},
"stm32f1xx_hal_pwr.h":{},
"stm32f1xx_ll_gpio.h":{},
"stm32f1xx_hal_i2c.h":{},
"stm32f1xx_ll_sdmmc.h":{},
"stm32f1xx_ll_adc.h":{},
"stm32f1xx_ll_cortex.h":{},
"stm32f1xx_ll_dac.h":{},
"stm32f1xx_hal_rtc_ex.h":{},
"stm32f1xx_hal_nand.h":{},
"stm32f1xx_ll_spi.h":{},
"stm32f1xx_hal_crc.h":{},
"stm32f1xx_hal_dac_ex.h":{},
"stm32f1xx_hal_tim_ex.h":{},
"stm32f1xx_ll_rtc.h":{},
"stm32f1xx_hal_dac.h":{},
"stm32f1xx_hal_cec.h":{},
"stm32f1xx_hal_mmc.h":{},
"stm32f1xx_ll_wwdg.h":{},
"stm32f1xx_ll_exti.h":{},
"stm32f1xx_hal_conf_template.h":{},
"stm32f1xx_ll_crc.h":{},
"stm32f1xx_hal_dma_ex.h":{},
"Legacy":{
dir:1,
items:{
"stm32_hal_legacy.h":{},
},
},
"stm32f1xx_hal_wwdg.h":{},
"stm32f1xx_hal_i2s.h":{},
"stm32f1xx_hal_uart.h":{},
"stm32f1xx_hal_sd.h":{},
"stm32f1xx_hal_rcc.h":{},
"stm32f1xx_ll_fsmc.h":{},
"stm32f1xx_hal_nor.h":{},
"stm32f1xx_hal_tim.h":{},
"stm32f1xx_hal_can_ex.h":{},
"stm32f1xx_ll_dma.h":{},
"stm32f1xx_ll_tim.h":{},
"stm32f1xx_ll_bus.h":{},
"stm32f1xx_hal_smartcard.h":{},
"stm32f1xx_hal_adc.h":{},
"stm32f1xx_ll_rcc.h":{},
"stm32f1xx_ll_usb.h":{},
"stm32f1xx_hal_pccard.h":{},
"stm32f1xx_hal_cortex.h":{},
"stm32f1xx_hal_pcd.h":{},
"stm32f1xx_hal_iwdg.h":{},
"stm32f1xx_ll_pwr.h":{},
"stm32f1xx_hal_irda.h":{},
"stm32f1xx_hal_eth.h":{},
"stm32f1xx_ll_iwdg.h":{},
"stm32f1xx_hal_rcc_ex.h":{},
"stm32f1xx_hal_def.h":{},
"stm32f1xx_hal_flash.h":{},
},
},
"Src":{
dir:1,
items:{
"stm32f1xx_hal_dac.c":{},
"stm32f1xx_hal_hcd.c":{},
"stm32f1xx_ll_gpio.c":{},
"stm32f1xx_hal_crc.c":{},
"stm32f1xx_hal_rcc.c":{},
"stm32f1xx_ll_utils.c":{},
"stm32f1xx_hal_pcd.c":{},
"stm32f1xx_hal_i2s.c":{},
"stm32f1xx_ll_usb.c":{},
"stm32f1xx_ll_spi.c":{},
"stm32f1xx_ll_sdmmc.c":{},
"stm32f1xx_ll_rcc.c":{},
"stm32f1xx_hal_spi_ex.c":{},
"stm32f1xx_hal_tim_ex.c":{},
"stm32f1xx_ll_dma.c":{},
"stm32f1xx_hal_dac_ex.c":{},
"stm32f1xx_ll_i2c.c":{},
"stm32f1xx_ll_pwr.c":{},
"stm32f1xx_hal_adc.c":{},
"stm32f1xx_hal_msp_template.c":{},
"stm32f1xx_hal_rcc_ex.c":{},
"stm32f1xx_hal_sd.c":{},
"stm32f1xx_hal_i2c.c":{},
"stm32f1xx_hal_pcd_ex.c":{},
"stm32f1xx_hal_can.c":{},
"stm32f1xx_hal_smartcard.c":{},
"stm32f1xx_ll_crc.c":{},
"stm32f1xx_hal_uart.c":{},
"stm32f1xx_hal_nand.c":{},
"stm32f1xx_hal_wwdg.c":{},
"stm32f1xx_hal_mmc.c":{},
"stm32f1xx_hal_nor.c":{},
"stm32f1xx_hal_tim.c":{},
"stm32f1xx_hal_flash_ex.c":{},
"stm32f1xx_hal_pwr.c":{},
"stm32f1xx_hal_flash.c":{},
"stm32f1xx_hal_dma.c":{},
"stm32f1xx_ll_exti.c":{},
"stm32f1xx_ll_fsmc.c":{},
"stm32f1xx_hal_rtc.c":{},
"stm32f1xx_ll_tim.c":{},
"stm32f1xx_hal_timebase_rtc_alarm_template.c":{},
"stm32f1xx_hal_spi.c":{},
"stm32f1xx_hal_eth.c":{},
"stm32f1xx_hal_adc_ex.c":{},
"stm32f1xx_hal_gpio_ex.c":{},
"stm32f1xx_ll_rtc.c":{},
"stm32f1xx_ll_dac.c":{},
"stm32f1xx_hal_pccard.c":{},
"stm32f1xx_hal_rtc_ex.c":{},
"stm32f1xx_hal_sram.c":{},
"stm32f1xx_ll_usart.c":{},
"stm32f1xx_hal_gpio.c":{},
"stm32f1xx_hal_iwdg.c":{},
"stm32f1xx_hal_cec.c":{},
"stm32f1xx_ll_adc.c":{},
"stm32f1xx_hal_irda.c":{},
"stm32f1xx_hal.c":{},
"stm32f1xx_hal_usart.c":{},
"stm32f1xx_hal_cortex.c":{},
"stm32f1xx_hal_timebase_tim_template.c":{},
},
},
},
},
"CMSIS":{
dir:1,
items:{
"Device":{
dir:1,
items:{
"ST":{
dir:1,
items:{
"STM32F1xx":{
dir:1,
items:{
"Source":{
dir:1,
items:{
"Templates":{
dir:1,
items:{
"gcc":{
dir:1,
items:{
"startup_stm32f103xe.s":{},
"startup_stm32f100xb.s":{},
"startup_stm32f105xc.s":{},
"startup_stm32f103x6.s":{},
"startup_stm32f101xb.s":{},
"startup_stm32f107xc.s":{},
"startup_stm32f102xb.s":{},
"startup_stm32f103xg.s":{},
"startup_stm32f101x6.s":{},
"startup_stm32f102x6.s":{},
"startup_stm32f101xe.s":{},
"startup_stm32f101xg.s":{},
"startup_stm32f100xe.s":{},
"startup_stm32f103xb.s":{},
},
},
"arm":{
dir:1,
items:{
"startup_stm32f103xe.s":{},
"startup_stm32f100xb.s":{},
"startup_stm32f105xc.s":{},
"startup_stm32f103x6.s":{},
"startup_stm32f101xb.s":{},
"startup_stm32f107xc.s":{},
"startup_stm32f102xb.s":{},
"startup_stm32f103xg.s":{},
"startup_stm32f101x6.s":{},
"startup_stm32f102x6.s":{},
"startup_stm32f101xe.s":{},
"startup_stm32f101xg.s":{},
"startup_stm32f100xe.s":{},
"startup_stm32f103xb.s":{},
},
},
"iar":{
dir:1,
items:{
"startup_stm32f103xe.s":{},
"startup_stm32f100xb.s":{},
"startup_stm32f105xc.s":{},
"startup_stm32f103x6.s":{},
"startup_stm32f101xb.s":{},
"startup_stm32f107xc.s":{},
"linker":{
dir:1,
items:{
"stm32f101x6_sram.icf":{},
"stm32f101xb_flash.icf":{},
"stm32f103x6_sram.icf":{},
"stm32f105xc_flash.icf":{},
"stm32f102x6_flash.icf":{},
"stm32f100xb_sram.icf":{},
"stm32f103xg_flash.icf":{},
"stm32f107xc_flash.icf":{},
"stm32f101xe_flash.icf":{},
"stm32f102xb_sram.icf":{},
"stm32f101xe_sram.icf":{},
"stm32f102xb_flash.icf":{},
"stm32f103xb_flash.icf":{},
"stm32f103xe_sram.icf":{},
"stm32f103xb_sram.icf":{},
"stm32f100xe_flash.icf":{},
"stm32f101x6_flash.icf":{},
"stm32f101xb_sram.icf":{},
"stm32f103x6_flash.icf":{},
"stm32f105xc_sram.icf":{},
"stm32f100xb_flash.icf":{},
"stm32f101xg_sram.icf":{},
"stm32f107xc_sram.icf":{},
"stm32f101xg_flash.icf":{},
"stm32f102x6_sram.icf":{},
"stm32f103xe_flash.icf":{},
"stm32f100xe_sram.icf":{},
"stm32f103xg_sram.icf":{},
},
},
"startup_stm32f102xb.s":{},
"startup_stm32f103xg.s":{},
"startup_stm32f101x6.s":{},
"startup_stm32f102x6.s":{},
"startup_stm32f101xe.s":{},
"startup_stm32f101xg.s":{},
"startup_stm32f100xe.s":{},
"startup_stm32f103xb.s":{},
},
},
"system_stm32f1xx.c":{},
},
},
},
},
"Include":{
dir:1,
items:{
"stm32f1xx.h":{},
"stm32f102x6.h":{},
"stm32f101xb.h":{},
"stm32f101xg.h":{},
"stm32f107xc.h":{},
"stm32f102xb.h":{},
"stm32f105xc.h":{},
"stm32f103xg.h":{},
"stm32f101xe.h":{},
"stm32f100xe.h":{},
"stm32f101x6.h":{},
"stm32f100xb.h":{},
"system_stm32f1xx.h":{},
"stm32f103xb.h":{},
"stm32f103xe.h":{},
"stm32f103x6.h":{},
},
},
},
},
},
},
},
},
"DSP_Lib":{
dir:1,
items:{
"Source":{
dir:1,
items:{
"StatisticsFunctions":{
dir:1,
items:{
"arm_power_q31.c":{},
"arm_var_q31.c":{},
"arm_mean_f32.c":{},
"arm_mean_q31.c":{},
"arm_min_q31.c":{},
"arm_power_q15.c":{},
"arm_rms_q31.c":{},
"arm_std_q15.c":{},
"arm_power_q7.c":{},
"arm_rms_f32.c":{},
"arm_min_f32.c":{},
"arm_var_f32.c":{},
"arm_rms_q15.c":{},
"arm_min_q7.c":{},
"arm_std_f32.c":{},
"arm_var_q15.c":{},
"arm_max_q7.c":{},
"arm_max_f32.c":{},
"arm_mean_q15.c":{},
"arm_std_q31.c":{},
"arm_max_q31.c":{},
"arm_max_q15.c":{},
"arm_power_f32.c":{},
"arm_mean_q7.c":{},
"arm_min_q15.c":{},
},
},
"ControllerFunctions":{
dir:1,
items:{
"arm_pid_init_q31.c":{},
"arm_pid_reset_q15.c":{},
"arm_sin_cos_f32.c":{},
"arm_pid_init_f32.c":{},
"arm_sin_cos_q31.c":{},
"arm_pid_reset_f32.c":{},
"arm_pid_init_q15.c":{},
"arm_pid_reset_q31.c":{},
},
},
"ComplexMathFunctions":{
dir:1,
items:{
"arm_cmplx_conj_q31.c":{},
"arm_cmplx_conj_q15.c":{},
"arm_cmplx_mult_real_f32.c":{},
"arm_cmplx_mult_cmplx_f32.c":{},
"arm_cmplx_conj_f32.c":{},
"arm_cmplx_mag_f32.c":{},
"arm_cmplx_mult_cmplx_q15.c":{},
"arm_cmplx_mag_squared_q31.c":{},
"arm_cmplx_mag_q15.c":{},
"arm_cmplx_dot_prod_q15.c":{},
"arm_cmplx_mult_real_q15.c":{},
"arm_cmplx_dot_prod_q31.c":{},
"arm_cmplx_dot_prod_f32.c":{},
"arm_cmplx_mult_real_q31.c":{},
"arm_cmplx_mult_cmplx_q31.c":{},
"arm_cmplx_mag_squared_f32.c":{},
"arm_cmplx_mag_squared_q15.c":{},
"arm_cmplx_mag_q31.c":{},
},
},
"BasicMathFunctions":{
dir:1,
items:{
"arm_mult_f32.c":{},
"arm_shift_q15.c":{},
"arm_scale_q31.c":{},
"arm_shift_q31.c":{},
"arm_mult_q31.c":{},
"arm_offset_q7.c":{},
"arm_dot_prod_f32.c":{},
"arm_mult_q7.c":{},
"arm_dot_prod_q7.c":{},
"arm_add_f32.c":{},
"arm_shift_q7.c":{},
"arm_sub_q31.c":{},
"arm_add_q31.c":{},
"arm_dot_prod_q31.c":{},
"arm_sub_f32.c":{},
"arm_sub_q7.c":{},
"arm_negate_q7.c":{},
"arm_mult_q15.c":{},
"arm_scale_q15.c":{},
"arm_sub_q15.c":{},
"arm_add_q15.c":{},
"arm_offset_q31.c":{},
"arm_abs_q7.c":{},
"arm_scale_q7.c":{},
"arm_dot_prod_q15.c":{},
"arm_negate_f32.c":{},
"arm_scale_f32.c":{},
"arm_add_q7.c":{},
"arm_abs_q15.c":{},
"arm_offset_q15.c":{},
"arm_abs_f32.c":{},
"arm_abs_q31.c":{},
"arm_offset_f32.c":{},
"arm_negate_q15.c":{},
"arm_negate_q31.c":{},
},
},
"FilteringFunctions":{
dir:1,
items:{
"arm_correlate_q15.c":{},
"arm_conv_partial_fast_opt_q15.c":{},
"arm_biquad_cascade_df1_q31.c":{},
"arm_biquad_cascade_df1_q15.c":{},
"arm_fir_interpolate_q15.c":{},
"arm_fir_decimate_init_f32.c":{},
"arm_conv_q7.c":{},
"arm_fir_sparse_q15.c":{},
"arm_fir_lattice_q31.c":{},
"arm_fir_q7.c":{},
"arm_fir_interpolate_f32.c":{},
"arm_fir_f32.c":{},
"arm_fir_fast_q31.c":{},
"arm_correlate_fast_q15.c":{},
"arm_biquad_cascade_stereo_df2T_init_f32.c":{},
"arm_fir_sparse_init_q15.c":{},
"arm_conv_fast_q31.c":{},
"arm_fir_lattice_init_f32.c":{},
"arm_correlate_q31.c":{},
"arm_fir_q15.c":{},
"arm_correlate_fast_q31.c":{},
"arm_fir_lattice_init_q31.c":{},
"arm_conv_partial_q7.c":{},
"arm_fir_sparse_q31.c":{},
"arm_biquad_cascade_df1_init_q15.c":{},
"arm_conv_partial_q15.c":{},
"arm_fir_decimate_q15.c":{},
"arm_biquad_cascade_df1_32x64_q31.c":{},
"arm_lms_norm_f32.c":{},
"arm_biquad_cascade_df2T_f32.c":{},
"arm_iir_lattice_init_q31.c":{},
"arm_fir_init_f32.c":{},
"arm_biquad_cascade_df1_init_f32.c":{},
"arm_lms_norm_init_q31.c":{},
"arm_iir_lattice_init_f32.c":{},
"arm_conv_opt_q15.c":{},
"arm_fir_decimate_fast_q15.c":{},
"arm_fir_interpolate_init_f32.c":{},
"arm_lms_q31.c":{},
"arm_fir_sparse_init_q7.c":{},
"arm_fir_decimate_f32.c":{},
"arm_biquad_cascade_df1_fast_q15.c":{},
"arm_biquad_cascade_df1_fast_q31.c":{},
"arm_iir_lattice_q15.c":{},
"arm_fir_decimate_fast_q31.c":{},
"arm_lms_q15.c":{},
"arm_iir_lattice_f32.c":{},
"arm_fir_decimate_q31.c":{},
"arm_fir_interpolate_init_q15.c":{},
"arm_biquad_cascade_df2T_init_f64.c":{},
"arm_lms_norm_init_q15.c":{},
"arm_fir_lattice_init_q15.c":{},
"arm_biquad_cascade_df2T_init_f32.c":{},
"arm_fir_fast_q15.c":{},
"arm_fir_init_q15.c":{},
"arm_fir_sparse_init_f32.c":{},
"arm_conv_fast_q15.c":{},
"arm_correlate_opt_q15.c":{},
"arm_conv_partial_fast_q31.c":{},
"arm_lms_norm_q31.c":{},
"arm_biquad_cascade_df1_init_q31.c":{},
"arm_conv_partial_f32.c":{},
"arm_lms_init_q31.c":{},
"arm_biquad_cascade_df2T_f64.c":{},
"arm_lms_norm_q15.c":{},
"arm_correlate_q7.c":{},
"arm_lms_f32.c":{},
"arm_fir_decimate_init_q15.c":{},
"arm_fir_interpolate_init_q31.c":{},
"arm_fir_sparse_q7.c":{},
"arm_iir_lattice_init_q15.c":{},
"arm_fir_init_q31.c":{},
"arm_biquad_cascade_df1_32x64_init_q31.c":{},
"arm_correlate_f32.c":{},
"arm_conv_opt_q7.c":{},
"arm_biquad_cascade_stereo_df2T_f32.c":{},
"arm_correlate_opt_q7.c":{},
"arm_fir_lattice_q15.c":{},
"arm_fir_sparse_init_q31.c":{},
"arm_fir_init_q7.c":{},
"arm_correlate_fast_opt_q15.c":{},
"arm_conv_partial_q31.c":{},
"arm_lms_init_f32.c":{},
"arm_lms_norm_init_f32.c":{},
"arm_conv_partial_opt_q15.c":{},
"arm_conv_partial_fast_q15.c":{},
"arm_iir_lattice_q31.c":{},
"arm_conv_f32.c":{},
"arm_fir_interpolate_q31.c":{},
"arm_lms_init_q15.c":{},
"arm_conv_fast_opt_q15.c":{},
"arm_fir_decimate_init_q31.c":{},
"arm_fir_sparse_f32.c":{},
"arm_conv_partial_opt_q7.c":{},
"arm_conv_q15.c":{},
"arm_fir_lattice_f32.c":{},
"arm_fir_q31.c":{},
"arm_biquad_cascade_df1_f32.c":{},
"arm_conv_q31.c":{},
},
},
"CommonTables":{
dir:1,
items:{
"arm_const_structs.c":{},
"arm_common_tables.c":{},
},
},
"SupportFunctions":{
dir:1,
items:{
"arm_copy_q7.c":{},
"arm_float_to_q7.c":{},
"arm_q15_to_q7.c":{},
"arm_q31_to_q15.c":{},
"arm_q31_to_q7.c":{},
"arm_q7_to_q15.c":{},
"arm_fill_f32.c":{},
"arm_q15_to_float.c":{},
"arm_copy_q31.c":{},
"arm_copy_f32.c":{},
"arm_q15_to_q31.c":{},
"arm_q31_to_float.c":{},
"arm_float_to_q31.c":{},
"arm_fill_q15.c":{},
"arm_q7_to_float.c":{},
"arm_float_to_q15.c":{},
"arm_fill_q31.c":{},
"arm_copy_q15.c":{},
"arm_fill_q7.c":{},
"arm_q7_to_q31.c":{},
},
},
"FastMathFunctions":{
dir:1,
items:{
"arm_sqrt_q31.c":{},
"arm_sin_f32.c":{},
"arm_sin_q15.c":{},
"arm_cos_q31.c":{},
"arm_sin_q31.c":{},
"arm_cos_f32.c":{},
"arm_sqrt_q15.c":{},
"arm_cos_q15.c":{},
},
},
"MatrixFunctions":{
dir:1,
items:{
"arm_mat_mult_fast_q31.c":{},
"arm_mat_add_q15.c":{},
"arm_mat_cmplx_mult_q31.c":{},
"arm_mat_trans_q31.c":{},
"arm_mat_sub_q15.c":{},
"arm_mat_mult_q31.c":{},
"arm_mat_scale_q31.c":{},
"arm_mat_mult_f32.c":{},
"arm_mat_init_q15.c":{},
"arm_mat_scale_f32.c":{},
"arm_mat_cmplx_mult_f32.c":{},
"arm_mat_sub_f32.c":{},
"arm_mat_trans_q15.c":{},
"arm_mat_scale_q15.c":{},
"arm_mat_mult_fast_q15.c":{},
"arm_mat_init_f32.c":{},
"arm_mat_add_q31.c":{},
"arm_mat_sub_q31.c":{},
"arm_mat_init_q31.c":{},
"arm_mat_mult_q15.c":{},
"arm_mat_inverse_f64.c":{},
"arm_mat_inverse_f32.c":{},
"arm_mat_cmplx_mult_q15.c":{},
"arm_mat_add_f32.c":{},
"arm_mat_trans_f32.c":{},
},
},
"TransformFunctions":{
dir:1,
items:{
"arm_dct4_init_q31.c":{},
"arm_rfft_init_q15.c":{},
"arm_rfft_f32.c":{},
"arm_dct4_init_f32.c":{},
"arm_bitreversal.c":{},
"arm_cfft_radix4_f32.c":{},
"arm_cfft_radix2_init_q15.c":{},
"arm_rfft_q15.c":{},
"arm_cfft_radix4_init_q15.c":{},
"arm_rfft_fast_init_f32.c":{},
"arm_cfft_radix8_f32.c":{},
"arm_cfft_radix2_q15.c":{},
"arm_rfft_init_f32.c":{},
"arm_cfft_q31.c":{},
"arm_dct4_q15.c":{},
"arm_cfft_f32.c":{},
"arm_rfft_fast_f32.c":{},
"arm_cfft_radix2_init_f32.c":{},
"arm_dct4_q31.c":{},
"arm_cfft_radix4_q15.c":{},
"arm_cfft_radix2_q31.c":{},
"arm_cfft_q15.c":{},
"arm_cfft_radix4_q31.c":{},
"arm_cfft_radix4_init_f32.c":{},
"arm_rfft_q31.c":{},
"arm_cfft_radix2_init_q31.c":{},
"arm_cfft_radix4_init_q31.c":{},
"arm_cfft_radix2_f32.c":{},
"arm_rfft_init_q31.c":{},
"arm_dct4_f32.c":{},
"arm_dct4_init_q15.c":{},
},
},
},
},
"Examples":{
dir:1,
items:{
"arm_sin_cos_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_sin_cos_example_f32.c":{},
},
},
},
},
"arm_fft_bin_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_fft_bin_data.c":{},
"arm_fft_bin_example_f32.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_fft_bin_data.c":{},
"arm_fft_bin_example_f32.c":{},
},
},
},
},
"arm_dotproduct_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_dotproduct_example_f32.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_dotproduct_example_f32.c":{},
},
},
},
},
"arm_convolution_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_convolution_example_f32.c":{},
"math_helper.h":{},
"math_helper.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_convolution_example_f32.c":{},
"math_helper.h":{},
"math_helper.c":{},
},
},
},
},
"arm_fir_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"math_helper.h":{},
"arm_fir_example_f32.c":{},
"arm_fir_data.c":{},
"math_helper.c":{},
},
},
},
},
"arm_signal_converge_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_signal_converge_example_f32.c":{},
"arm_signal_converge_data.c":{},
"math_helper.h":{},
"math_helper.c":{},
},
},
},
},
"arm_variance_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_variance_example_f32.c":{},
},
},
},
},
"arm_graphic_equalizer_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"math_helper.h":{},
"arm_graphic_equalizer_data.c":{},
"math_helper.c":{},
"arm_graphic_equalizer_example_q31.c":{},
},
},
},
},
"arm_matrix_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"math_helper.h":{},
"arm_matrix_example_f32.c":{},
"math_helper.c":{},
},
},
},
},
"arm_class_marks_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_class_marks_example_f32.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_class_marks_example_f32.c":{},
},
},
},
},
"arm_linear_interp_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_linear_interp_example_f32.c":{},
"math_helper.h":{},
"math_helper.c":{},
"arm_linear_interp_data.c":{},
},
},
},
},
},
},
},
},
"RTOS":{
dir:1,
items:{
"Template":{
dir:1,
items:{
"cmsis_os.h":{},
},
},
},
},
"Include":{
dir:1,
items:{
"cmsis_armcc.h":{},
"core_cmFunc.h":{},
"arm_math.h":{},
"core_sc300.h":{},
"arm_const_structs.h":{},
"core_cmSimd.h":{},
"core_cm7.h":{},
"arm_common_tables.h":{},
"core_cm3.h":{},
"core_cm0plus.h":{},
"core_cmInstr.h":{},
"core_sc000.h":{},
"core_cm0.h":{},
"cmsis_gcc.h":{},
"cmsis_armcc_V6.h":{},
"core_cm4.h":{},
},
},
},
},
},
},
},
},
"color_stm32f405":{
dir:1,
items:{
"files":{},
"Inc":{
dir:1,
items:{
"main.h":{},
"stm32f4xx_hal_conf.h":{},
"stm32f4xx_it.h":{},
},
},
"vga405.files":{},
"Makefile":{},
"startup_stm32f405xx.s":{},
"prog":{},
".mxproject":{},
"photo2.jpg":{},
"photo3.png":{},
"photo1.jpg":{},
"vga405.creator":{},
"STM32F405RGTx_FLASH.ld":{},
"Src":{
dir:1,
items:{
"orion.c":{},
"system_stm32f4xx.c":{},
"orion.h":{},
"stm32f4xx_hal_msp.c":{},
"stm32f4xx_it.c":{},
"main.c":{},
},
},
"vga405.ioc":{},
"Drivers":{
dir:1,
items:{
"STM32F4xx_HAL_Driver":{
dir:1,
items:{
"Inc":{
dir:1,
items:{
"stm32f4xx_ll_gpio.h":{},
"stm32f4xx_hal_cec.h":{},
"stm32f4xx_hal_pccard.h":{},
"stm32f4xx_hal_smartcard.h":{},
"stm32f4xx_hal_ltdc_ex.h":{},
"stm32f4xx_hal_spdifrx.h":{},
"stm32f4xx_ll_rtc.h":{},
"stm32f4xx_hal_dfsdm.h":{},
"stm32f4xx_hal_dma2d.h":{},
"stm32f4xx_ll_fsmc.h":{},
"stm32f4xx_hal_eth.h":{},
"stm32f4xx_hal_def.h":{},
"stm32f4xx_hal_lptim.h":{},
"stm32_assert_template.h":{},
"stm32f4xx_hal_rcc.h":{},
"stm32f4xx_hal_adc.h":{},
"stm32f4xx_hal_flash.h":{},
"stm32f4xx_hal_ltdc.h":{},
"stm32f4xx_hal_pwr_ex.h":{},
"stm32f4xx_hal_qspi.h":{},
"stm32f4xx_hal_i2s_ex.h":{},
"stm32f4xx_hal_gpio.h":{},
"stm32f4xx_hal_hash_ex.h":{},
"stm32f4xx_hal_rng.h":{},
"stm32f4xx_hal_dsi.h":{},
"stm32f4xx_ll_sdmmc.h":{},
"stm32f4xx_ll_usart.h":{},
"stm32f4xx_hal_fmpi2c_ex.h":{},
"stm32f4xx_hal_cryp_ex.h":{},
"stm32f4xx_hal_wwdg.h":{},
"stm32f4xx_hal_mmc.h":{},
"stm32f4xx_ll_iwdg.h":{},
"stm32f4xx_hal_sd.h":{},
"stm32f4xx_hal_rcc_ex.h":{},
"stm32f4xx_hal_gpio_ex.h":{},
"stm32f4xx_hal_dma.h":{},
"stm32f4xx_ll_system.h":{},
"stm32f4xx_ll_exti.h":{},
"stm32f4xx_hal_pcd.h":{},
"stm32f4xx_hal_tim_ex.h":{},
"stm32f4xx_hal_nor.h":{},
"stm32f4xx_hal_spi.h":{},
"stm32f4xx_hal_sai_ex.h":{},
"stm32f4xx_ll_i2c.h":{},
"stm32f4xx_ll_rcc.h":{},
"stm32f4xx_hal_flash_ramfunc.h":{},
"stm32f4xx_hal_nand.h":{},
"stm32f4xx_ll_utils.h":{},
"stm32f4xx_hal_pcd_ex.h":{},
"stm32f4xx_hal_can.h":{},
"stm32f4xx_hal_hash.h":{},
"stm32f4xx_hal_sdram.h":{},
"Legacy":{
dir:1,
items:{
"stm32_hal_legacy.h":{},
},
},
"stm32f4xx_ll_rng.h":{},
"stm32f4xx_hal_dma_ex.h":{},
"stm32f4xx_hal_cortex.h":{},
"stm32f4xx_ll_pwr.h":{},
"stm32f4xx_hal_dac.h":{},
"stm32f4xx_hal_i2c.h":{},
"stm32f4xx_hal_usart.h":{},
"stm32f4xx_hal_fmpi2c.h":{},
"stm32f4xx_hal_iwdg.h":{},
"stm32f4xx_hal_cryp.h":{},
"stm32f4xx_ll_fmc.h":{},
"stm32f4xx_hal_flash_ex.h":{},
"stm32f4xx_ll_dma2d.h":{},
"stm32f4xx_hal_dcmi_ex.h":{},
"stm32f4xx_hal_conf_template.h":{},
"stm32f4xx_hal_hcd.h":{},
"stm32f4xx_hal_dcmi.h":{},
"stm32f4xx_ll_wwdg.h":{},
"stm32f4xx_ll_bus.h":{},
"stm32f4xx_hal_rtc_ex.h":{},
"stm32f4xx_hal_i2s.h":{},
"stm32f4xx_ll_spi.h":{},
"stm32f4xx_hal_dac_ex.h":{},
"stm32f4xx_ll_crc.h":{},
"stm32f4xx_hal_sram.h":{},
"stm32f4xx_hal_pwr.h":{},
"stm32f4xx_ll_dma.h":{},
"stm32f4xx_ll_tim.h":{},
"stm32f4xx_hal_sai.h":{},
"stm32f4xx_ll_usb.h":{},
"stm32f4xx_hal_uart.h":{},
"stm32f4xx_hal_crc.h":{},
"stm32f4xx_hal_rtc.h":{},
"stm32f4xx_ll_dac.h":{},
"stm32f4xx_hal_i2c_ex.h":{},
"stm32f4xx_ll_adc.h":{},
"stm32f4xx_hal.h":{},
"stm32f4xx_hal_tim.h":{},
"stm32f4xx_hal_adc_ex.h":{},
"stm32f4xx_hal_irda.h":{},
"stm32f4xx_ll_lptim.h":{},
"stm32f4xx_ll_cortex.h":{},
},
},
"Src":{
dir:1,
items:{
"stm32f4xx_hal_usart.c":{},
"stm32f4xx_hal_dma.c":{},
"stm32f4xx_hal_cortex.c":{},
"stm32f4xx_ll_rng.c":{},
"stm32f4xx_hal_iwdg.c":{},
"stm32f4xx_hal_ltdc_ex.c":{},
"stm32f4xx_hal_mmc.c":{},
"stm32f4xx_ll_usart.c":{},
"stm32f4xx_hal_sdram.c":{},
"stm32f4xx_hal_dcmi_ex.c":{},
"stm32f4xx_ll_tim.c":{},
"stm32f4xx_hal_timebase_rtc_alarm_template.c":{},
"stm32f4xx_hal_flash_ramfunc.c":{},
"stm32f4xx_hal_dac.c":{},
"stm32f4xx_ll_rtc.c":{},
"stm32f4xx_ll_crc.c":{},
"stm32f4xx_hal_pwr_ex.c":{},
"stm32f4xx_ll_lptim.c":{},
"stm32f4xx_hal_fmpi2c.c":{},
"stm32f4xx_ll_rcc.c":{},
"stm32f4xx_hal_cryp.c":{},
"stm32f4xx_hal_sram.c":{},
"stm32f4xx_hal_uart.c":{},
"stm32f4xx_hal_dac_ex.c":{},
"stm32f4xx_hal_smartcard.c":{},
"stm32f4xx_hal_tim.c":{},
"stm32f4xx_hal_timebase_rtc_wakeup_template.c":{},
"stm32f4xx_hal_dma_ex.c":{},
"stm32f4xx_hal_irda.c":{},
"stm32f4xx_hal_pcd_ex.c":{},
"stm32f4xx_hal_hash_ex.c":{},
"stm32f4xx_hal_pccard.c":{},
"stm32f4xx_ll_usb.c":{},
"stm32f4xx_ll_spi.c":{},
"stm32f4xx_ll_pwr.c":{},
"stm32f4xx_hal_crc.c":{},
"stm32f4xx_ll_dac.c":{},
"stm32f4xx_ll_adc.c":{},
"stm32f4xx_hal_flash_ex.c":{},
"stm32f4xx_hal_i2c.c":{},
"stm32f4xx_hal_rcc.c":{},
"stm32f4xx_ll_dma2d.c":{},
"stm32f4xx_hal_dcmi.c":{},
"stm32f4xx_hal_msp_template.c":{},
"stm32f4xx_hal_dfsdm.c":{},
"stm32f4xx_hal_nor.c":{},
"stm32f4xx_hal_adc_ex.c":{},
"stm32f4xx_hal_rcc_ex.c":{},
"stm32f4xx_hal_cryp_ex.c":{},
"stm32f4xx_hal_flash.c":{},
"stm32f4xx_hal_rtc.c":{},
"stm32f4xx_hal_ltdc.c":{},
"stm32f4xx_hal_sd.c":{},
"stm32f4xx_ll_i2c.c":{},
"stm32f4xx_hal_i2s.c":{},
"stm32f4xx_hal_qspi.c":{},
"stm32f4xx_hal_hash.c":{},
"stm32f4xx_hal_sai.c":{},
"stm32f4xx_hal_timebase_tim_template.c":{},
"stm32f4xx_hal.c":{},
"stm32f4xx_hal_dma2d.c":{},
"stm32f4xx_hal_wwdg.c":{},
"stm32f4xx_ll_fmc.c":{},
"stm32f4xx_hal_rtc_ex.c":{},
"stm32f4xx_hal_pwr.c":{},
"stm32f4xx_hal_can.c":{},
"stm32f4xx_hal_i2s_ex.c":{},
"stm32f4xx_ll_exti.c":{},
"stm32f4xx_hal_hcd.c":{},
"stm32f4xx_hal_adc.c":{},
"stm32f4xx_hal_dsi.c":{},
"stm32f4xx_hal_cec.c":{},
"stm32f4xx_ll_dma.c":{},
"stm32f4xx_hal_fmpi2c_ex.c":{},
"stm32f4xx_hal_gpio.c":{},
"stm32f4xx_hal_spdifrx.c":{},
"stm32f4xx_hal_nand.c":{},
"stm32f4xx_ll_gpio.c":{},
"stm32f4xx_hal_sai_ex.c":{},
"stm32f4xx_ll_fsmc.c":{},
"stm32f4xx_ll_utils.c":{},
"stm32f4xx_hal_eth.c":{},
"stm32f4xx_ll_sdmmc.c":{},
"stm32f4xx_hal_pcd.c":{},
"stm32f4xx_hal_lptim.c":{},
"stm32f4xx_hal_tim_ex.c":{},
"stm32f4xx_hal_i2c_ex.c":{},
"stm32f4xx_hal_spi.c":{},
"stm32f4xx_hal_rng.c":{},
},
},
},
},
"CMSIS":{
dir:1,
items:{
"Device":{
dir:1,
items:{
"ST":{
dir:1,
items:{
"STM32F4xx":{
dir:1,
items:{
"Source":{
dir:1,
items:{
"Templates":{
dir:1,
items:{
"gcc":{
dir:1,
items:{
"startup_stm32f479xx.s":{},
"startup_stm32f410rx.s":{},
"startup_stm32f469xx.s":{},
"startup_stm32f439xx.s":{},
"startup_stm32f412cx.s":{},
"startup_stm32f411xe.s":{},
"startup_stm32f405xx.s":{},
"startup_stm32f417xx.s":{},
"startup_stm32f423xx.s":{},
"startup_stm32f410cx.s":{},
"startup_stm32f429xx.s":{},
"startup_stm32f412zx.s":{},
"startup_stm32f407xx.s":{},
"startup_stm32f427xx.s":{},
"startup_stm32f412rx.s":{},
"startup_stm32f412vx.s":{},
"startup_stm32f437xx.s":{},
"startup_stm32f401xc.s":{},
"startup_stm32f410tx.s":{},
"startup_stm32f413xx.s":{},
"startup_stm32f446xx.s":{},
"startup_stm32f415xx.s":{},
"startup_stm32f401xe.s":{},
},
},
"system_stm32f4xx.c":{},
"arm":{
dir:1,
items:{
"startup_stm32f479xx.s":{},
"startup_stm32f410rx.s":{},
"startup_stm32f469xx.s":{},
"startup_stm32f439xx.s":{},
"startup_stm32f412cx.s":{},
"startup_stm32f411xe.s":{},
"startup_stm32f405xx.s":{},
"startup_stm32f417xx.s":{},
"startup_stm32f423xx.s":{},
"startup_stm32f410cx.s":{},
"startup_stm32f429xx.s":{},
"startup_stm32f412zx.s":{},
"startup_stm32f407xx.s":{},
"startup_stm32f427xx.s":{},
"startup_stm32f412rx.s":{},
"startup_stm32f412vx.s":{},
"startup_stm32f437xx.s":{},
"startup_stm32f401xc.s":{},
"startup_stm32f410tx.s":{},
"startup_stm32f413xx.s":{},
"startup_stm32f446xx.s":{},
"startup_stm32f415xx.s":{},
"startup_stm32f401xe.s":{},
},
},
"iar":{
dir:1,
items:{
"startup_stm32f479xx.s":{},
"startup_stm32f410rx.s":{},
"startup_stm32f469xx.s":{},
"startup_stm32f439xx.s":{},
"startup_stm32f412cx.s":{},
"startup_stm32f411xe.s":{},
"startup_stm32f405xx.s":{},
"startup_stm32f417xx.s":{},
"startup_stm32f423xx.s":{},
"startup_stm32f410cx.s":{},
"startup_stm32f429xx.s":{},
"startup_stm32f412zx.s":{},
"linker":{
dir:1,
items:{
"stm32f411xe_flash.icf":{},
"stm32f439xx_flash.icf":{},
"stm32f427xx_flash.icf":{},
"stm32f405xx_sram.icf":{},
"stm32f469xx_flash.icf":{},
"stm32f429xx_sram.icf":{},
"stm32f469xx_sram.icf":{},
"stm32f446xx_flash.icf":{},
"stm32f401xc_flash.icf":{},
"stm32f412rx_flash.icf":{},
"stm32f407xx_sram.icf":{},
"stm32f417xx_sram.icf":{},
"stm32f401xe_sram.icf":{},
"stm32f410cx_flash.icf":{},
"stm32f411xe_sram.icf":{},
"stm32f407xx_flash.icf":{},
"stm32f427xx_sram.icf":{},
"stm32f423xx_sram.icf":{},
"stm32f417xx_flash.icf":{},
"stm32f410rx_flash.icf":{},
"stm32f410rx_sram.icf":{},
"stm32f412vx_sram.icf":{},
"stm32f412cx_flash.icf":{},
"stm32f401xc_sram.icf":{},
"stm32f401xe_flash.icf":{},
"stm32f412vx_flash.icf":{},
"stm32f413xx_sram.icf":{},
"stm32f479xx_sram.icf":{},
"stm32f437xx_sram.icf":{},
"stm32f412cx_sram.icf":{},
"stm32f429xx_flash.icf":{},
"stm32f412zx_sram.icf":{},
"stm32f437xx_flash.icf":{},
"stm32f412zx_flash.icf":{},
"stm32f413xx_flash.icf":{},
"stm32f439xx_sram.icf":{},
"stm32f410cx_sram.icf":{},
"stm32f415xx_flash.icf":{},
"stm32f412rx_sram.icf":{},
"stm32f479xx_flash.icf":{},
"stm32f410tx_sram.icf":{},
"stm32f446xx_sram.icf":{},
"stm32f405xx_flash.icf":{},
"stm32f415xx_sram.icf":{},
"stm32f410tx_flash.icf":{},
"stm32f423xx_flash.icf":{},
},
},
"startup_stm32f407xx.s":{},
"startup_stm32f427xx.s":{},
"startup_stm32f412rx.s":{},
"startup_stm32f412vx.s":{},
"startup_stm32f437xx.s":{},
"startup_stm32f401xc.s":{},
"startup_stm32f410tx.s":{},
"startup_stm32f413xx.s":{},
"startup_stm32f446xx.s":{},
"startup_stm32f415xx.s":{},
"startup_stm32f401xe.s":{},
},
},
},
},
},
},
"Include":{
dir:1,
items:{
"stm32f411xe.h":{},
"system_stm32f4xx.h":{},
"stm32f415xx.h":{},
"stm32f410rx.h":{},
"stm32f401xe.h":{},
"stm32f405xx.h":{},
"stm32f427xx.h":{},
"stm32f412vx.h":{},
"stm32f412rx.h":{},
"stm32f446xx.h":{},
"stm32f423xx.h":{},
"stm32f410cx.h":{},
"stm32f407xx.h":{},
"stm32f429xx.h":{},
"stm32f479xx.h":{},
"stm32f417xx.h":{},
"stm32f412zx.h":{},
"stm32f410tx.h":{},
"stm32f401xc.h":{},
"stm32f439xx.h":{},
"stm32f469xx.h":{},
"stm32f4xx.h":{},
"stm32f437xx.h":{},
"stm32f413xx.h":{},
"stm32f412cx.h":{},
},
},
},
},
},
},
},
},
"DSP_Lib":{
dir:1,
items:{
"Source":{
dir:1,
items:{
"StatisticsFunctions":{
dir:1,
items:{
"arm_power_q31.c":{},
"arm_var_q31.c":{},
"arm_mean_f32.c":{},
"arm_mean_q31.c":{},
"arm_min_q31.c":{},
"arm_power_q15.c":{},
"arm_rms_q31.c":{},
"arm_std_q15.c":{},
"arm_power_q7.c":{},
"arm_rms_f32.c":{},
"arm_min_f32.c":{},
"arm_var_f32.c":{},
"arm_rms_q15.c":{},
"arm_min_q7.c":{},
"arm_std_f32.c":{},
"arm_var_q15.c":{},
"arm_max_q7.c":{},
"arm_max_f32.c":{},
"arm_mean_q15.c":{},
"arm_std_q31.c":{},
"arm_max_q31.c":{},
"arm_max_q15.c":{},
"arm_power_f32.c":{},
"arm_mean_q7.c":{},
"arm_min_q15.c":{},
},
},
"ControllerFunctions":{
dir:1,
items:{
"arm_pid_init_q31.c":{},
"arm_pid_reset_q15.c":{},
"arm_sin_cos_f32.c":{},
"arm_pid_init_f32.c":{},
"arm_sin_cos_q31.c":{},
"arm_pid_reset_f32.c":{},
"arm_pid_init_q15.c":{},
"arm_pid_reset_q31.c":{},
},
},
"ComplexMathFunctions":{
dir:1,
items:{
"arm_cmplx_conj_q31.c":{},
"arm_cmplx_conj_q15.c":{},
"arm_cmplx_mult_real_f32.c":{},
"arm_cmplx_mult_cmplx_f32.c":{},
"arm_cmplx_conj_f32.c":{},
"arm_cmplx_mag_f32.c":{},
"arm_cmplx_mult_cmplx_q15.c":{},
"arm_cmplx_mag_squared_q31.c":{},
"arm_cmplx_mag_q15.c":{},
"arm_cmplx_dot_prod_q15.c":{},
"arm_cmplx_mult_real_q15.c":{},
"arm_cmplx_dot_prod_q31.c":{},
"arm_cmplx_dot_prod_f32.c":{},
"arm_cmplx_mult_real_q31.c":{},
"arm_cmplx_mult_cmplx_q31.c":{},
"arm_cmplx_mag_squared_f32.c":{},
"arm_cmplx_mag_squared_q15.c":{},
"arm_cmplx_mag_q31.c":{},
},
},
"BasicMathFunctions":{
dir:1,
items:{
"arm_mult_f32.c":{},
"arm_shift_q15.c":{},
"arm_scale_q31.c":{},
"arm_shift_q31.c":{},
"arm_mult_q31.c":{},
"arm_offset_q7.c":{},
"arm_dot_prod_f32.c":{},
"arm_mult_q7.c":{},
"arm_dot_prod_q7.c":{},
"arm_add_f32.c":{},
"arm_shift_q7.c":{},
"arm_sub_q31.c":{},
"arm_add_q31.c":{},
"arm_dot_prod_q31.c":{},
"arm_sub_f32.c":{},
"arm_sub_q7.c":{},
"arm_negate_q7.c":{},
"arm_mult_q15.c":{},
"arm_scale_q15.c":{},
"arm_sub_q15.c":{},
"arm_add_q15.c":{},
"arm_offset_q31.c":{},
"arm_abs_q7.c":{},
"arm_scale_q7.c":{},
"arm_dot_prod_q15.c":{},
"arm_negate_f32.c":{},
"arm_scale_f32.c":{},
"arm_add_q7.c":{},
"arm_abs_q15.c":{},
"arm_offset_q15.c":{},
"arm_abs_f32.c":{},
"arm_abs_q31.c":{},
"arm_offset_f32.c":{},
"arm_negate_q15.c":{},
"arm_negate_q31.c":{},
},
},
"FilteringFunctions":{
dir:1,
items:{
"arm_correlate_q15.c":{},
"arm_conv_partial_fast_opt_q15.c":{},
"arm_biquad_cascade_df1_q31.c":{},
"arm_biquad_cascade_df1_q15.c":{},
"arm_fir_interpolate_q15.c":{},
"arm_fir_decimate_init_f32.c":{},
"arm_conv_q7.c":{},
"arm_fir_sparse_q15.c":{},
"arm_fir_lattice_q31.c":{},
"arm_fir_q7.c":{},
"arm_fir_interpolate_f32.c":{},
"arm_fir_f32.c":{},
"arm_fir_fast_q31.c":{},
"arm_correlate_fast_q15.c":{},
"arm_biquad_cascade_stereo_df2T_init_f32.c":{},
"arm_fir_sparse_init_q15.c":{},
"arm_conv_fast_q31.c":{},
"arm_fir_lattice_init_f32.c":{},
"arm_correlate_q31.c":{},
"arm_fir_q15.c":{},
"arm_correlate_fast_q31.c":{},
"arm_fir_lattice_init_q31.c":{},
"arm_conv_partial_q7.c":{},
"arm_fir_sparse_q31.c":{},
"arm_biquad_cascade_df1_init_q15.c":{},
"arm_conv_partial_q15.c":{},
"arm_fir_decimate_q15.c":{},
"arm_biquad_cascade_df1_32x64_q31.c":{},
"arm_lms_norm_f32.c":{},
"arm_biquad_cascade_df2T_f32.c":{},
"arm_iir_lattice_init_q31.c":{},
"arm_fir_init_f32.c":{},
"arm_biquad_cascade_df1_init_f32.c":{},
"arm_lms_norm_init_q31.c":{},
"arm_iir_lattice_init_f32.c":{},
"arm_conv_opt_q15.c":{},
"arm_fir_decimate_fast_q15.c":{},
"arm_fir_interpolate_init_f32.c":{},
"arm_lms_q31.c":{},
"arm_fir_sparse_init_q7.c":{},
"arm_fir_decimate_f32.c":{},
"arm_biquad_cascade_df1_fast_q15.c":{},
"arm_biquad_cascade_df1_fast_q31.c":{},
"arm_iir_lattice_q15.c":{},
"arm_fir_decimate_fast_q31.c":{},
"arm_lms_q15.c":{},
"arm_iir_lattice_f32.c":{},
"arm_fir_decimate_q31.c":{},
"arm_fir_interpolate_init_q15.c":{},
"arm_biquad_cascade_df2T_init_f64.c":{},
"arm_lms_norm_init_q15.c":{},
"arm_fir_lattice_init_q15.c":{},
"arm_biquad_cascade_df2T_init_f32.c":{},
"arm_fir_fast_q15.c":{},
"arm_fir_init_q15.c":{},
"arm_fir_sparse_init_f32.c":{},
"arm_conv_fast_q15.c":{},
"arm_correlate_opt_q15.c":{},
"arm_conv_partial_fast_q31.c":{},
"arm_lms_norm_q31.c":{},
"arm_biquad_cascade_df1_init_q31.c":{},
"arm_conv_partial_f32.c":{},
"arm_lms_init_q31.c":{},
"arm_biquad_cascade_df2T_f64.c":{},
"arm_lms_norm_q15.c":{},
"arm_correlate_q7.c":{},
"arm_lms_f32.c":{},
"arm_fir_decimate_init_q15.c":{},
"arm_fir_interpolate_init_q31.c":{},
"arm_fir_sparse_q7.c":{},
"arm_iir_lattice_init_q15.c":{},
"arm_fir_init_q31.c":{},
"arm_biquad_cascade_df1_32x64_init_q31.c":{},
"arm_correlate_f32.c":{},
"arm_conv_opt_q7.c":{},
"arm_biquad_cascade_stereo_df2T_f32.c":{},
"arm_correlate_opt_q7.c":{},
"arm_fir_lattice_q15.c":{},
"arm_fir_sparse_init_q31.c":{},
"arm_fir_init_q7.c":{},
"arm_correlate_fast_opt_q15.c":{},
"arm_conv_partial_q31.c":{},
"arm_lms_init_f32.c":{},
"arm_lms_norm_init_f32.c":{},
"arm_conv_partial_opt_q15.c":{},
"arm_conv_partial_fast_q15.c":{},
"arm_iir_lattice_q31.c":{},
"arm_conv_f32.c":{},
"arm_fir_interpolate_q31.c":{},
"arm_lms_init_q15.c":{},
"arm_conv_fast_opt_q15.c":{},
"arm_fir_decimate_init_q31.c":{},
"arm_fir_sparse_f32.c":{},
"arm_conv_partial_opt_q7.c":{},
"arm_conv_q15.c":{},
"arm_fir_lattice_f32.c":{},
"arm_fir_q31.c":{},
"arm_biquad_cascade_df1_f32.c":{},
"arm_conv_q31.c":{},
},
},
"CommonTables":{
dir:1,
items:{
"arm_const_structs.c":{},
"arm_common_tables.c":{},
},
},
"SupportFunctions":{
dir:1,
items:{
"arm_copy_q7.c":{},
"arm_float_to_q7.c":{},
"arm_q15_to_q7.c":{},
"arm_q31_to_q15.c":{},
"arm_q31_to_q7.c":{},
"arm_q7_to_q15.c":{},
"arm_fill_f32.c":{},
"arm_q15_to_float.c":{},
"arm_copy_q31.c":{},
"arm_copy_f32.c":{},
"arm_q15_to_q31.c":{},
"arm_q31_to_float.c":{},
"arm_float_to_q31.c":{},
"arm_fill_q15.c":{},
"arm_q7_to_float.c":{},
"arm_float_to_q15.c":{},
"arm_fill_q31.c":{},
"arm_copy_q15.c":{},
"arm_fill_q7.c":{},
"arm_q7_to_q31.c":{},
},
},
"FastMathFunctions":{
dir:1,
items:{
"arm_sqrt_q31.c":{},
"arm_sin_f32.c":{},
"arm_sin_q15.c":{},
"arm_cos_q31.c":{},
"arm_sin_q31.c":{},
"arm_cos_f32.c":{},
"arm_sqrt_q15.c":{},
"arm_cos_q15.c":{},
},
},
"MatrixFunctions":{
dir:1,
items:{
"arm_mat_mult_fast_q31.c":{},
"arm_mat_add_q15.c":{},
"arm_mat_cmplx_mult_q31.c":{},
"arm_mat_trans_q31.c":{},
"arm_mat_sub_q15.c":{},
"arm_mat_mult_q31.c":{},
"arm_mat_scale_q31.c":{},
"arm_mat_mult_f32.c":{},
"arm_mat_init_q15.c":{},
"arm_mat_scale_f32.c":{},
"arm_mat_cmplx_mult_f32.c":{},
"arm_mat_sub_f32.c":{},
"arm_mat_trans_q15.c":{},
"arm_mat_scale_q15.c":{},
"arm_mat_mult_fast_q15.c":{},
"arm_mat_init_f32.c":{},
"arm_mat_add_q31.c":{},
"arm_mat_sub_q31.c":{},
"arm_mat_init_q31.c":{},
"arm_mat_mult_q15.c":{},
"arm_mat_inverse_f64.c":{},
"arm_mat_inverse_f32.c":{},
"arm_mat_cmplx_mult_q15.c":{},
"arm_mat_add_f32.c":{},
"arm_mat_trans_f32.c":{},
},
},
"TransformFunctions":{
dir:1,
items:{
"arm_dct4_init_q31.c":{},
"arm_rfft_init_q15.c":{},
"arm_rfft_f32.c":{},
"arm_dct4_init_f32.c":{},
"arm_bitreversal.c":{},
"arm_cfft_radix4_f32.c":{},
"arm_cfft_radix2_init_q15.c":{},
"arm_rfft_q15.c":{},
"arm_cfft_radix4_init_q15.c":{},
"arm_rfft_fast_init_f32.c":{},
"arm_cfft_radix8_f32.c":{},
"arm_cfft_radix2_q15.c":{},
"arm_rfft_init_f32.c":{},
"arm_cfft_q31.c":{},
"arm_dct4_q15.c":{},
"arm_cfft_f32.c":{},
"arm_rfft_fast_f32.c":{},
"arm_cfft_radix2_init_f32.c":{},
"arm_dct4_q31.c":{},
"arm_cfft_radix4_q15.c":{},
"arm_cfft_radix2_q31.c":{},
"arm_cfft_q15.c":{},
"arm_cfft_radix4_q31.c":{},
"arm_cfft_radix4_init_f32.c":{},
"arm_rfft_q31.c":{},
"arm_cfft_radix2_init_q31.c":{},
"arm_cfft_radix4_init_q31.c":{},
"arm_cfft_radix2_f32.c":{},
"arm_rfft_init_q31.c":{},
"arm_dct4_f32.c":{},
"arm_dct4_init_q15.c":{},
},
},
},
},
"Examples":{
dir:1,
items:{
"arm_sin_cos_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_sin_cos_example_f32.c":{},
},
},
},
},
"arm_fft_bin_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_fft_bin_data.c":{},
"arm_fft_bin_example_f32.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_fft_bin_data.c":{},
"arm_fft_bin_example_f32.c":{},
},
},
},
},
"arm_dotproduct_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_dotproduct_example_f32.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_dotproduct_example_f32.c":{},
},
},
},
},
"arm_convolution_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_convolution_example_f32.c":{},
"math_helper.h":{},
"math_helper.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_convolution_example_f32.c":{},
"math_helper.h":{},
"math_helper.c":{},
},
},
},
},
"arm_fir_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"math_helper.h":{},
"arm_fir_example_f32.c":{},
"arm_fir_data.c":{},
"math_helper.c":{},
},
},
},
},
"arm_signal_converge_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_signal_converge_example_f32.c":{},
"arm_signal_converge_data.c":{},
"math_helper.h":{},
"math_helper.c":{},
},
},
},
},
"arm_variance_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_variance_example_f32.c":{},
},
},
},
},
"arm_graphic_equalizer_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"math_helper.h":{},
"arm_graphic_equalizer_data.c":{},
"math_helper.c":{},
"arm_graphic_equalizer_example_q31.c":{},
},
},
},
},
"arm_matrix_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"math_helper.h":{},
"arm_matrix_example_f32.c":{},
"math_helper.c":{},
},
},
},
},
"arm_class_marks_example":{
dir:1,
items:{
"GCC":{
dir:1,
items:{
"arm_class_marks_example_f32.c":{},
},
},
"ARM":{
dir:1,
items:{
"arm_class_marks_example_f32.c":{},
},
},
},
},
"arm_linear_interp_example":{
dir:1,
items:{
"ARM":{
dir:1,
items:{
"arm_linear_interp_example_f32.c":{},
"math_helper.h":{},
"math_helper.c":{},
"arm_linear_interp_data.c":{},
},
},
},
},
},
},
},
},
"RTOS":{
dir:1,
items:{
"Template":{
dir:1,
items:{
"cmsis_os.h":{},
},
},
},
},
"Include":{
dir:1,
items:{
"cmsis_armcc.h":{},
"core_cmFunc.h":{},
"arm_math.h":{},
"core_sc300.h":{},
"arm_const_structs.h":{},
"core_cmSimd.h":{},
"core_cm7.h":{},
"arm_common_tables.h":{},
"core_cm3.h":{},
"core_cm0plus.h":{},
"core_cmInstr.h":{},
"core_sc000.h":{},
"core_cm0.h":{},
"cmsis_gcc.h":{},
"cmsis_armcc_V6.h":{},
"core_cm4.h":{},
},
},
},
},
},
},
},
},
},
},
"Pravetz_8D":{
dir:1,
items:{
"english.txt":{
name:"Pravetz 8D",
params:"Year\x09≤1986\x0ARAM\x0948 kB\x0AROM\x0916 kB\x0ACPU\x096502 1 MHz\x0AGraph\x09240x200x8\x0ASound\x09AY-3-8910\x0AIn ROM\x09Basic\x0AGroup\x09Oric Atmos",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Правец 8D",
params:"Год\x09≤1986\x0AОЗУ\x0948 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x096502 1 MГц\x0AГрафика\x09240x200x8\x0AЗвук\x09AY-3-8910\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09Oric Atmos",
body:"\x22Правец 8D\x22 совместим с британским компьютером \x22Oric Atmos\x22. Британский \x0A\x22Oric Atmos\x22 создавался как конкурент британскому \x22ZX Spectrum 48\x22 и был \x0Aчуточку лучше. В компьютере \x22Правец 8D\x22 стоит звуковой чип AY-3-8910, который\x0Aпоявился лишь в \x22ZX Spectrum 128\x22. Но ZX Spectrum победил, а Atmos проиграл.\x0A\x0A\x22Правец 8D\x22 выглядит как русский компьютер. На клавиатуре кириллица. Только нет\x0Aбуквы Ы.\x0A\x0AЕсть несколько компьютеров с похожим названием: Правец 82, 8М, 8А, 8Е, 8С, 8S.\x0AНо все они, кроме этого, совместимы с Apple II. Они значительно больше, дороже\x0Aи оснащены дисководами. А еще есть Правец 16, это вообще IBM PC совместимый\x0Aкомпьютер.\x0A\x0AОдин человек рассказал историю, что «Болгария купила завод в США по производству\x0Aкомпьютеров вместе со всей документацией и материалами. И перевезла к себе домой\x0Aвсе что там было. Даже розетки из стен.».\x0A\x0AВ компьютере \x22Правец 8D\x22 применена специализированная микросхема содержащая всю\x0Aлогику компьютера. Из за этого плата компьютера получилась очень маленькой.\x0A\x0A",},
"doc":{
dir:1,
items:{
"Pravetz_8D_Circuit.png":{},
},
},
},
},
"Apogey_BK01C":{
dir:1,
items:{
"english.txt":{
name:"Apogey BK01C",
params:"Year\x091988\x0ARAM\x0952 kB\x0AROM\x094 kB\x0ACPU\x09i8080 1.7 MHz\x0AText\x0964x25x8\x0AGraph\x09128x62x8\x0AGroup\x09Radio 86RK",
body:"Apogee BK01C is a Soviet home computer, an improved version computer Radio 86RK.\x0AIn Apogee the RAM was increased to 52 kB. Added three-channel sound generator\x0A(i8253 chip). Added an alternative character generator with character size of \x0A6x4 pixels, which allows you to display pseudographic resolution 192x102. Or \x0A384x204 with skillful use of character generator.\x0A\x0AThere are two versions of the computer: Apogey BK01 and Apogey BK01C. Apogey\x0ABK01C has 8 colors. The screen displays colored characters on a black\x0Abackground, or black symbols on a colored background. In pseudographic mode,\x0Athis means two colors into a matrix of 3x2 dots, one of which is black. Apogee\x0ABK01 is a black and white. It can increase brightness of the background \x0Aand the symbol at the same time. On the screen 4 colors can be displayed: \x0Ablack (background), dark gray (bright background), light gray (symbol), \x0Awhite (bright symbol).\x0A\x0AThe i8275 chip, on which the Radio 86RK video adapter is built, supported output\x0Aof a color image, but for the sake of simplicity of the Radio 86RK scheme, it\x0Acontains a color output did not do. Color output was done in Apogey BK01C. Color\x0Amanagement in i8275 for the programmer was implemented extremely inconveniently.\x0AThe programmer wrote into video memory a special value with codes 80h - 9Fh,\x0Awhich changed the color of all characters following it. These characters could\x0Abe displayed as spaces, but then there were unused positions on the screen. Or\x0Athe video controller could work without spaces, but this would shift the entire\x0Avideo memory by one character. The address symbol in video memory with certain\x0Acoordinates depended on the previous characters and in general could be anything.\x0AWell, no more than 16 color changes were allowed per line. And also the\x0Adesynchronization of the DMA controller and video adapter, which led to\x0Atwitching and shifting of the screen.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
},
},
"my_soft":{
dir:1,
items:{
"game_lines":{
dir:1,
items:{
"source":{
dir:1,
items:{
"c8080":{
dir:1,
items:{
"TASM.EXE":{},
"c8080.exe":{},
"Include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"op_cmp16":{},
"strchr.c":{},
"Spec":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"setcolor.c":{},
"clrscr.c":{},
"fs_read.c":{},
"fs.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"bios.h":{},
"fs_seek.c":{},
"setcolorautodisable.c":{},
"fs_swap.c":{},
"key.h":{},
"fs_exec.c":{},
"putch.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
"color.h":{},
},
},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"Lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_mul":{},
"stdlib.h":{},
"n":{
dir:1,
items:{
"div32.c":{},
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"op_ig":{},
"Apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"getmemtop.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
"sound.h":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"op_shr":{},
},
},
"TASM85.TAB":{},
},
},
"apogee_bk01-game_lines":{
dir:1,
items:{
"lines.h":{},
"lines.c":{},
"stdlib8080.inc":{},
"Graph":{
dir:1,
items:{
"GigaScreen":{
dir:1,
items:{
"StdAfx.h":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"pads.sln":{},
"-clean.bat":{},
"gigascreen.exe":{},
"pads.vcxproj.filters":{},
"Screen.txt":{},
"game.c":{},
"pads.vcxproj":{},
"game.bmp":{},
"pads.cpp":{},
"pads.vcproj":{},
},
},
"ApogeyGraph":{
dir:1,
items:{
"StdAfx.h":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"pads.sln":{},
"-clean.bat":{},
"pads.vcxproj.filters":{},
"Screen.txt":{},
"game.c":{},
"pads.vcxproj":{},
"game.bmp":{},
"pads.cpp":{},
"pads.vcproj":{},
},
},
"ApogeyGraph_RightSprite":{
dir:1,
items:{
"StdAfx.h":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"pads.sln":{},
"alt.c":{},
"-clean.bat":{},
"pads.vcxproj.filters":{},
"Screen.txt":{},
"pads.vcxproj":{},
"alt.bmp":{},
"pads.cpp":{},
"pads.vcproj":{},
},
},
"ApogeyGraph_LeftSprite":{
dir:1,
items:{
"StdAfx.h":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"pads.sln":{},
"alt.c":{},
"-clean.bat":{},
"pads.vcxproj.filters":{},
"Screen.txt":{},
"pads.vcxproj":{},
"alt.bmp":{},
"pads.cpp":{},
"pads.vcproj":{},
},
},
},
},
"errors.txt":{},
"sprites.c":{},
"font.c":{},
"music.c":{},
"screenshot1.png":{},
"-make-rka.js":{},
"tbl.bin":{},
"interface.h":{},
"-compile.bat":{},
"interface.c":{},
"screenshot2.png":{},
"lines.lst":{},
"font.h":{},
"lines.bin":{},
"music.h":{},
"LINES.asm":{},
"lines.rka":{},
"sprites.h":{},
"TASM85.TAB":{},
},
},
},
},
"lines.rka":{},
},
},
"demo_starwars":{
dir:1,
items:{
"starwars.rka":{},
"sources":{
dir:1,
items:{
"makefilm":{
dir:1,
items:{
"corp.txt":{},
"film_5.txt":{},
"film_2.txt":{},
"film_3.txt":{},
"tbl.bin":{},
"film_1.txt":{},
"film.src":{},
"film_7.txt":{},
"makeFilm.js":{},
"film_8.txt":{},
"film_9.txt":{},
"film_0.txt":{},
"film_4.txt":{},
"film_6.txt":{},
},
},
"makemusic":{
dir:1,
items:{
"tasm.exe":{},
"music_data.inc":{},
"convert_music.js":{},
"test.bin":{},
"errors.txt":{},
"test.lst":{},
"music_notes.inc":{},
"-make-rka.js":{},
"tbl.bin":{},
"-compile.bat":{},
"music.bin":{},
"test.rka":{},
"music.inc":{},
"test.asm":{},
"tasm85.tab":{},
},
},
"demo":{
dir:1,
items:{
"starwars.rka":{},
"film_5.txt":{},
"tasm.exe":{},
"music_data.inc":{},
"starwars.lst":{},
"film_2.txt.mlz":{},
"film_6.txt.mlz":{},
"errors.txt":{},
"film_2.txt":{},
"film_3.txt":{},
"megalz.exe":{},
"music_notes.inc":{},
"film_4.txt.mlz":{},
"-make-rka.js":{},
"tbl.bin":{},
"film_5.txt.mlz":{},
"starwars.bin":{},
"-compile.bat":{},
"film_9.txt.mlz":{},
"music.inc":{},
"film_1.txt":{},
"unmlz.inc":{},
"film_1.txt.mlz":{},
"film_7.txt":{},
"film_3.txt.mlz":{},
"film_7.txt.mlz":{},
"film_8.txt":{},
"film_9.txt":{},
"film_0.txt.mlz":{},
"film_0.txt":{},
"starwars.asm":{},
"tasm85.tab":{},
"film_4.txt":{},
"film_6.txt":{},
"film_8.txt.mlz":{},
},
},
},
},
},
},
"game_kosoban":{
dir:1,
items:{
"logo.png":{},
"game.png":{},
"kosoban.rka":{},
"sources":{
dir:1,
items:{
"music":{
dir:1,
items:{
"music_data.inc":{},
"testmusic":{
dir:1,
items:{
"test.bin":{},
"errors.txt":{},
"test.lst":{},
"-make-rka.js":{},
"tbl.bin":{},
"-compile.bat":{},
"test.rka":{},
"music.inc":{},
"test.asm":{},
"tasm85.tab":{},
},
},
"convert_music.js":{},
"music_notes.inc":{},
"tbl.bin":{},
"share_and_enjoy.mod":{},
},
},
"stdlib8080.inc":{},
"tasm.exe":{},
"credits.h":{},
"game.h":{},
"c8080":{
dir:1,
items:{
"c8080.exe":{},
"tasm.exe":{},
"tasm85.tab":{},
"include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"32":{
dir:1,
items:{
"sub32_32.c":{},
"set32.c":{},
"add32_16.c":{},
"cmp32_32.c":{},
"add32_32.c":{},
"sub32_16.c":{},
"div32_16.c":{},
},
},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"orion":{
dir:1,
items:{
"getmemtop.c":{},
"clrscr.c":{},
"puthex.c":{},
"puttape.c":{},
"bios.h":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
},
},
"op_cmp16":{},
"spec":{
dir:1,
items:{
"setcolor.c":{},
"clrscr.c":{},
"bios.h":{},
"setcolorautodisable.c":{},
"key.h":{},
"putch.c":{},
"color.h":{},
},
},
"strchr.c":{},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"fs":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"fs_read.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"fs_seek.c":{},
"fs_swap.c":{},
"fs_exec.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
},
},
"op_mul":{},
"stdlib.h":{},
"32.h":{},
"n":{
dir:1,
items:{
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_ig":{},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"print2.c":{},
"getmemtop.c":{},
"printn.c":{},
"apogeyscreen1b.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"apogeyscreen3a.c":{},
"puthex.c":{},
"print2m.c":{},
"apogeyscreen0b.c":{},
"apogeyscreen2c.c":{},
"print.c":{},
"apogeyscreen3c.c":{},
"printm.c":{},
"apogeyscreen1.c":{},
"apogeyscreen3b.c":{},
"puttape.c":{},
"apogeyscreen2b.c":{},
"apogeyscreenvars.c":{},
"directcursor.c":{},
"printcn.c":{},
"bios.h":{},
"kbhit.c":{},
"charaddr.c":{},
"apogeyscreen2a.c":{},
"print2n.c":{},
"putch.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"sound.h":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"op_shr":{},
},
},
},
},
"dontwork":{
dir:1,
items:{
"screen2":{
dir:1,
items:{
"screen.txt":{},
"game_old.bmp":{},
"pads.exe":{},
"game2.bmp":{},
},
},
"apogeyscreeneditor":{
dir:1,
items:{
"stdafx.cpp":{},
"stdafx.h":{},
"editor.vcxproj.user":{},
"vinlib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"symgen.bin":{},
"editor.cpp":{},
"screen.txt":{},
"scr.c":{},
"-clean.bat":{},
"scr.bin":{},
"editor.exe":{},
"editor.vcxproj":{},
"game.c":{},
"game.bmp":{},
"editor.vcxproj.filters":{},
"editor.vcproj":{},
"editor.sln":{},
},
},
},
},
"music.c":{},
"credits.c":{},
"screen.c":{},
"-make-rka.js":{},
"tbl.bin":{},
"interface.h":{},
"-compile.bat":{},
"interface.c":{},
"game.asm":{},
"game.c":{},
"tasm85.tab":{},
"music.h":{},
"screen.h":{},
},
},
},
},
"game_steelrat":{
dir:1,
items:{
"steelrat.rka":{},
"sources":{
dir:1,
items:{
"scenario":{
dir:1,
items:{
"07.txt":{},
"14.txt":{},
"01.txt":{},
"12.txt":{},
"02.txt":{},
"11.txt":{},
"10.txt":{},
"03.txt":{},
"04.txt":{},
"09.txt":{},
"13.txt":{},
"05.txt":{},
"06.txt":{},
"00.txt":{},
"08.txt":{},
},
},
"Makefile":{},
"steelrat.files":{},
"steelrat.creator":{},
"steelrat.cxxflags":{},
"steelrat.cflags":{},
"fstools.cpp":{},
"makerka.cpp":{},
"unmlz.inc":{},
"makescenario.cpp":{},
"fstools.h":{},
"build":{
dir:1,
items:{
},
},
"steelrat.asm":{},
"bin":{
dir:1,
items:{
"megalz.exe":{},
"sjasmplus":{},
"sjasmplus.exe":{},
},
},
},
},
"screen.png":{},
},
},
},
},
"russian.txt":{
name:"Апогей БК01Ц",
params:"Год\x091988\x0AОЗУ\x0952 кБ\x0AПЗУ\x094 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AТекст\x0964x25x8\x0AГрафика\x09128x62x8\x0AГруппа\x09Радио 86РК",
body:"Апогей БК01 это советский домашний компьютер, усовершенствованная версия\x0Aкомпьютера Радио 86РК. В Апогее увеличили ОЗУ до 52 Кб. Добавили трехканальный\x0Aгенератор звука (микросхема КР580ВИ53). Добавили альтернативный знакогенератор с\x0Aразмером символа 6x4 пикселя, который позволяет выводить псевдографическое\x0Aразрешение 192x102. Или 384x204 при умелом использовании знакогенератора.\x0A\x0AСуществует две версии компьютера: Апогей БК01 и Апогей БК01Ц. В Апогей БК01Ц\x0Aдобавили 8 цветов. На экране отображаются цветные символы на черном фоне, либо\x0Aчерные симоволы на цветном фоне. В псевдографическом режиме это значит два цвета\x0Aна матрицу 3x2 точек, один из которых черный. Апогей БК01 остался черно-белым, в\x0Aнего лишь добавили повышенную яркость фона (и символа одновременно). На экране\x0Aможно отобразить 4 цвета: черный (фон), темносерый (яркий фон), светлосерый\x0A(символ), белый (яркий символ).\x0A\x0AМикросхема КР580ВГ75, на которой построен видеоадаптер Радио 86РК, подерживала\x0Aвывод цветного изображения, но ради простоты схемы Радио 86РК, в нём вывод цвета\x0Aне сделали. Вывод цвета сделали в Апогее. Управление цветом в КР580ВГ75 для\x0Aпрограммиста было реализовано крайне неудобно. Программист записывал в\x0Aвидеопамять специальное значение с кодами 80h — 9Fh, которое изменяло цвет всех\x0Aследующих за ним символов. Эти символы могли отображаться в виде пробелов, но\x0Aтогда на экране были неиспользуемые позиции. Либо видеоконтроллер мог работать\x0Aбез пробелов, но это приводило к смещению всей видеопамяти на один символ. Адрес\x0Aсимвола в видеопамяти с определенными координатами зависел от предыдущих\x0Aсимволов и в общем мог быть любым. Ну и допускалось не более 16 изменений цвета\x0Aна строку. А так же могла произойти рассинхронизация ПДП контроллера и\x0Aвидеоадаптера, что приводило к дерганию и смещению экрана.\x0A",},
"software":{
dir:1,
items:{
"music":{
dir:1,
items:{
"marsh2.rka":{},
"mus2.rka":{},
"mus4.rka":{},
"mus3.rka":{},
"mus5.rka":{},
"mus7.rka":{},
"mus8.rka":{},
"musicbox.rka":{},
"mus6.rka":{},
"mus1.rka":{},
},
},
"games":{
dir:1,
items:{
"graph":{
dir:1,
items:{
"gonki.rka":{},
"planeta.rka":{},
"shmel.rka":{},
"trasina!.rka":{},
"kosoban.rka":{},
"stopkr.rka":{},
"gonki!.rka":{},
"nesushka.rka":{},
"lines.rka":{},
},
},
"text":{
dir:1,
items:{
"mirage.rka":{},
"shahty.rka":{},
"spysdem.rka":{},
"xtro.rka":{},
"slams.rka":{},
"vulkan!.rka":{},
"pogonia.rka":{},
"landmine.rka":{},
"wood.rka":{},
"xonixzm.rka":{},
"pif.rka":{},
"utka.rka":{},
"ralslal.rka":{},
"skachki.rka":{},
"descent.rka":{},
"marsiane.rka":{},
"chess.rka":{},
"barmen.rka":{},
"gorodki.rka":{},
"life1.rka":{},
"chudov.rka":{},
"badroad.rka":{},
"nim.rka":{},
"crocet.rka":{},
"box.rka":{},
"muravein.rka":{},
"tennis.rka":{},
"pacman.rka":{},
"lrunner.rka":{},
"sad.rka":{},
"otello.rka":{},
"landing.rka":{},
"stena.rka":{},
"loderun.rka":{},
"ralli.rka":{},
"sos.rka":{},
"marafon.rka":{},
"snake.rka":{},
"pentis.rka":{},
"saboteur.rka":{},
"torpatt.rka":{},
"rikoshet!.rka":{},
"stonefld.rka":{},
"rikoshet.rka":{},
"tetris.rka":{},
"skaloed.rka":{},
"life.rka":{},
"battlesh.rka":{},
"lestnica.rka":{},
"rein.rka":{},
"cirk.rka":{},
"rise.rka":{},
"shturm.rka":{},
"spbattle.rka":{},
"bdashall.rka":{},
"tulpan!.rka":{},
"spy_s.rka":{},
"lestn.rka":{},
"xonixzm!.rka":{},
"spinsect.rka":{},
"stelbi.rka":{},
"crossfir.rka":{},
"udav!.rka":{},
"stakan!.rka":{},
"udav.rka":{},
"bldrdash.rka":{},
"mars.rka":{},
"bombard.rka":{},
"tarelki.rka":{},
"meshanin.rka":{},
"digger.rka":{},
"goroskop.rka":{},
"pacman2.rka":{},
"liqsky.rka":{},
"football.rka":{},
"shashki.rka":{},
"foxhunt.rka":{},
"pingpong.rka":{},
"kommutat.rka":{},
"bdashsmr.rka":{},
"froggi15.rka":{},
"kolobok.rka":{},
"panika.rka":{},
"pvo87!.rka":{},
"buck_rog.rka":{},
"redflwr.rka":{},
"bdashfrm.rka":{},
"klad.rka":{},
},
},
},
},
"utils":{
dir:1,
items:{
"sid.rka":{},
"txtedit.rka":{},
"autozapusk.rka":{},
"proverka!.rka":{},
"proverka.rka":{},
"mikron.rka":{},
"grafik.rka":{},
"engl.rka":{},
"tadr.rka":{},
"graphred.rka":{},
"recorder.rka":{},
"kartoteka.rka":{},
"txtedcol.rka":{},
"poisk.rka":{},
"voice.rka":{},
"tvtune_i.rka":{},
},
},
"demo":{
dir:1,
items:{
"starwars.rka":{},
"simple1.rka":{},
"starwars2.rka":{},
"demo2.rka":{},
"tia2.rka":{},
"kosoban.rka":{},
"rebocop.rka":{},
"demo.rka":{},
"starwars1.rka":{},
"simple2.rka":{},
},
},
"programming":{
dir:1,
items:{
"basrk.rka":{},
"reddssm.rka":{},
"disasm1.rka":{},
"pascal_mfti.rka":{},
"basgraph.rka":{},
"basmicr.rka":{},
"best.rka":{},
"basmsx.rka":{},
"asmrk86.rka":{},
"codilca.rka":{},
"dumpred.rka":{},
"redasm.rka":{},
"disasmse.rka":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"bios.bin":{},
},
},
"my_extensions":{
dir:1,
items:{
"color_controller":{
dir:1,
items:{
"russian.txt":{},
"photo.jpg":{},
"circuit.png":{},
"photo2.jpg":{},
"circuit_sources_proteus":{
dir:1,
items:{
"kcgd.lyt":{},
"kcgd.edf":{},
"kcgd.do":{},
"kcgd.dsn":{},
},
},
},
},
"sd_controller":{
dir:1,
items:{
"files_on_sdcard":{
dir:1,
items:{
"boot":{
dir:1,
items:{
"boot.rk":{},
"sdbios.rk":{},
"shell.rk":{},
},
},
},
},
"sources":{
dir:1,
items:{
"controller":{
dir:1,
items:{
"proto.hci":{},
"86rksd.cbi":{},
"sd.hci":{},
"fs.hci":{},
"common.hci":{},
"86rksd.txt":{},
"sd.cci":{},
"86rksd.map":{},
"proto.h":{},
"86rksd.cof":{},
"fs.c":{},
"86rksd.cci":{},
"sd.h":{},
"spi.h":{},
"sd.c":{},
"proto.cci":{},
"linker":{
dir:1,
items:{
"sd.a":{},
"fs.a":{},
"proto.a":{},
"sd.o":{},
"proto.o":{},
"string.ol":{},
"string.al":{},
"86rksd.a":{},
"86rksd.o":{},
"fs.o":{},
},
},
"exe":{
dir:1,
items:{
"86rksd.rom":{},
"86rksd.hex":{},
},
},
"fs.h":{},
"86rksd.c":{},
"_clean.bat":{},
"list":{
dir:1,
items:{
"86rksd.lst":{},
"86rksd.asm":{},
},
},
"spi.c":{},
"proto.c":{},
"86rksd.fct":{},
"common.h":{},
"86rksd.prj":{},
"fs.cci":{},
},
},
"c8080":{
dir:1,
items:{
"c8080.exe":{},
"tasm.exe":{},
"tasm85.tab":{},
"include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"32":{
dir:1,
items:{
"sub32_32.c":{},
"set32.c":{},
"add32_16.c":{},
"cmp32_32.c":{},
"add32_32.c":{},
"sub32_16.c":{},
"div32_16.c":{},
},
},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"radio86rk":{
dir:1,
items:{
"print2.c":{},
"getmemtop.c":{},
"radio8screen0B.c":{},
"charAddr.c":{},
"directCursor.c":{},
"printn.c":{},
"radio8screenvars.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print2m.c":{},
"print.c":{},
"printm.c":{},
"puttape.c":{},
"radio8screen1B.c":{},
"radio8screen2B.c":{},
"radio8screen2A.c":{},
"printcn.c":{},
"bios.h":{},
"kbhit.c":{},
"print2n.c":{},
"putch.c":{},
"radio8screen0.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"radio8screen1.c":{},
"radio8screen2C.c":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"orion":{
dir:1,
items:{
"getmemtop.c":{},
"clrscr.c":{},
"puthex.c":{},
"puttape.c":{},
"bios.h":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
},
},
"op_cmp16":{},
"spec":{
dir:1,
items:{
"setcolor.c":{},
"clrscr.c":{},
"bios.h":{},
"setcolorautodisable.c":{},
"key.h":{},
"putch.c":{},
"color.h":{},
},
},
"strchr.c":{},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"fs":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"fs_read.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"fs_seek.c":{},
"fs_swap.c":{},
"fs_exec.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
},
},
"op_mul":{},
"stdlib.h":{},
"32.h":{},
"n":{
dir:1,
items:{
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_ig":{},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"print2.c":{},
"getmemtop.c":{},
"charAddr.c":{},
"directCursor.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print2m.c":{},
"print.c":{},
"printm.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"kbhit.c":{},
"print2n.c":{},
"putch.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"sound.h":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"op_shr":{},
},
},
},
},
"circuit":{
dir:1,
items:{
"bottom1.bmp":{},
"86rksd.edf":{},
"86rksd.lyt":{},
"86rksd.do":{},
"doc1.docx":{},
"86rksd.dsn":{},
"86rksd_clear.lyt":{},
"Last Loaded 86rksd.DBK":{},
"top1.bmp":{},
"86rksd.sts":{},
},
},
"boot_rk":{
dir:1,
items:{
"boot.lst":{},
"tasm.exe":{},
"errors.txt":{},
"boot.rk":{},
"-compile.bat":{},
"tasm85.tab":{},
"boot.asm":{},
},
},
"sdbios_rk":{
dir:1,
items:{
"sdbios.lst":{},
"tasm.exe":{},
"sdbios.bin":{},
"-make.bat":{},
"-make-rka.js":{},
"tbl.bin":{},
"sdbios.rk":{},
"tasm85.tab":{},
"sdbios.asm":{},
},
},
"shell_rk":{
dir:1,
items:{
"shell.h":{},
"cmd_delete.c":{},
"cmd_new.c":{},
"stdlib8080.inc":{},
"errors.txt":{},
"readme.txt":{},
"shell.lst":{},
"fs.c":{},
"cmd_sel.c":{},
"-make-rka.js":{},
"tbl.bin":{},
"interface.h":{},
"fs.h":{},
"-compile.bat":{},
"interface.c":{},
"shell.bin":{},
"shell.rka":{},
"shell.rk":{},
"cmd_copymove.c":{},
"shell.c":{},
"cmd_freespace.c":{},
"tasm85.tab":{},
"shell.asm":{},
},
},
},
},
"circuit.png":{},
"ready_device.jpg":{},
"shell.jpg":{},
"ready_device_1.jpg":{},
},
},
"rom_disk":{
dir:1,
items:{
"rom8.jpg":{},
"rom9.png":{},
"russian.html":{},
"rom11.jpg":{},
"rom6.png":{},
"rom7.jpg":{},
"49lf0x0":{
dir:1,
items:{
"ready2.jpg":{},
"circuit_pcb":{
dir:1,
items:{
"apogeyromdisk_lf2.lyt":{},
"apogeyromdisk_lf2.dsn":{},
},
},
"rom256.rom":{},
"sources":{
dir:1,
items:{
"menusrc":{
dir:1,
items:{
"unmlz_org.inc":{},
"menuheader.inc":{},
"menu.asm":{},
"unmlz.bin":{},
"-compile.bat":{},
"menu.bin":{},
"sjasmplus.exe":{},
"unmlz.asm":{},
"dir.inc":{},
},
},
"makerom":{
dir:1,
items:{
"translaterk86.h":{},
"stdafx.cpp":{},
"stdafx.h":{},
"vinlib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"exec.cpp":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
},
},
"folders.cpp":{},
"translaterk86.cpp":{},
"folders.h":{},
"makerom.sln":{},
"inifile.cpp":{},
"-clean.bat":{},
"inifile.h":{},
"romwriter.h":{},
"makerom.cpp":{},
"romwriter.cpp":{},
"makerom.vcproj":{},
},
},
"flash_256":{
dir:1,
items:{
"files":{
dir:1,
items:{
"mirage.rka":{},
"shahty.rka":{},
"xtro.rka":{},
"slams.rka":{},
"pogonia.rka":{},
"landmine.rka":{},
"wood.rka":{},
"pif.rka":{},
"utka.rka":{},
"ralslal.rka":{},
"skachki.rka":{},
"descent.rka":{},
"pvo87 ЦВ.rka":{},
"marsiane.rka":{},
"udav ЦВ.rka":{},
"barmen.rka":{},
"gorodki.rka":{},
"life1.rka":{},
"chudov.rka":{},
"badroad.rka":{},
"nim.rka":{},
"crocet.rka":{},
"box.rka":{},
"muravein.rka":{},
"tennis.rka":{},
"pacman.rka":{},
"lrunner.rka":{},
"vulkan ЦВ.rka":{},
"sad.rka":{},
"otello.rka":{},
"landing.rka":{},
"stena.rka":{},
"loderun.rka":{},
"rikoshet ЦВ.rka":{},
"gonki ГР.rka":{},
"ralli.rka":{},
"sos.rka":{},
"marafon.rka":{},
"snake.rka":{},
"pentis.rka":{},
"saboteur.rka":{},
"torpatt.rka":{},
"stonefld.rka":{},
"skaloed.rka":{},
"life.rka":{},
"battlesh.rka":{},
"lestnica.rka":{},
"rein.rka":{},
"cirk.rka":{},
"rise.rka":{},
"shturm.rka":{},
"spbattle.rka":{},
"bdashall.rka":{},
"spy_s.rka":{},
"lestn.rka":{},
"tulpan ЦВ.rka":{},
"stelbi.rka":{},
"crossfir.rka":{},
"planeta ГР.rka":{},
"mars.rka":{},
"bombard.rka":{},
"tarelki.rka":{},
"meshanin.rka":{},
"digger.rka":{},
"goroskop.rka":{},
"liqsky.rka":{},
"football.rka":{},
"shashki.rka":{},
"trasina ГР.rka":{},
"foxhunt.rka":{},
"lines.rka":{},
"pingpong.rka":{},
"kommutat.rka":{},
"nesushka ГР.rka":{},
"froggi15.rka":{},
"shmel ГР.rka":{},
"kolobok.rka":{},
"panika.rka":{},
"stakan ЦВ.rka":{},
"buck_rog.rka":{},
"redflwr.rka":{},
"xonixzm ЦВ.rka":{},
"klad.rka":{},
},
},
"makerom.ini":{},
"rom256.rom":{},
"megalz.exe":{},
"makerom.exe":{},
"menu.bin":{},
"loader0.bin":{},
},
},
"loader_sources":{
dir:1,
items:{
"loader1.asm":{},
"loader0.asm":{},
"-make.bat":{},
"loader1.bin":{},
"sjasmplus.exe":{},
"loader0.bin":{},
},
},
"flash_512":{
dir:1,
items:{
"Демо":{
dir:1,
items:{
"demo2.rka.pak":{},
"demo.rka.pak":{},
"demo2.rka":{},
"demo.rka":{},
},
},
"makerom.ini":{},
"Программирование":{
dir:1,
items:{
"basrk.rka":{},
"reddssm.rka.pak":{},
"reddssm.rka":{},
"disasm1.rka":{},
"pascal_mfti.rka":{},
"disasm1.rka.pak":{},
"basgraph.rka":{},
"asmrk86.rka.pak":{},
"codilca.rka.pak":{},
"basmicr.rka":{},
"redasm.rka.pak":{},
"disasmse.rka.pak":{},
"best.rka":{},
"basmsx.rka.pak":{},
"pascal_mfti.rka.pak":{},
"basmsx.rka":{},
"asmrk86.rka":{},
"codilca.rka":{},
"dumpred.rka":{},
"basmicr.rka.pak":{},
"basgraph.rka.pak":{},
"redasm.rka":{},
"best.rka.pak":{},
"disasmse.rka":{},
"basrk.rka.pak":{},
"dumpred.rka.pak":{},
},
},
"Музыка":{
dir:1,
items:{
"marsh2.rka":{},
"mus2.rka":{},
"mus6.rka.pak":{},
"mus8.rka.pak":{},
"mus4.rka":{},
"mus3.rka":{},
"mus7.rka.pak":{},
"mus5.rka":{},
"mus7.rka":{},
"mus2.rka.pak":{},
"mus8.rka":{},
"mus5.rka.pak":{},
"marsh2.rka.pak":{},
"mus3.rka.pak":{},
"musicbox.rka":{},
"mus6.rka":{},
"mus1.rka.pak":{},
"musicbox.rka.pak":{},
"mus4.rka.pak":{},
"mus1.rka":{},
},
},
"Игры":{
dir:1,
items:{
"mirage.rka":{},
"foxhunt.rka.pak":{},
"shahty.rka":{},
"slams.rka.pak":{},
"spysdem.rka":{},
"xtro.rka":{},
"utka.rka.pak":{},
"slams.rka":{},
"pogonia.rka":{},
"bldrdash.rka.pak":{},
"landmine.rka":{},
"goroskop.rka.pak":{},
"wood.rka":{},
"pentis.rka.pak":{},
"stena.rka.pak":{},
"shturm.rka.pak":{},
"chess.rka.pak":{},
"shahty.rka.pak":{},
"xonixzm.rka":{},
"battlesh.rka.pak":{},
"pif.rka":{},
"udav.rka.pak":{},
"utka.rka":{},
"digger.rka.pak":{},
"ralslal.rka":{},
"chudov.rka.pak":{},
"spy_s.rka.pak":{},
"skachki.rka":{},
"sad.rka.pak":{},
"descent.rka":{},
"pvo87 ЦВ.rka":{},
"xonixzm.rka.pak":{},
"snake.rka.pak":{},
"buck_rog.rka.pak":{},
"rise.rka.pak":{},
"rikoshet.rka.pak":{},
"cirk.rka.pak":{},
"saboteur.rka.pak":{},
"marsiane.rka":{},
"landmine.rka.pak":{},
"udav ЦВ.rka":{},
"chess.rka":{},
"bdashall.rka.pak":{},
"barmen.rka":{},
"gorodki.rka":{},
"life1.rka":{},
"chudov.rka":{},
"wood.rka.pak":{},
"ralli.rka.pak":{},
"bdashsmr.rka.pak":{},
"badroad.rka":{},
"stelbi.rka.pak":{},
"nim.rka":{},
"descent.rka.pak":{},
"spbattle.rka.pak":{},
"crocet.rka":{},
"box.rka":{},
"muravein.rka":{},
"tennis.rka":{},
"bdashfrm.rka.pak":{},
"pacman.rka":{},
"lrunner.rka":{},
"skaloed.rka.pak":{},
"vulkan ЦВ.rka":{},
"sad.rka":{},
"gorodki.rka.pak":{},
"torpatt.rka.pak":{},
"otello.rka":{},
"rikoshet ЦВ.rka.pak":{},
"landing.rka":{},
"stena.rka":{},
"loderun.rka":{},
"rikoshet ЦВ.rka":{},
"ralli.rka":{},
"sos.rka":{},
"marafon.rka":{},
"snake.rka":{},
"pentis.rka":{},
"lestn.rka.pak":{},
"loderun.rka.pak":{},
"saboteur.rka":{},
"barmen.rka.pak":{},
"marafon.rka.pak":{},
"torpatt.rka":{},
"klad.rka.pak":{},
"stonefld.rka":{},
"rikoshet.rka":{},
"lestnica.rka.pak":{},
"marsiane.rka.pak":{},
"tetris.rka":{},
"udav ЦВ.rka.pak":{},
"skaloed.rka":{},
"mars.rka.pak":{},
"life.rka":{},
"battlesh.rka":{},
"lestnica.rka":{},
"rein.rka":{},
"cirk.rka":{},
"rise.rka":{},
"mirage.rka.pak":{},
"otello.rka.pak":{},
"shturm.rka":{},
"lrunner.rka.pak":{},
"muravein.rka.pak":{},
"kolobok.rka.pak":{},
"badroad.rka.pak":{},
"spbattle.rka":{},
"spysdem.rka.pak":{},
"pvo87 ЦВ.rka.pak":{},
"pogonia.rka.pak":{},
"bombard.rka.pak":{},
"bdashall.rka":{},
"life.rka.pak":{},
"tulpan ЦВ.rka.pak":{},
"box.rka.pak":{},
"xtro.rka.pak":{},
"crocet.rka.pak":{},
"spy_s.rka":{},
"nim.rka.pak":{},
"tennis.rka.pak":{},
"lestn.rka":{},
"tulpan ЦВ.rka":{},
"spinsect.rka":{},
"skachki.rka.pak":{},
"stelbi.rka":{},
"shashki.rka.pak":{},
"crossfir.rka":{},
"sos.rka.pak":{},
"pingpong.rka.pak":{},
"udav.rka":{},
"bldrdash.rka":{},
"froggi15.rka.pak":{},
"rein.rka.pak":{},
"mars.rka":{},
"bombard.rka":{},
"tarelki.rka":{},
"panika.rka.pak":{},
"meshanin.rka":{},
"xonixzm ЦВ.rka.pak":{},
"life1.rka.pak":{},
"digger.rka":{},
"goroskop.rka":{},
"tetris.rka.pak":{},
"pacman2.rka":{},
"liqsky.rka":{},
"football.rka":{},
"shashki.rka":{},
"kommutat.rka.pak":{},
"foxhunt.rka":{},
"stonefld.rka.pak":{},
"ralslal.rka.pak":{},
"pacman.rka.pak":{},
"crossfir.rka.pak":{},
"stakan ЦВ.rka.pak":{},
"pingpong.rka":{},
"kommutat.rka":{},
"tarelki.rka.pak":{},
"pacman2.rka.pak":{},
"liqsky.rka.pak":{},
"bdashsmr.rka":{},
"football.rka.pak":{},
"froggi15.rka":{},
"kolobok.rka":{},
"panika.rka":{},
"stakan ЦВ.rka":{},
"meshanin.rka.pak":{},
"redflwr.rka.pak":{},
"buck_rog.rka":{},
"landing.rka.pak":{},
"redflwr.rka":{},
"bdashfrm.rka":{},
"xonixzm ЦВ.rka":{},
"spinsect.rka.pak":{},
"vulkan ЦВ.rka.pak":{},
"klad.rka":{},
"pif.rka.pak":{},
},
},
"Утилиты":{
dir:1,
items:{
"sid.rka":{},
"proverka ЦВ.rka":{},
"txtedcol.rka.pak":{},
"kartoteka.rka.pak":{},
"proverka.rka.pak":{},
"sid.rka.pak":{},
"txtedit.rka":{},
"autozapusk.rka":{},
"proverka.rka":{},
"mikron.rka":{},
"recorder.rka.pak":{},
"grafik.rka.pak":{},
"proverka ЦВ.rka.pak":{},
"poisk.rka.pak":{},
"grafik.rka":{},
"mikron.rka.pak":{},
"engl.rka":{},
"tadr.rka":{},
"engl.rka.pak":{},
"tvtune_i.rka.pak":{},
"graphred.rka":{},
"autozapusk.rka.pak":{},
"recorder.rka":{},
"voice.rka.pak":{},
"graphred.rka.pak":{},
"kartoteka.rka":{},
"txtedcol.rka":{},
"poisk.rka":{},
"tadr.rka.pak":{},
"txtedit.rka.pak":{},
"voice.rka":{},
"tvtune_i.rka":{},
},
},
"megalz.exe":{},
"makerom.exe":{},
"Графические игры":{
dir:1,
items:{
"gonki.rka":{},
"planeta.rka":{},
"trasina ЦВ.rka":{},
"shmel.rka":{},
"gonki ЦВ.rka":{},
"planeta.rka.pak":{},
"trasina ЦВ.rka.pak":{},
"nesushka.rka.pak":{},
"gonki ЦВ.rka.pak":{},
"shmel.rka.pak":{},
"nesushka.rka":{},
"gonki.rka.pak":{},
"lines.rka":{},
"lines.rka.pak":{},
},
},
"menu.bin":{},
"rom512.rom":{},
"loader0.bin":{},
},
},
},
},
"circuit.png":{},
"rom512.rom":{},
"ready1.jpg":{},
"ready0.jpg":{},
},
},
"rom4.jpg":{},
"rom5.jpg":{},
"rom1.jpg":{},
"rom10.jpg":{},
"std_rom":{
dir:1,
items:{
"circuit_pcb_plcc":{
dir:1,
items:{
"apogey_cart.lyt":{},
"bottom.png":{},
"top_2.png":{},
"3d.jpg":{},
"apogey_cart.dsn":{},
},
},
"ready2.jpg":{},
"circuit_pcb_plcc_socket":{
dir:1,
items:{
"apogey_cart.lyt":{},
"3d.jpg":{},
"apogey_cart.dsn":{},
},
},
"rom256.rom":{},
"ready3.jpg":{},
"sources":{
dir:1,
items:{
"menusrc":{
dir:1,
items:{
"unmlz_org.inc":{},
"menuheader.inc":{},
"loader0.asm":{},
"menu.asm":{},
"-compile.bat":{},
"menu.bin":{},
"sjasmplus.exe":{},
"unmlz.asm":{},
"loader0.bin":{},
},
},
"flash256":{
dir:1,
items:{
"files":{
dir:1,
items:{
"mirage.rka":{},
"foxhunt.rka.pak":{},
"shahty.rka":{},
"slams.rka.pak":{},
"utka.rka.pak":{},
"slams.rka":{},
"pogonia.rka":{},
"landmine.rka":{},
"goroskop.rka.pak":{},
"wood.rka":{},
"pentis.rka.pak":{},
"stena.rka.pak":{},
"shturm.rka.pak":{},
"shahty.rka.pak":{},
"battlesh.rka.pak":{},
"pif.rka":{},
"utka.rka":{},
"digger.rka.pak":{},
"ralslal.rka":{},
"chudov.rka.pak":{},
"spy_s.rka.pak":{},
"shmel ГР.rka.pak":{},
"sad.rka.pak":{},
"descent.rka":{},
"pvo87 ЦВ.rka":{},
"snake.rka.pak":{},
"buck_rog.rka.pak":{},
"rise.rka.pak":{},
"cirk.rka.pak":{},
"saboteur.rka.pak":{},
"marsiane.rka":{},
"landmine.rka.pak":{},
"udav ЦВ.rka":{},
"bdashall.rka.pak":{},
"barmen.rka":{},
"gorodki.rka":{},
"life1.rka":{},
"chudov.rka":{},
"wood.rka.pak":{},
"ralli.rka.pak":{},
"badroad.rka":{},
"stelbi.rka.pak":{},
"nim.rka":{},
"descent.rka.pak":{},
"spbattle.rka.pak":{},
"crocet.rka":{},
"box.rka":{},
"muravein.rka":{},
"tennis.rka":{},
"pacman.rka":{},
"lrunner.rka":{},
"skaloed.rka.pak":{},
"vulkan ЦВ.rka":{},
"sad.rka":{},
"gorodki.rka.pak":{},
"torpatt.rka.pak":{},
"otello.rka":{},
"rikoshet ЦВ.rka.pak":{},
"landing.rka":{},
"stena.rka":{},
"loderun.rka":{},
"rikoshet ЦВ.rka":{},
"gonki ГР.rka":{},
"ralli.rka":{},
"sos.rka":{},
"marafon.rka":{},
"snake.rka":{},
"pentis.rka":{},
"lestn.rka.pak":{},
"loderun.rka.pak":{},
"saboteur.rka":{},
"barmen.rka.pak":{},
"marafon.rka.pak":{},
"gonki ГР.rka.pak":{},
"torpatt.rka":{},
"klad.rka.pak":{},
"stonefld.rka":{},
"lestnica.rka.pak":{},
"marsiane.rka.pak":{},
"udav ЦВ.rka.pak":{},
"skaloed.rka":{},
"mars.rka.pak":{},
"life.rka":{},
"battlesh.rka":{},
"lestnica.rka":{},
"rein.rka":{},
"cirk.rka":{},
"planeta ГР.rka.pak":{},
"rise.rka":{},
"mirage.rka.pak":{},
"otello.rka.pak":{},
"shturm.rka":{},
"lrunner.rka.pak":{},
"muravein.rka.pak":{},
"kolobok.rka.pak":{},
"badroad.rka.pak":{},
"spbattle.rka":{},
"gigascr.rka.pak":{},
"pvo87 ЦВ.rka.pak":{},
"pogonia.rka.pak":{},
"bombard.rka.pak":{},
"bdashall.rka":{},
"life.rka.pak":{},
"tulpan ЦВ.rka.pak":{},
"box.rka.pak":{},
"crocet.rka.pak":{},
"spy_s.rka":{},
"nim.rka.pak":{},
"tennis.rka.pak":{},
"lestn.rka":{},
"tulpan ЦВ.rka":{},
"stelbi.rka":{},
"shashki.rka.pak":{},
"crossfir.rka":{},
"sos.rka.pak":{},
"planeta ГР.rka":{},
"pingpong.rka.pak":{},
"trasina ГР.rka.pak":{},
"froggi15.rka.pak":{},
"rein.rka.pak":{},
"mars.rka":{},
"bombard.rka":{},
"tarelki.rka":{},
"panika.rka.pak":{},
"meshanin.rka":{},
"xonixzm ЦВ.rka.pak":{},
"gigascr.rka":{},
"life1.rka.pak":{},
"digger.rka":{},
"goroskop.rka":{},
"liqsky.rka":{},
"football.rka":{},
"shashki.rka":{},
"trasina ГР.rka":{},
"kommutat.rka.pak":{},
"foxhunt.rka":{},
"stonefld.rka.pak":{},
"ralslal.rka.pak":{},
"pacman.rka.pak":{},
"crossfir.rka.pak":{},
"nesushka ГР.rka.pak":{},
"stakan ЦВ.rka.pak":{},
"pingpong.rka":{},
"kommutat.rka":{},
"tarelki.rka.pak":{},
"nesushka ГР.rka":{},
"liqsky.rka.pak":{},
"football.rka.pak":{},
"froggi15.rka":{},
"shmel ГР.rka":{},
"kolobok.rka":{},
"panika.rka":{},
"stakan ЦВ.rka":{},
"meshanin.rka.pak":{},
"redflwr.rka.pak":{},
"buck_rog.rka":{},
"landing.rka.pak":{},
"redflwr.rka":{},
"xonixzm ЦВ.rka":{},
"vulkan ЦВ.rka.pak":{},
"klad.rka":{},
"pif.rka.pak":{},
},
},
"makerom.ini":{},
"rom256.rom":{},
"megalz.exe":{},
"makerom.exe":{},
"menu.bin":{},
"loader0.bin":{},
},
},
"flash512":{
dir:1,
items:{
"Демо":{
dir:1,
items:{
"demo2.rka.pak":{},
"demo.rka.pak":{},
"demo2.rka":{},
"demo.rka":{},
},
},
"makerom.ini":{},
"Программирование":{
dir:1,
items:{
"basrk.rka":{},
"reddssm.rka.pak":{},
"reddssm.rka":{},
"disasm1.rka":{},
"pascal_mfti.rka":{},
"disasm1.rka.pak":{},
"basgraph.rka":{},
"asmrk86.rka.pak":{},
"codilca.rka.pak":{},
"basmicr.rka":{},
"redasm.rka.pak":{},
"disasmse.rka.pak":{},
"best.rka":{},
"basmsx.rka.pak":{},
"pascal_mfti.rka.pak":{},
"basmsx.rka":{},
"asmrk86.rka":{},
"codilca.rka":{},
"dumpred.rka":{},
"basmicr.rka.pak":{},
"basgraph.rka.pak":{},
"redasm.rka":{},
"best.rka.pak":{},
"disasmse.rka":{},
"basrk.rka.pak":{},
"dumpred.rka.pak":{},
},
},
"Музыка":{
dir:1,
items:{
"marsh2.rka":{},
"mus2.rka":{},
"mus6.rka.pak":{},
"mus8.rka.pak":{},
"mus4.rka":{},
"mus3.rka":{},
"mus7.rka.pak":{},
"mus5.rka":{},
"mus7.rka":{},
"mus2.rka.pak":{},
"mus8.rka":{},
"mus5.rka.pak":{},
"marsh2.rka.pak":{},
"mus3.rka.pak":{},
"musicbox.rka":{},
"mus6.rka":{},
"mus1.rka.pak":{},
"musicbox.rka.pak":{},
"mus4.rka.pak":{},
"mus1.rka":{},
},
},
"Игры":{
dir:1,
items:{
"mirage.rka":{},
"foxhunt.rka.pak":{},
"shahty.rka":{},
"slams.rka.pak":{},
"spysdem.rka":{},
"xtro.rka":{},
"utka.rka.pak":{},
"slams.rka":{},
"pogonia.rka":{},
"bldrdash.rka.pak":{},
"landmine.rka":{},
"goroskop.rka.pak":{},
"wood.rka":{},
"pentis.rka.pak":{},
"stena.rka.pak":{},
"shturm.rka.pak":{},
"chess.rka.pak":{},
"shahty.rka.pak":{},
"xonixzm.rka":{},
"battlesh.rka.pak":{},
"pif.rka":{},
"udav.rka.pak":{},
"utka.rka":{},
"digger.rka.pak":{},
"ralslal.rka":{},
"chudov.rka.pak":{},
"spy_s.rka.pak":{},
"skachki.rka":{},
"sad.rka.pak":{},
"descent.rka":{},
"pvo87 ЦВ.rka":{},
"xonixzm.rka.pak":{},
"snake.rka.pak":{},
"buck_rog.rka.pak":{},
"rise.rka.pak":{},
"rikoshet.rka.pak":{},
"cirk.rka.pak":{},
"saboteur.rka.pak":{},
"marsiane.rka":{},
"landmine.rka.pak":{},
"udav ЦВ.rka":{},
"chess.rka":{},
"bdashall.rka.pak":{},
"barmen.rka":{},
"gorodki.rka":{},
"life1.rka":{},
"chudov.rka":{},
"wood.rka.pak":{},
"ralli.rka.pak":{},
"bdashsmr.rka.pak":{},
"badroad.rka":{},
"stelbi.rka.pak":{},
"nim.rka":{},
"descent.rka.pak":{},
"spbattle.rka.pak":{},
"crocet.rka":{},
"box.rka":{},
"muravein.rka":{},
"tennis.rka":{},
"bdashfrm.rka.pak":{},
"pacman.rka":{},
"lrunner.rka":{},
"skaloed.rka.pak":{},
"vulkan ЦВ.rka":{},
"sad.rka":{},
"gorodki.rka.pak":{},
"torpatt.rka.pak":{},
"otello.rka":{},
"rikoshet ЦВ.rka.pak":{},
"landing.rka":{},
"stena.rka":{},
"loderun.rka":{},
"rikoshet ЦВ.rka":{},
"ralli.rka":{},
"sos.rka":{},
"marafon.rka":{},
"snake.rka":{},
"pentis.rka":{},
"lestn.rka.pak":{},
"loderun.rka.pak":{},
"saboteur.rka":{},
"barmen.rka.pak":{},
"marafon.rka.pak":{},
"torpatt.rka":{},
"klad.rka.pak":{},
"stonefld.rka":{},
"rikoshet.rka":{},
"lestnica.rka.pak":{},
"marsiane.rka.pak":{},
"tetris.rka":{},
"udav ЦВ.rka.pak":{},
"skaloed.rka":{},
"mars.rka.pak":{},
"life.rka":{},
"battlesh.rka":{},
"lestnica.rka":{},
"rein.rka":{},
"cirk.rka":{},
"rise.rka":{},
"mirage.rka.pak":{},
"otello.rka.pak":{},
"shturm.rka":{},
"lrunner.rka.pak":{},
"muravein.rka.pak":{},
"kolobok.rka.pak":{},
"badroad.rka.pak":{},
"spbattle.rka":{},
"spysdem.rka.pak":{},
"pvo87 ЦВ.rka.pak":{},
"pogonia.rka.pak":{},
"bombard.rka.pak":{},
"bdashall.rka":{},
"life.rka.pak":{},
"tulpan ЦВ.rka.pak":{},
"box.rka.pak":{},
"xtro.rka.pak":{},
"crocet.rka.pak":{},
"spy_s.rka":{},
"nim.rka.pak":{},
"tennis.rka.pak":{},
"lestn.rka":{},
"tulpan ЦВ.rka":{},
"spinsect.rka":{},
"skachki.rka.pak":{},
"stelbi.rka":{},
"shashki.rka.pak":{},
"crossfir.rka":{},
"sos.rka.pak":{},
"pingpong.rka.pak":{},
"udav.rka":{},
"bldrdash.rka":{},
"froggi15.rka.pak":{},
"rein.rka.pak":{},
"mars.rka":{},
"bombard.rka":{},
"tarelki.rka":{},
"panika.rka.pak":{},
"meshanin.rka":{},
"xonixzm ЦВ.rka.pak":{},
"life1.rka.pak":{},
"digger.rka":{},
"goroskop.rka":{},
"tetris.rka.pak":{},
"pacman2.rka":{},
"liqsky.rka":{},
"football.rka":{},
"shashki.rka":{},
"kommutat.rka.pak":{},
"foxhunt.rka":{},
"stonefld.rka.pak":{},
"ralslal.rka.pak":{},
"pacman.rka.pak":{},
"crossfir.rka.pak":{},
"stakan ЦВ.rka.pak":{},
"pingpong.rka":{},
"kommutat.rka":{},
"tarelki.rka.pak":{},
"pacman2.rka.pak":{},
"liqsky.rka.pak":{},
"bdashsmr.rka":{},
"football.rka.pak":{},
"froggi15.rka":{},
"kolobok.rka":{},
"panika.rka":{},
"stakan ЦВ.rka":{},
"meshanin.rka.pak":{},
"redflwr.rka.pak":{},
"buck_rog.rka":{},
"landing.rka.pak":{},
"redflwr.rka":{},
"bdashfrm.rka":{},
"xonixzm ЦВ.rka":{},
"spinsect.rka.pak":{},
"vulkan ЦВ.rka.pak":{},
"klad.rka":{},
"pif.rka.pak":{},
},
},
"Утилиты":{
dir:1,
items:{
"sid.rka":{},
"proverka ЦВ.rka":{},
"txtedcol.rka.pak":{},
"kartoteka.rka.pak":{},
"proverka.rka.pak":{},
"sid.rka.pak":{},
"txtedit.rka":{},
"autozapusk.rka":{},
"proverka.rka":{},
"mikron.rka":{},
"recorder.rka.pak":{},
"grafik.rka.pak":{},
"proverka ЦВ.rka.pak":{},
"poisk.rka.pak":{},
"grafik.rka":{},
"mikron.rka.pak":{},
"engl.rka":{},
"tadr.rka":{},
"engl.rka.pak":{},
"tvtune_i.rka.pak":{},
"graphred.rka":{},
"autozapusk.rka.pak":{},
"recorder.rka":{},
"voice.rka.pak":{},
"graphred.rka.pak":{},
"kartoteka.rka":{},
"txtedcol.rka":{},
"poisk.rka":{},
"tadr.rka.pak":{},
"txtedit.rka.pak":{},
"voice.rka":{},
"tvtune_i.rka":{},
},
},
"megalz.exe":{},
"makerom.exe":{},
"Графические игры":{
dir:1,
items:{
"gonki.rka":{},
"planeta.rka":{},
"trasina ЦВ.rka":{},
"shmel.rka":{},
"gonki ЦВ.rka":{},
"planeta.rka.pak":{},
"trasina ЦВ.rka.pak":{},
"nesushka.rka.pak":{},
"gonki ЦВ.rka.pak":{},
"shmel.rka.pak":{},
"nesushka.rka":{},
"gonki.rka.pak":{},
"lines.rka":{},
"lines.rka.pak":{},
},
},
"menu.bin":{},
"rom512.rom":{},
"loader0.bin":{},
},
},
"makeromsrc":{
dir:1,
items:{
"translaterk86.h":{},
"stdafx.cpp":{},
"stdafx.h":{},
"vinlib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"exec.cpp":{},
"console.cpp":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"folders.cpp":{},
"translaterk86.cpp":{},
"makerom.ini":{},
"folders.h":{},
"makerom.sln":{},
"inifile.cpp":{},
"-clean.bat":{},
"inifile.h":{},
"menu.bin":{},
"loader0.bin":{},
"romwriter.h":{},
"makerom.cpp":{},
"romwriter.cpp":{},
"makerom.vcproj":{},
},
},
},
},
"circuit.png":{},
"circuit_pcb_dip":{
dir:1,
items:{
"apogey_cart.lyt":{},
"bottom.png":{},
"top.png":{},
"3d.jpg":{},
"apogey_cart.dsn":{},
},
},
"rom512.rom":{},
"ready1.jpg":{},
},
},
"rom2.png":{},
"rom3.jpg":{},
},
},
},
},
"my_emulator.html":{
dir:1,
items:{
"file_gonki.js":{},
"file_simple1.js":{},
"file_bdashall.js":{},
"file_trasina!.js":{},
"file_starwars.js":{},
"russian.html":{},
"vg75.js":{},
"file_stopkr.js":{},
"fileList.js":{},
"file_steelrat.js":{},
"file_lines.js":{},
"file_kosoban.js":{},
"file_vulkan!.js":{},
"apogeeBk01emu.js":{},
"file_nesushka.js":{},
"i8080.js":{},
"file_shmel.js":{},
"vi53.js":{},
"apogee_rom.js":{},
"keyboardRk86.js":{},
"file_planeta.js":{},
"file_graphred.js":{},
"file_robocop.js":{},
"file_xonixzm!.js":{},
"file_basic.js":{},
"apogeefont.png":{},
},
},
"doc":{
dir:1,
items:{
"Apogee_BK01C_Power_Supply_Manual.djvu":{},
"Apogee_BK01C_Chargen.png":{},
"Apogee_BK01C_Schematics_Retouched.djvu":{},
"Apogee_BK01C_User_Manual.djvu":{},
"Apogee_BK01C_Power_Supply_Schematics.djvu":{},
"Apogee_BK01C_User_Manual_App_1-1.djvu":{},
"Apogee_BK01C_User_Manual_App_2.djvu":{},
"Apogee_BK01C_User_Manual_App_3.djvu":{},
"Apogee_BK01C_User_Manual_App_4.djvu":{},
"Apogee_BK01C_User_Manual_App_1.djvu":{},
},
},
},
synced:{
"Apogey_BK01C/my_emulator.html/russian.html": "Online эмулятор Апогей БК01Ц",
},
},
"BK0011M":{
dir:1,
items:{
"english.txt":{
name:"BK0011M",
params:"Year\x091990\x0ARAM\x09128 kB\x0AROM\x0932 kB\x0ACPU\x09K1801VM1 4 MHz\x0AGraph\x09512x256x2, 256x256x4, 8 colors palette\x0AIn ROM\x09Focal\x0AGroup\x09BK0010",
body:"BK0011M is a version of the BK0011 computer with repaired sound. Programs for\x0ABK0010 running on BK0011 were executed without sound.\x0A\x0AI will not dare to say for all BK0011M, but all computers that I have seen have\x0Aa good keyboard. Keyboard similar in design to MC7007 (UKNC) or Delta S.\x0A\x0ANo new features have emerged. This is the last computer in the BK series.\x0A",},
"photo":{
dir:1,
items:{
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"БК0011М",
params:"Год\x091990\x0AОЗУ\x09128 кБ\x0AПЗУ\x0932 кБ\x0AПроц\x09К1801ВМ1 4 MГц\x0AГрафика\x09512x256x2, 256x256x4, палитра 8 цветов\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09БК0010",
body:"БК0011М это версия компьютера БК0011 с исправленным звуком. Программы для БК0010 запущенные на БК0011 выполнялись без звука.\x0A\x0AЯ не рискну сказать за все БК0011М, но во всех компьютерах, что я видел\x0Aустановлена хорошая клавиатура, аналогичная по конструкции МС7007 (УКНЦ) или\x0AДельта-С.\x0A\x0AНикаких новых возможностей не появилось. Это последний компьютер в серии БК.\x0A\x0A",},
"firmware":{
dir:1,
items:{
"bk0011m.rom":{},
},
},
"doc":{
dir:1,
items:{
"BK0011M_Palettes.png":{},
"BK0011M_Circuits.djvu":{},
},
},
},
},
"PK8000_Sura":{
dir:1,
items:{
"english.txt":{
name:"PK8000 Sura",
params:"Year\x091987\x0ARAM\x0964 kB\x0AROM\x0916 kB\x0ACPU\x09i8080 2.5 MHz\x0AGraph\x09256x192x15\x0AText\x0940x24x15, 32x24x15\x0AIn ROM\x09Basic",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"zxscrv1.3":{
dir:1,
items:{
"zxscr.bin":{},
"source":{
dir:1,
items:{
"zxscr.asm":{},
"zxscr.bat":{},
},
},
"readme.txt":{},
"scr2cas.bat":{},
},
},
"rmplinker":{
dir:1,
items:{
"readme.txt":{},
"vesta ay.cfg":{},
"rmpplayer.bin":{},
"rmplinker.exe":{},
"examples":{
dir:1,
items:{
"example1.log":{},
"example2.log":{},
"e-type.rmp":{},
"ladanc.cas":{},
"e-type.cas":{},
"example1.bat":{},
"example2.bat":{},
"l@dance1.rmp":{},
},
},
},
},
"castools":{
dir:1,
items:{
"msxcastoolsui.exe":{},
"copying":{},
"msxcastoolsui.txt":{},
"wav2cas.exe":{},
"cas2wav.exe":{},
"casdir.exe":{},
"readme":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"ПК8000 Сура",
params:"Год\x091987\x0AОЗУ\x0964 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AГрафика\x09256x192x15\x0AТекст\x0940x24x15, 32x24x15\x0AВ ПЗУ\x09Бейсик",
body:"Компьютер \x22ПК8000 Сура\x22 разработан в Пензенском заводе вычислительных \x0Aэлектронных машин. Затем компьютер выпускался различными заводами под именами:\x0AПК8000 Веста, ПК8000 Хобби. Значительных отличий между этими компьютерами нет. \x0A\x0AВ советских школах на уроках информатики можно было встретить много разных\x0Aкомпьютеров. На этих компьютерах детей учили программировать на языке Бейсик.\x0AОдним из таких компьютеров был японский компьютер Yamaha YIS-503 стандарта MSX. \x0A\x0AКомпьютер ПК8000 создавался похожим на MSX. В ПК8000 используется совместимая \x0Aс MSX версия языка программирования Бейсик. Видеоадаптер компьютера ПК8000 имеет\x0Aтакое же разрешение, такое же количество цветов и организацию видеопамяти. \x0AБлагодаря этому ПК8000 в школе может заменить MSX. Можно использовать те же\x0Aучебники, бейсик программы и учебный план.\x0A\x0AПри этом, компьютер ПК8000 значительно проще MSX. Видеоадаптер ПК8000 не\x0Aвыводит спрайты. Процессор в ПК8000 слабее, чем в MSX. Звук проще. Из-за этого \x0Aигры и программы для MSX на ПК8000 не запускались. Требовалась адаптация \x0Aпрограмм.\x0A\x0AКомпьютер использовался не только в школах, но и дома. Было адаптировано \x0Aмножество игр и программ с компьютеров MSX на ПК8000.\x0A",},
"software":{
dir:1,
items:{
"sniper.cas":{},
"emu12_bas_space.cas":{},
"emu13_bas_ball2.cas":{},
"emu12_hex_lb2.cas":{},
"putup.cas":{},
"emu12_hex_lb3.cas":{},
"push.cas":{},
"emu03_bas_tawer.cas":{},
"binary.cas":{},
"emu05_bas_bio.cas":{},
"emu05_bas_sudba.cas":{},
"emu13_bas_kill1.cas":{},
"chess.cas":{},
"emu08_bas_prezid.cas":{},
"bas_slalom.cas":{},
"emu14_bas_testzh.cas":{},
"space.cas":{},
"pacman.cas":{},
"readme1.txt":{},
"colbal.cas":{},
"cball.cas":{},
"assm.cas":{},
"emu09_bas_bankir.cas":{},
"stalk.cas":{},
"bomb.txt":{},
"emu04_hex_game.cas":{},
"alibab.cas":{},
"bould.cas":{},
"emu14_bas_poker.cas":{},
"key.cas":{},
"stop.cas":{},
"vesta ay.cfg":{},
"fire.cas":{},
"emu03_hex_warp.cas":{},
"eric.cas":{},
"ninjya.cas":{},
"mars.cas":{},
"emu03_bas_udavik.cas":{},
"utilit.cas":{},
"gomoku.cas":{},
"ball3.cas":{},
"emu06_bas_gg.cas":{},
"sucobr.cas":{},
"emu05_bas_temper.cas":{},
"emu07_bas_urok2.cas":{},
"driller.txt":{},
"color.cas":{},
"emu06_hex_assm.cas":{},
"cball.txt":{},
"visnia.cas":{},
"pyram.cas":{},
"emu12_bas_field.cas":{},
"instr.cas":{},
"flyer.cas":{},
"emu14_bas_bomber.cas":{},
"emu14_hex_lab.cas":{},
"emu04_bas_patnas.cas":{},
"galaxy.cas":{},
"tennis.cas":{},
"lifter.cas":{},
"squash.cas":{},
"emu03_bas_birzha.cas":{},
"emu06_bas_gred.cas":{},
"emu06_hex_play.cas":{},
"emu12_hex_lb1.cas":{},
"emu09_bas_ball.cas":{},
"emu06_bas_pencil.cas":{},
"driller.cas":{},
"emu06_hex_desa.cas":{},
"bomb.cas":{},
"enu08_bas_lamba_xobbi.cas":{},
"emu05_bas_kalend.cas":{},
"ice.cas":{},
"pilot.cas":{},
"check.cas":{},
"colbal.txt":{},
"r_e_a_d__m_e.txt":{},
"emu09_bas_klad2.cas":{},
"copy09.cas":{},
"emu08_bas_kazino.cas":{},
"emu06_hex_ren.cas":{},
"jetset.cas":{},
"emu13_hex_flybal.cas":{},
"emu07_bas_urok1.cas":{},
"emu07_bas_abvgd.cas":{},
"rk86.cas":{},
"ren2.cas":{},
"emu13_bas_tetrub.cas":{},
"emu06_hex_edit.cas":{},
"soccer.cas":{},
"emu09_bas_rally.cas":{},
"digger.cas":{},
"emu07_bas_urok3.cas":{},
"emu08_hex_scb.cas":{},
"emu14_hex_crux.cas":{},
"hex_mum.cas":{},
"jetset.txt":{},
"emu04_bas_polet.cas":{},
"text.cas":{},
},
},
"doc":{
dir:1,
items:{
"PK8000_Hobby_Circuits.djvu":{},
"PK8000_Vesta_1.djvu":{},
"PK8000_Vesta_3.djvu":{},
"PK8000_Hobby_3.djvu":{},
"PK8000_Sura_4.djvu":{},
"PK8000_Vesta_2.djvu":{},
"PK8000_Sura_2.djvu":{},
"PK8000_Hobby_1.djvu":{},
"PK8000_Sura_1.djvu":{},
"PK8000_Hobby_2.djvu":{},
"PK8000_Sura_3.djvu":{},
},
},
},
},
"Profi_3_2":{
dir:1,
items:{
"english.txt":{
name:"Profi 3.2",
params:"Year\x091991\x0ARAM\x09512 - 1024 kB\x0AROM\x0964 kB\x0ACPU\x09Z80 7 MГц\x0AGraph\x09256x192x15, 512x240x2\x0AGroup\x09ZX Spectrum 128",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"11.jpg":{},
"3.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
},
},
"extensions":{
dir:1,
items:{
"at_keyboard":{
dir:1,
items:{
"fuses.gif":{},
"kbd_pr32.jpg":{},
"kbd_pr35.hex":{},
"fuses.txt":{},
"kbd_pr35.txt":{},
},
},
"using_simm30_on_profi_4_01":{
dir:1,
items:{
"readme.doc":{},
"profi_simm_4_01.pdf":{},
},
},
"using_simm30_on_profi_3_2":{
dir:1,
items:{
"profi_simm_3_2.pdf":{},
"readme.doc":{},
},
},
"color_cpm":{
dir:1,
items:{
"circuit.jpg":{},
},
},
"xt_keyboard":{
dir:1,
items:{
"circuit.txt":{},
"profi_xt.bin":{},
},
},
"covox":{
dir:1,
items:{
"circuit.jpg":{},
"pcb.jpg":{},
},
},
"eeprom_programmer":{
dir:1,
items:{
"pgm-1.jpg":{},
"circuit.txt":{},
"pgm-2.jpg":{},
},
},
"zx_bus":{
dir:1,
items:{
"circuit.pdf":{},
"profi_zx-bus.sch":{},
"pcb_top.tif":{},
"readme.doc":{},
"profi_zx-bus.pcb":{},
"pcb_top.pdf":{},
"circuit.tif":{},
"pcb_bottom.tif":{},
"pcb_bottom.pdf":{},
},
},
},
},
"russian.txt":{
name:"Профи 3.2 (Profi 3.2)",
params:"Год\x091991\x0AОЗУ\x09512 - 1024 кБ\x0AПЗУ\x0964 кБ\x0AПроц\x09Z80 7 MГц\x0AГрафика\x09256x192x15, 512x240x2\x0AГруппа\x09ZX Spectrum 128",
body:"Профи 3.2 это суперспектрум. Т.е. компьютер совместимый с ZX Spectrum 128, но\x0Aпри этом значительно мощнее его. Процессор компьютера Профи может работать на\x0Aдвух тактовых частотах: 3.5 МГц и 7 МГц. Тактовые частоты переключаются кнопкой\x0Aза задней стенке компьютера. На плате компьютера установлено 512 Кб оперативной\x0Aпамяти. При желании память можно увеличить до 1024 Кб, дополнительные микросхемы\x0Aставятся вторым этажом. Профи умеет отключать ПЗУ из адресного пространства, что\x0Aпозволяет использовать операционную систему CP/M. Профи поддерживает\x0Aдополнительный видеорежим 512x240x2, который позволяет комфортно работать с\x0Aпрограммами для CP/M.\x0A\x0AЕще из приятного. У Профи качественно разработан видеовыход, четкое и стабильное\x0Aизображение. У Профи контроллер дисковода с цифровой ФАПЧ, что при использовании\x0Aплохих дисководов и дискет значительно повышает надежность чтения. Параллельный\x0Aпорт на микросхеме КР580ВВ55А позволяет подключить много всякого интересного.\x0AПрисутствуют порты и Sinclair Kempston джойстиков. Присутствует порт FF. Профи\x0Aбыл разработан так, что бы вставать в корпус компьютера БК0010.01, поэтому с\x0Aкорпусами проблем нет.\x0A\x0AИз мелких неудобств только одно. Профи не полностью совместим с Pentagon 128К.\x0A\x0AЭтот компьютер сейчас в процессе восстановления. Изначально это были платы без\x0Aполовины микросхем, половины резисторов, без множества дорожек, конденсаторов не\x0Aбыло вообще, местами текстолит расслоился. Клавиатура была ужасная. На данный\x0Aмомент компьютер работает в режиме ZX Spectrum 128 (с ПЗУ ZX Spectrum 128). Но\x0ABDI не работает, я не могу выйти в TRDOS и на плате не хватает двух ПЗУ РТ4,\x0Aкоторые мне пока нечем прошить. ПЗУ Профи стабильно запускается только при\x0Aснятой верхней плате. Возможно дело в том, что я прошиваю ПЗУ от более новой\x0Aверсии компьютера. Тесты в ПЗУ не могут проверить второй банк ОЗУ (>=256K). Если\x0Aзапускать ПЗУ Профи с установленной верхней платой, то компьютер ведет себя\x0Aнепредсказуемо. Последнее фото это то, что случилось после включения.\x0A\x0A",},
"firmware":{
dir:1,
items:{
"profi.rom":{},
"profi_v20.rom":{},
"profi_v450.ROM":{},
"profi_v10.rom":{},
"profi_v02.rom":{},
"profi_v20ps.rom":{},
"profi_2001vrcp.rom":{},
"rf5":{
dir:1,
items:{
"readme.txt":{},
"prof_rf5.txt":{},
"prof_rf5.bin":{},
},
},
},
},
"doc":{
dir:1,
items:{
"profi_4_01.djvu":{},
"profi_3_2.djvu":{},
"profi3-1-album.txt":{},
"profi3-1-album.pdf":{},
"profi_3_2_ver_2.djvu":{},
},
},
},
},
"_TV_Doctor":{
dir:1,
items:{
"tvdoctor.dsn":{},
"tvdoctor.sdf":{},
"tvdoctor.png":{},
},
},
"Lvov_PK-01":{
dir:1,
items:{
"english.txt":{
name:"Lvov PK-01",
params:"Year\x091986\x0ARAM\x0964 kB\x0AROM\x0916 kB\x0ACPU\x09К580ВМ80А 2.2 MHz\x0AGraph\x09256x256x4, 8 colors palette\x0AIn ROM\x09Basic",
body:"TODO\x0A",},
"my_games":{
dir:1,
items:{
"lines":{
dir:1,
items:{
"source":{
dir:1,
items:{
"c8080":{
dir:1,
items:{
"TASM.EXE":{},
"c8080.exe":{},
"Include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"op_cmp16":{},
"strchr.c":{},
"Spec":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"setcolor.c":{},
"clrscr.c":{},
"fs_read.c":{},
"fs.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"bios.h":{},
"fs_seek.c":{},
"setcolorautodisable.c":{},
"fs_swap.c":{},
"key.h":{},
"fs_exec.c":{},
"putch.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
"color.h":{},
},
},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"Lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_mul":{},
"stdlib.h":{},
"n":{
dir:1,
items:{
"div32.c":{},
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"op_ig":{},
"Apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"getmemtop.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
"sound.h":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"op_shr":{},
},
},
"TASM85.TAB":{},
},
},
"lvov_pc01-game_lines":{
dir:1,
items:{
"TASM.EXE":{},
"lines.h":{},
"lines.c":{},
"stdlib8080.inc":{},
"lvov_interface.c":{},
"balls2.c":{},
"lines.lvt":{},
"errors.txt":{},
"king.c":{},
"playerWin.c":{},
"player2.c":{},
"playerWin2.c":{},
"ImagesPalette2":{
dir:1,
items:{
"gameScreen.bmp":{},
"player.bmp":{},
"playerWin.bmp":{},
"-compile.bat":{},
"king.bmp":{},
"kingLose.bmp":{},
"balls.bmp":{},
"lvovImage.exe":{},
"intro.bmp":{},
},
},
"player.c":{},
"lvov_sprites.h":{},
"lvov_music.c":{},
"gameScreen2.c":{},
"screenshot1.png":{},
"king2.c":{},
"lvov_drawsprite.asm":{},
"interface.h":{},
"intro.c":{},
"-compile.bat":{},
"gameScreen.c":{},
"screenshot2.png":{},
"lines.lst":{},
"ImagesPalette1":{
dir:1,
items:{
"gamescreen.bmp":{},
"player.bmp":{},
"-compile.bat":{},
"playerwin.bmp":{},
"king.bmp":{},
"kinglose.bmp":{},
"balls.bmp":{},
"lvovImage.exe":{},
},
},
"lvov_music.h":{},
"balls.c":{},
"kingLose.c":{},
"kingLose2.c":{},
"LINES.asm":{},
"LvovImage":{
dir:1,
items:{
"StdAfx.h":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"pads.sln":{},
"-clean.bat":{},
"pads.vcxproj.filters":{},
"Screen.txt":{},
"pads.vcxproj":{},
"pads.cpp":{},
"pads.vcproj":{},
},
},
"TASM85.TAB":{},
},
},
},
},
"lines.lvt":{},
"lines2.png":{},
"lines1.png":{},
},
},
},
},
"utils":{
dir:1,
items:{
"lvt2wav":{
dir:1,
items:{
"sources":{
dir:1,
items:{
"lv_outf.c":{},
"c.bat":{},
},
},
"lv_outf.exe":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Львов ПК-01",
params:"Год\x091986\x0AОЗУ\x0964 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09К580ВМ80А 2.2 МГц\x0AГрафика\x09256x256x4, палитра 8 цв\x0AВ ПЗУ\x09Бейсик",
body:"Львов ПК-01 это советский домашний компьютер. Его отличительная черта, это\x0Aграфика 256x256 4 цвета из палитры в 8 цветов. После включения компьютера на\x0Aэкране медленно рисуется название \x22Львов ПК-01\x22, а затем запускается Бейсик.\x0AПричём, Бейсик копируется из ПЗУ в ОЗУ и выполняется из ОЗУ. Клавиатура этого\x0Aкомпьютера так себе. Для Львова ПК-01 выпущено много игр и программ которые\x0Aможно скачать с сайта http://pc01.lviv.ua.\x0A\x0AПри разработке компьютера инженеры что то не учли и часть изображения 256x256\x0Aоказалась за границами экрана. Гарантированно видимая область экрана имеет\x0Aразмер 200x225 пикселей, а остальное как повезет.\x0A\x0AВидеоадаптер у этого компьютера неравномерно тормозит процессор. Это иногда\x0Aмешает, нельзя написать свою функцию загрузки с магнитофона, нельзя написать\x0Aфункцию вывода звука.\x0A\x0AИз 64 Кб оперативной памяти 16 Кб занимает видеопамять, а программам остается\x0A48 Кб памяти для работы. И тут у компьютера есть интересная особенность - две\x0Aкарты адресного пространства. В одной карте нет видеопамяти, а в другой\x0Aподключена только треть ОЗУ и часть адресного пространства вообще не подключена\x0Aникуда.\x0A\x0A               порт С2h = 2  порт С2h = 0\x0A0000h - 3FFFh  ОЗУ 0         Не подключено\x0A4000h - 7FFFh  ОЗУ 1         ОЗУ 3, Видео\x0A8000h - BFFFh  ОЗУ 2         ОЗУ 2\x0AC000h - FFFFh  ПЗУ           ПЗУ\x0A\x0AКомпьютер разработан в 1986 году в Львовском политехническом институте доцентом\x0AВладимиром Яковлевичем Пуйдой, выпускался Львовским производственным\x0Aобъединением им. В. И. Ленина, продавался по цене 750 руб. Позже была выпущена\x0Aмодель Львов ПК-02. Модель Львов ПК-03 существовала только в виде прототипа.\x0A",},
"powerup_screen.png":{},
"software":{
dir:1,
items:{
"games":{
dir:1,
items:{
"galaxy.lvt":{},
"krot.lvt":{},
"wanderer.gif":{},
"tower.gif":{},
"circus.lv0":{},
"flight.lvt":{},
"s_ban.lv1":{},
"putup.2.png":{},
"banan.lv0":{},
"jump-2.gif":{},
"b_dash.lv0":{},
"banan.gif":{},
"zoo.2.png":{},
"klad.lvt":{},
"s_labir.lv0":{},
"laguna.lv0":{},
"corn.gif":{},
"kosmos.gif":{},
"arktic.lv0":{},
"wanderer.lv2":{},
"spaces.gif":{},
"ball.gif":{},
"twinz.2.png":{},
"frogger.gif":{},
"columns.lvt":{},
"wanderer.lv0":{},
"tetris.lvt":{},
"s_labir.lvt":{},
"push.2.png":{},
"lift.1.png":{},
"columns.gif":{},
"wanderer.2.png":{},
"b_dash.lvt":{},
"krot.lv0":{},
"jump-2.lvt":{},
"klad.gif":{},
"squash.lvt":{},
"galaxy.2.png":{},
"slalom.lv0":{},
"rockman.1.png":{},
"storm.gif":{},
"ricoshet.lvt":{},
"seymour.gif":{},
"kosmos.lvt":{},
"b_dash.gif":{},
"rockman.lvt":{},
"aerocobr.gif":{},
"rockman.2.png":{},
"heart.lvt":{},
"twinz.1.png":{},
"starf.gif":{},
"squash.gif":{},
"starf.lvt":{},
"seymour.lvt":{},
"circus.lvt":{},
"mrak.lvt":{},
"flight.gif":{},
"kobra.lvt":{},
"bee.lvt":{},
"pacman.gif":{},
"pacman.lvt":{},
"twinz.lvt":{},
"king_v.gif":{},
"saski.lvt":{},
"krot.gif":{},
"spaces.lv0":{},
"korona.lvt":{},
"wanderer.lv1":{},
"ball.lvt":{},
"laguna.lvt":{},
"p_pong.gif":{},
"golkiper.lv0":{},
"circus.gif":{},
"putup.lvt":{},
"indian.lvt":{},
"slalom.gif":{},
"arktic.gif":{},
"criter.gif":{},
"s_ban.lvt":{},
"mission.gif":{},
"heart.gif":{},
"s_labir.gif":{},
"slalom.lvt":{},
"cheese.lvt":{},
"chess.gif":{},
"wanderer.1.png":{},
"barmen.lv0":{},
"kobra.1.png":{},
"korona.lv0":{},
"cheese.gif":{},
"laguna.gif":{},
"bee.gif":{},
"barmen.lvt":{},
"aerocobr.lvt":{},
"lift.sav":{},
"barmen.gif":{},
"tower.lvt":{},
"ducks.lvt":{},
"flight.lv0":{},
"circus.lv2":{},
"mission.lvt":{},
"zoo.1.png":{},
"storm.lvt":{},
"wanderer.sav":{},
"columns.lv0":{},
"ricoshet.gif":{},
"tower.1.png":{},
"digger.gif":{},
"putup.1.png":{},
"digger.2.png":{},
"pacman.2.png":{},
"wanderer.lvt":{},
"zoo.lvt":{},
"s_ban.gif":{},
"vagon.lvt":{},
"arktic.lvt":{},
"criter.lvt":{},
"p_pong.lvt":{},
"indian.1.png":{},
"chess.lvt":{},
"galaxy.1.png":{},
"push.1.png":{},
"indian.2.png":{},
"barbar.gif":{},
"s_ban.lv0":{},
"banan.lvt":{},
"king_v.lvt":{},
"corn.lvt":{},
"kobra.2.png":{},
"king_v.lv0":{},
"d_john.gif":{},
"chess.1.png":{},
"golkiper.lvt":{},
"saski.gif":{},
"cave_d.lv0":{},
"mrak.gif":{},
"p_pong.lv0":{},
"spaces.lvt":{},
"pacman.1.png":{},
"vagon.gif":{},
"korona.gif":{},
"tetris.gif":{},
"tower.2.png":{},
"digger.1.png":{},
"frogger.lvt":{},
"cave_d.lvt":{},
"d_john.lvt":{},
"tower.lv0":{},
"golkiper.gif":{},
"chess.2.png":{},
"zoo.gif":{},
"push.lvt":{},
"ricoshet.lv0":{},
"cave_d.gif":{},
"digger.lvt":{},
"barbar.lvt":{},
"ducks.gif":{},
"lift.2.png":{},
"ball.lv0":{},
"ducks.lv0":{},
"circus.lv1":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"lvov3.rom":{},
"lvov2.rom":{},
"lvov1.rom":{},
},
},
"doc":{
dir:1,
items:{
"Lvov_PK-01_Basic.pdf":{},
"Lvov_PK-01_PCB.jpg":{},
"Lvov_PK-01_Circuit_1.png":{},
"Lvov_PK-01_Circuit_2.jpg":{},
"Lvov_PK-01_Programmer_manual.pdf":{},
"Lvov_PK-01_User_manual.pdf":{},
},
},
},
},
"BK0010":{
dir:1,
items:{
"english.txt":{
name:"BK0010",
params:"Year\x091985\x0ARAM\x0932 kB\x0AROM\x0924 kB\x0ACPU\x09K1801VM1 3 MHz\x0AGraph\x09512x256x2, 256x256x4\x0AIn ROM\x09Focal\x0AGroup\x09BK0010",
body:"BK0010 is a Soviet school and home computer. Developed by NPO \x22Scientific\x0ACenter”, now it is Sitronics. This computer uses Soviet 16 bit processor \x0AKR1801VM1 of their own design. The processor has no foreign analogues, but using\x0Athe PDP11 command set, which was developed by DEC corrporation. But this does\x0Anot mean that the processor is not Soviet. I'll give you an analogy. AMD\x0Areleases processors with an instruction set developed by Intel.\x0A\x0AThe word PDP11 means not only the processor instruction system, but also\x0Acomputer architecture that allows you to run operating systems and programs\x0Afor PDP11.\x0A\x0ABK0010 could not run operating systems and programs from PDP11. Few memory, but\x0Athe memory can be increased. The unsolvable problem was the video memory located\x0Ain the middle of the address space (at addresses 4000h-7FFFh). The RTOS\x0Aoperating system (standard for the PDP11) and its programs required contiguous\x0Aaddress space from the beginning of memory. The error is very common. \x0AZX Spectrum computer had the same address space problem, no allowing you to run\x0Athe CP/M operating system.\x0A\x0AThe keyboard of the BK0010 is not comfortable, but it is cheap and maintainable.\x0AIn it the most common tact buttons (PKN-150) were used, which even now buy is\x0Anot a problem. Their only drawback is a very small move. Over button places a\x0Afull-size key. And on the keys lies printout. They certainly could put names on\x0Athe keys, but the inscriptions on the keys erased by fingers cannot be restored\x0Aat home. There are no problems at all to make a new printout and laminate it.\x0A\x0AOn the right, under the cover, there is a socket for ROM chips. The thing is not\x0Aneeded and even dangerous, there are enough idiots in schools. The switch under\x0Athe cover is a reset. Not a button, but a switch with two positions! To reboot\x0Acomputer, you need to remove the cover and pull the tiny switch left and right.\x0AI can't understand it. It's easier to turn off and turn on the power supply,\x0Awhich was external.\x0A\x0AThe computer had 32 kilobytes of RAM, of which half was used under video memory.\x0APrograms had only 16 kilobytes left. You can work, but still little memory. The\x0Avideo adapter supported two modes 512x256 2 colors, 256x256 4 colors. There is\x0Ahardware vertical scrolling.\x0A\x0AIn order to reduce the cost, school computers did not solder parts for the\x0A256x256 mode 4 colors. There is a place on the board, but there are no details.\x0A\x0A4 colors is not so bad if you could choose any 4 colors from the palette.\x0ABut the palette was not added. The computer had 4 fixed colors: black,\x0Ared, blue, green. But this was all over the place. IBM PC with CGA adapter\x0Aalso had two terrible fixed palettes.\x0A\x0AIn a normal computer, the program itself switches the video adapter mode. If the\x0Aprogram needs 512x256, then it will enable it. If 256x256, then enable it.\x0ABK0010 has two connectors on the back, one for 512x256 resolution, the second\x0Aone is for 256x256. If the program is written for 512x256 and TV connected to\x0A256x256 socket, you'll see colored porridge. If the program is written for\x0A256x256 4 colors, and the connector will be in 512, then the color image will\x0Abe represented by shading. In this case, colors 1 and 2 will be similar.\x0A\x0AThe situation is complicated by the fact that the wires had to be soldered by\x0Ayourself (from the computer there should be two connectors). Only for this it\x0Awas necessary to be able to solder, therefore most of people worked like that.\x0ASee screenshot.\x0A\x0ABK0010 uses a hardware keyboard controller. The program immediately receives\x0Acode of the pressed key. Only now BK0010 cannot process several simultaneously\x0Apressed keys, this problem is hardware and not solvable. And no\x0Aauto-repeat when a key is pressed for a long time, this is a software problem.\x0A\x0AA lot of games for BK were released and ported. And this despite the fact that\x0Afor transfer games had to completely rewrite the entire code.\x0A\x0AIn schools, computers were networked, where as a central computer DVK computer\x0Awas used. DVK contains two six-port network boards (it is more correct to call\x0Athe \x22controller of telegraph channels\x22). And from each BK was connected a wire\x0Ato DVK.\x0A\x0A*** Focal ***\x0A\x0AThe ROM of the BK0010 computer contains the Focal programming language. After\x0Aturning on the computer, you could start programming on the Focal. Although all\x0Acountry taught BASIC.\x0A\x0AFocal was the standard language for PDP computers. It was very simple and\x0Asmall, which allowed to work on the first computers. This language is deciphered\x0Aas FORmula CALculator, which actually speaks of its opportunities. From a\x0Aprogrammer's point of view, Focal is very similar to BASIC, but there no string\x0Avariables and graphical functions. There are only 26 teams in the BK Focal and\x0A20 functions. Let me briefly talk about it. If not me, then you won't know\x0Anever:\x0A\x0AEach line of the Focal program has a fractional number, for example \x221.10\x22,\x0A\x221.20\x22, \x225.15\x22. If you enter 1.1, it will mean 1.10.\x0A\x0ACommands can be abbreviated to a single letter. All Focal commands beginning\x0Afrom different letters. And the simplest Focal program looks like this:\x0A\x0A// Output the text \x22Enter a number \x22 and enter the number from the keyboard\x0A// into the variable X\x0A1.10 ASK \x22Enter number\x22, X\x0A\x0A// Evaluate the expression and write the result to Y\x0A1.20 SET Y = X * 2 - 6\x0A\x0A// Calculate the value of the expression Y-10, and if it is less than zero,\x0A// then go to line 1.10. If equal to zero, then to line 1.80. If more\x0A// zero, then on line 1.40\x0A1.30 IF(Y-10) 1.10, 1.80, 1.40\x0A\x0A// Print the text \x22Result\x22 and the value of the variable Y\x0A1.40 TYPE \x22Result\x22, Y\x0A\x0A// Print this program\x0AWRITE\x0A\x0A// Run this program\x0AGO\x0A\x0AThat's actually all. Several games were written on the focal point, some even\x0Ahave become cult. For example \x22Kingdom of Euphoria\x22.\x0A",},
"utils":{
dir:1,
items:{
"bin2wav":{
dir:1,
items:{
"bin2wav.html":{},
},
},
},
},
"russian.programming.html":{},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"БК0010",
params:"Год\x091985\x0AОЗУ\x0932 кБ\x0AПЗУ\x0924 кБ\x0AПроц\x09К1801ВМ1 3 MГц\x0AГрафика\x09512x256x2, 256x256x4\x0AВ ПЗУ\x09Фокал\x0AГруппа\x09БК0010",
body:"БК0010 это советский школьный и домашний компьютер. Разработан НПО «Научный\x0AЦентр», ныне это Ситроникс. В этом компьютере используется советский 16 битный\x0Aпроцессор КР1801ВМ1 их же разработки. Процессор не имеющий зарубежных аналогов,\x0Aно использующий систему команд PDP11, которая была разработана американской\x0Aфирмой DEC. Но это не значит, что процессор не советский. Приведу аналогию. \x0AФирма AMD выпускает процессоры с системой команд разработанной Intel.\x0A\x0AПод словом PDP11 скрывается не только система команд процессора, но и\x0Aархитектура компьютера позволяющая запускать операционные системы и программы\x0Aдля PDP11.\x0A\x0AДак вот БК0010 запускать операционные системы и программы от PDP11 не мог. Мало\x0Aпамяти, но память можно нарастить. Нерешаемой проблемой была видеопамять\x0Aрасположенная по середине адресного пространства (по адресам 4000h-7FFFh).\x0AОперационная система RTOS (стандартная для PDP11) и её программы требовали\x0Aнепрерывного адресного пространства от начала памяти. Ошибка очень частая, на\x0Aкомпьютере ZX Spectrum была та же проблема с адресным пространством, не\x0Aпозволяющая запускать операционную систему CP/M.\x0A\x0AКлавиатура у БК0010 не удобная, но зато дешевая и ремонторпригодная. В ней\x0Aприменялись самые распространенные тактовые кнопки (ПКН-150), которые и сейчас\x0Aкупить не проблема. Их единственный минус это очень маленький ход. Над этой\x0Aкнопкой находится нормальная, полноразмерная клавиша. А на клавишах лежит\x0Aраспечатка с названиями. Они конечно могли нанести названия на клавиши, но\x0Aстертые пальцами надписи на клавишах в домашних условиях не восстановишь.\x0AА изготовить новую распечатку (и ламинировать) сейчас вообще проблем не\x0Aсоставляет.\x0A\x0AСправа под крышкой спрятана панелька для микросхем ПЗУ. Штука не нужная и даже\x0Aопасная, в школах хватает идиотов. Под крышкой так же спрятан переключатель\x0Aсброс. Не кнопка, а переключатель с двумя положениями! Что бы перезагрузить\x0Aкомпьютер, надо снять крышку и дернуть вправо-влево малюсенький переключатель.\x0AЯ это не могу понять. Проще выключить и включить блок питания, который кстати\x0Aбыл внешним.\x0A\x0AВ компьютере было 32 Килобайта ОЗУ из которых половина использовалась под\x0Aвидеопамять. То есть программам оставалось лишь 16 Килобайт. Работать можно, но\x0Aвсе таки памяти мало. Видеоадаптер поддерживал два режима 512x256 2 цвета,\x0A256x256 4 цвета. Есть аппаратная вертикаольная прокрутка.\x0A\x0AВ школьных компьютерах ради удешевления не впаивали детали для режима 256x256\x0A4 цвета. Место на плате есть, а деталей нет.\x0A\x0A4 цвета это не так плохо, если бы можно было выбирать любые 4 цвета из палитры.\x0AНо палитру не добавили. У компьютера было 4 фиксированных цвета: черный,\x0Aкрасный, синий, зеленый. Но такое было сплошь и рядом. IBM PC с CGA адаптером\x0Aтоже имел две ужасные фиксированные палитры.\x0A\x0AВ нормальном компьютере программа сама переключает режим видеоадаптера. Если\x0Aпрограмме нужен 512x256, то она включит его. Если 256x256, то включит его.\x0AБК0010 же имеет два разъема на задней стенке, один для разрешения 512x256,\x0Aвторой для 256x256. И если программа написана для 512x256, а разъем будет\x0Aвключен в 256x256, то вы увидите цветную кашу. Если же программа написана для\x0A256x256 4 цвета, а разъем будет включен в 512, то цветное изображение будет\x0Aпредставлено штриховкой. При этом цвета 1 и 2 будут неразличимы.\x0A\x0AСитуацию усложняет то, что провода надо было паять самому (со стороны компьютера\x0Aдолжно быть два разъема). Только для этого надо было уметь паять, поэтому\x0Aбольшинство забивало и работало так. Смотрите скриншот справа.\x0A\x0AВ БК0010 используется аппаратный контроллер клавиатуры. Программа сразу получает\x0Aкод нажатой клавиши. Только вот БК0010 не может обрабатывать несколько\x0Aодновременно нажатых клавиш, проблема эта аппаратная и не решаемая. И нет\x0Aавтоповтора при долгом нажатии клавиши, проблема эта программная.\x0A\x0AИгр для БК было выпущено и перенесено много. И это при том, что для переноса\x0Aигры приходилось весь код полностью переписывать.\x0A\x0AВ школах компьютеры объединялись в сеть, где в качестве центрального компьютера\x0Aиспользовался компьютер ДВК. В ДВК устанавливались две шестипортовые сетевые\x0Aплаты (правильнее называть \x22контроллер телеграфных каналов\x22). И от каждой\x0AБК-шки к ДВК шел провод.\x0A\x0A*** Фокал ***\x0A\x0AПЗУ компьютера БК0010 содержало язык программирования Фокал. Т.е. сразу после\x0Aвключения компьютера вы могли приступить к программированию на Фокале. Хотя вся\x0Aстрана учила Бейсик.\x0A\x0AФокал был стандартным языком для PDP компьютеров. Он был очень простым и\x0Aмаленьким, что позволяло ему работать на самых первых компьютерах.\x0AРасшифровывается этот язык как FORmula CALculator, что собственно говорит о его\x0Aвозможностях. С точки зрения программиста Фокал очень похож на Бейсик, но там\x0Aнет строковых переменных, графических функций. В БК-шном Фокале всего 26 команд\x0Aи 20 функций. Давайте я вкратце расскажу о нём. Если не я, то и не узнаете\x0Aникогда:\x0A\x0AКаждая строка программы на Фокале имеет дробный номер, например \x221.10\x22, \x221.20\x22,\x0A\x225.15\x22. Если вы введете 1.1, то это будет обозначать 1.10.\x0A\x0AКоманды можно сокращать до одной буквы, при этом все команды Фокала начинаются\x0Aс разных букв. А простейшая программа на Фокале выглядит так:\x0A\x0A// Вывод текста \x22Введите число \x22 и ввод с клавиатуры числа в переменную X\x0A1.10 ASK \x22Введите число \x22, X \x0A\x0A// Этой командой мы вычислим выражение и запишем результат в Y\x0A1.20 SET Y = X * 2 - 6 \x0A\x0A// Этой командой мы вычислим значение выражения Y-10, и если оно меньше нуля, \x0A// то перейдем на строку 1.10. Если равно нулю, то на строку 1.80. Если больше \x0A// нуля, то на строку 1.40\x0A1.30 IF(Y-10) 1.10, 1.80, 1.40 \x0A\x0A// Вывод текста \x22Результат \x22 и значения переменной Y\x0A1.40 TYPE \x22Результат \x22, Y\x09\x0A\x0A// Вывод программы на экран\x0AWRITE\x0A\x0A// Запуск программы\x0AGO\x0A\x0AВот собственно и всё. На фокале было написано несколько игр, некоторые даже\x0Aстали культовыми. Например \x22Королевство Эйфория\x22.\x0A",},
"bw_screen_mode_and_color_socket.png":{},
"software":{
dir:1,
items:{
"sopwith.bin":{},
"digger_pc.bin":{},
"spy.bin":{},
"jetman.bin":{},
"nepobedimyj":{
dir:1,
items:{
"nepobe.ovl":{},
"nepobedimyj.bin":{},
},
},
"checkers.bin":{},
"away.bin":{},
"columns 2.bin":{},
"home_adventure":{
dir:1,
items:{
"home3.lev":{},
"home.bin":{},
"home1.lev":{},
"home2.dat":{},
"home3.dat":{},
"home2.lev":{},
"home1.dat":{},
},
},
"joe_blade":{
dir:1,
items:{
"joebla.lb4":{},
"joe blade.bin":{},
"joebla.lb1":{},
"joebla.lb3":{},
"joebla.ov2":{},
"joebla.lb5":{},
"joebla.lb2":{},
"joebla.ov1":{},
},
},
"hobbit":{
dir:1,
items:{
"hobbit.ovl":{},
"hobbit.bin":{},
},
},
"boa and apples.bin":{},
"tasm":{
dir:1,
items:{
"tasm.bin":{},
},
},
"piton 2.bin":{},
"tramp.bin":{},
"fantast.bin":{},
"expert":{
dir:1,
items:{
"expert.gms":{},
"expert.bin":{},
},
},
"valley.bin":{},
"p10k.bin":{},
"bkpack":{
dir:1,
items:{
"bkpack17.doc":{},
"bkpack.bin":{},
"bkpack15.doc":{},
},
},
"frogling.bin":{},
"xonix 3.bin":{},
"breaking ball.bin":{},
"man.bin":{},
"pipe":{
dir:1,
items:{
"pipe.bin":{},
"pipe documentation.bin":{},
},
},
"return_of_the_jedi":{
dir:1,
items:{
"return of the jedi.bin":{},
"return.ovl":{},
},
},
"streap_show":{
dir:1,
items:{
"show.ovl":{},
"streap show.bin":{},
},
},
"good.bin":{},
"barbarian":{
dir:1,
items:{
"barb.ov2":{},
"barb.ov3":{},
"barbarian.bin":{},
"barb.ov1":{},
},
},
"mk_dos":{
dir:1,
items:{
"mk317.mac":{},
"help.vxt":{},
"csi.mac":{},
"copdev.mac":{},
"pn.mac":{},
"extr.mac":{},
"msem1.mac":{},
"mformat.mac":{},
"mk316.mac":{},
"fn.mac":{},
"view.mac":{},
"menu.mac":{},
"help.mac":{},
"edit.mac":{},
},
},
"navvy.bin":{},
"soldier":{
dir:1,
items:{
"soldier.gms":{},
"soldi2.dat":{},
"soldi3.dat":{},
"soldier.bin":{},
},
},
"star 2.bin":{},
"johnny":{
dir:1,
items:{
"johnny.bin":{},
"john.ovl":{},
},
},
"mini kegli.bin":{},
"chess 4.bin":{},
"runing":{
dir:1,
items:{
"runing.bin":{},
"runtwo.ovl":{},
"runing editor.bin":{},
"shaht2.ovl":{},
"shaht1.ovl":{},
},
},
"rogers.bin":{},
"patrol.bin":{},
"green.bin":{},
"klad 1.bin":{},
"gorodki.bin":{},
"barmen.bin":{},
"fighter.bin":{},
"chess 2.bin":{},
"faraon.bin":{},
"pipe_dream":{
dir:1,
items:{
"dream.bin":{},
"dream.ovl":{},
},
},
"kings valley.bin":{},
"stone nightmare.bin":{},
"break house 2.bin":{},
"billiard.bin":{},
"rally.bin":{},
"ladder race.bin":{},
"othello.bin":{},
"diversant 2.bin":{},
"loto.bin":{},
"turnir.bin":{},
"tetris 2.bin":{},
"pacman.bin":{},
"break house.bin":{},
"leopold.bin":{},
"reversi.bin":{},
"skyworker.bin":{},
"tarzan.bin":{},
"soldat.bin":{},
"bolder dash 3.bin":{},
"long raid.bin":{},
"zombie.bin":{},
"space war.bin":{},
"rick":{
dir:1,
items:{
"level3.dat":{},
"level2.dat":{},
"level4.dat":{},
"rick.bin":{},
"rick.ovl":{},
"level1.dat":{},
},
},
"poltergeist.bin":{},
"reversi 2.bin":{},
"jungle.bin":{},
"xerox.bin":{},
"miss_pacman":{
dir:1,
items:{
"m_pacman.ovl":{},
"miss pacman.bin":{},
},
},
"ninja.bin":{},
"way.bin":{},
"chess 1.bin":{},
"tetris 3.bin":{},
"super wall.bin":{},
"bomb.bin":{},
"roki lair.bin":{},
"baby.bin":{},
"klad 3.bin":{},
"air_wolf":{
dir:1,
items:{
"airwolf.ovl":{},
"airwolf_doc.bin":{},
"airwolf.bin":{},
},
},
"lode_runner":{
dir:1,
items:{
"lode runner.bin":{},
"lrunner.gms":{},
},
},
"mag.bin":{},
"batiskaf.bin":{},
"shaolin.bin":{},
"race":{
dir:1,
items:{
"race.bin":{},
"race.ovl":{},
},
},
"snake.bin":{},
"assassin":{
dir:1,
items:{
"assassin.bin":{},
"ass2":{},
},
},
"superman":{
dir:1,
items:{
"superman2.bin":{},
"superman.gms":{},
"superman.bin":{},
},
},
"plane.bin":{},
"pango.bin":{},
"diversant.bin":{},
"fort.bin":{},
"heaven.bin":{},
"probe.bin":{},
"horror.bin":{},
"cave rescuer.bin":{},
"lunohod":{
dir:1,
items:{
"lun.ovl":{},
"lunohod.bin":{},
},
},
"shar.bin":{},
"cave man.bin":{},
"piton.bin":{},
"bally.bin":{},
"safary.bin":{},
"horace":{
dir:1,
items:{
"horace.ovl":{},
"horace.bin":{},
},
},
"stalker.bin":{},
"planet.bin":{},
"ferrari":{
dir:1,
items:{
"ferrari.bin":{},
"ferra2.ovl":{},
"ferrari.gms":{},
},
},
"antix.bin":{},
"sokoban.bin":{},
"military marathon r.bin":{},
"pentis.bin":{},
"acrobat 2.bin":{},
"exolon":{
dir:1,
items:{
"exolon.ovl":{},
"exolon.bin":{},
},
},
"aborigenia.bin":{},
"sheriff.bin":{},
"vitamin.bin":{},
"xenon":{
dir:1,
items:{
"xenon.ov2":{},
"xenon.ov1":{},
"xenon.doc":{},
"xenon.bin":{},
},
},
"slalom.bin":{},
"second.bin":{},
"navvy2.bin":{},
"klad 2.bin":{},
"space.bin":{},
"loto2.bin":{},
"nechist.bin":{},
"blockout.bin":{},
"pogonja.bin":{},
"tetro":{
dir:1,
items:{
"tetro.bin":{},
"tetro.top":{},
},
},
"saturn.bin":{},
"space hunting.bin":{},
"courier.bin":{},
"biowar.bin":{},
"skin.bin":{},
"moon_buggy":{
dir:1,
items:{
"moon buggy.bin":{},
"moon.ovl":{},
},
},
"lode runner.bin":{},
"drop zone.bin":{},
"vertoljot.bin":{},
"bolder dash.bin":{},
"land.bin":{},
"hyper_sports":{
dir:1,
items:{
"sports.ovl":{},
"hyper sports.bin":{},
},
},
"cosmic builder.bin":{},
"breach_bowl":{
dir:1,
items:{
"breach.ovl":{},
"breach bowl.bin":{},
},
},
"pereval":{
dir:1,
items:{
"ridge.bin":{},
"ridge.ovl":{},
"pereval.bin":{},
"pereval.gms":{},
},
},
"bolder dash 2.bin":{},
"lode runner 2.bin":{},
"duggey.bin":{},
"ultima zone.bin":{},
"jones":{
dir:1,
items:{
"jones 2.bin":{},
"jones3.ovl":{},
"jones2.bin":{},
"jones1.ovl":{},
"jones 1.bin":{},
"jones 3.bin":{},
"jones3.bin":{},
"jones2.ovl":{},
"jones.bin":{},
"jones1.bin":{},
},
},
"xonix 1.bin":{},
"cave":{
dir:1,
items:{
"cave.gme":{},
"cave documentation.bin":{},
"cave.pic":{},
"cave.bin":{},
},
},
"star.bin":{},
"udav.bin":{},
"chess 3.bin":{},
"r-type":{
dir:1,
items:{
"r-type.bin":{},
"rtype1.lab":{},
"rtype2.lab":{},
},
},
"klad 4.bin":{},
"pentis 2.bin":{},
"flier.bin":{},
"mahjongg.bin":{},
"stronghold":{
dir:1,
items:{
"strong.ovl":{},
"stronghold.bin":{},
},
},
"tramp3.bin":{},
"solomon.bin":{},
"astrodrom":{
dir:1,
items:{
"astrdrom.ovl":{},
"astrodrom.bin":{},
},
},
"kpss":{
dir:1,
items:{
"kpss06.bin":{},
"kpss17_1.bin":{},
"kpss03_2.bin":{},
"kpss15.bin":{},
"kpss02.bin":{},
"kpss12.bin":{},
"kpss07_2.bin":{},
"kpss14_2.bin":{},
"kpss07_1.bin":{},
"kpss10.bin":{},
"kpss14_1.bin":{},
"kpss11.bin":{},
"kpss16.bin":{},
"kpss03_1.bin":{},
"kpss08.bin":{},
"kpss05.bin":{},
"kpss09.bin":{},
"kpss01.bin":{},
"kpss17_2.bin":{},
"kpss04.bin":{},
},
},
"digger.bin":{},
"skin diving.bin":{},
"columns.bin":{},
"comic":{
dir:1,
items:{
"etap01.dat":{},
"etap2b.dat":{},
"etap2a.dat":{},
"comic.bin":{},
},
},
"zoom.bin":{},
"shot.bin":{},
"flying_plate":{
dir:1,
items:{
"flying plate.bin":{},
"plate3":{},
"plate2":{},
"flying plate2.bin":{},
},
},
"room.bin":{},
"bubbler.bin":{},
"apple.bin":{},
"turmir.bin":{},
"karate 2.bin":{},
"karate":{
dir:1,
items:{
"bruce3.ovl":{},
"karate.bin":{},
"bruce1.ovl":{},
"bruce2.ovl":{},
},
},
"circler.bin":{},
"cache.bin":{},
"jokey.bin":{},
"hard_restoration":{
dir:1,
items:{
"hard.bin":{},
"hard.ovl":{},
},
},
"demon_stalker":{
dir:1,
items:{
"demsl2":{},
"demsl1":{},
"demsl.gms":{},
"demon stalker.bin":{},
"demsl3":{},
},
},
"chaser.bin":{},
"xonix 4.bin":{},
"tennis.bin":{},
"tetcolor.bin":{},
"tetris.bin":{},
"popcorn.bin":{},
"pif paf.bin":{},
"xonix 2.bin":{},
"polymino.bin":{},
"military marathon b.bin":{},
"subway.bin":{},
"crack":{
dir:1,
items:{
"crack.ovl":{},
"crack.bin":{},
},
},
"desant":{
dir:1,
items:{
"desan2.ovl":{},
"desan3.ovl":{},
"desan4.ovl":{},
"desan5.ovl":{},
"desant.bin":{},
"desant_doc.bin":{},
"desan1.ovl":{},
},
},
"tramp2.bin":{},
"garden.bin":{},
"virage.bin":{},
"arkanoid.bin":{},
"pilot.bin":{},
"morboj.bin":{},
"super rally.bin":{},
"gomoku.bin":{},
},
},
"doc":{
dir:1,
items:{
"BK0010_Circuit.pdf":{},
"BK0010_KM_unit_circuit.pdf":{},
"BK0010_Repair_at_home.djvu":{},
"BK0010_RAM_extension.djvu":{},
"BK0010_Marsianka_mouse_circuit.jpg":{},
"BK0010_User_manual.pdf":{},
"BK0010_User_manual_2.txt":{},
},
},
},
synced:{
"BK0010/russian.programming.html": "БК0010. Программирование.",
},
},
"_PS2_Mouse_to_COM_port":{
dir:1,
items:{
"circuit":{
dir:1,
items:{
"ps2m.lyt":{},
"ps2m.dsn":{},
"ps2m-clear.lyt":{},
},
},
"photo.jpg":{},
"circuit.png":{},
"software":{
dir:1,
items:{
"main1.c":{},
"main.prj":{},
"main.c":{},
},
},
},
},
"Vector_Start_1200":{
dir:1,
items:{
"english.txt":{
name:"Vector Start",
params:"Year\x091987\x0ARAM\x0964 kB\x0AROM\x098 kB\x0ACPU\x09i8080 2.5 MHz\x0AGraph\x09512x256x4, 256x256x16\x0ASound\x09i8253 x3\x0AGroup\x09Vector 06C",
body:"Krista 2 is a Soviet home computer. This computer is partially compatible with\x0Athe Vector 06C computer. Unlike the Vector 06C computer, the Krista 2 computer\x0Adoes not have a palette, 16 colors are fixed, the processor speed is lower, the\x0Atape recording format is different. Krista has very few own programs.\x0A\x0AThe main reason for incompatibility with the \x22Vector 06C\x22 computer is that the \x0AI/O port address for setting the palette in the \x22Vector 06C\x22 computer is the\x0Asame as the RAM/ROM selection address in the \x22Vector Start\x22 computer. The\x0Aprogram for the computer \x22Vector 06C\x22 launched on the \x22Vector Start\x22 disconnects\x0Aitself from the address space instead of setting the palette.\x0A\x0AHow to load BASIC programs? You need to load BASIC-1200. Type the MLOAD. Without\x0Aquotes and the program name. While loading on the border must run colored\x0Astripes.\x0A\x0ATo start the game \x22Udavchik\x22 you need to make #5000 in the monitor before\x0Aloading BASIC-1200. That sets the BASIC buffer boundary to 5000h, by default it\x0Ais 4500h. Run the \x22Udavchik\x22 from the ROM flashed BASIC-1200 is not succeed.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Вектор Старт",
params:"Год\x091987\x0AОЗУ\x0964 кБ\x0AПЗУ\x098 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AГрафика\x09512x256x4, 256x256x16\x0AЗвук\x09К580ВИ53 x3\x0AГруппа\x09Вектор 06Ц",
body:"\x22Вектор Старт\x22 это советский домашний компьютер. Этот компьютер частично \x0Aсовестим с компьютером \x22Вектор 06Ц\x22. В отличии от компьютера \x22Вектор 06Ц\x22 в \x0Aкомпьютере \x22Вектор Старт\x22 нет палитры, 16 цветов фиксированные, скорость \x0Aпроцессора ниже, формат записи на магнитофонную ленту отличается. Своих программ\x0Aу \x22Вектор Старт\x22 очень мало.\x0A\x0AГлавная причина несовместимости с компьютером \x22Вектор 06Ц\x22 заключается в том,\x0Aчто адрес порта ввода-вывода для установки палитры в компьютере \x22Вектор 06Ц\x22\x0Aтакой же, как адрес выбора ОЗУ/ПЗУ в компютере \x22Вектор Старт\x22. Программа для \x0Aкомпьютера \x22Вектор 06Ц\x22, запущенная на \x22Вектор Старт\x22 вместо установки палитры\x0Aотключает себя от адресного пространства.\x0A\x0AКаа загружать Бейсик программы? Нужно загрузить Бейсик-1200. Ввести команда\x0AMLOAD без кавычек и имени программы. Во время загрузки по бордюру должны бежать\x0Aцветные полосы.\x0A\x0AДля запуска игры \x22Удавчик\x22 нужно перед загрузкой Бейсик-1200 в мониторе сделать\x0A#5000. Т.е. установить границу буфера бейсика 5000h, по умолчанию она 4500h.\x0AЗапустить \x22Удавчик\x22 из Бейсика-1200 записанного в ПЗУ компьютера (Сигнал) не\x0Aудастся.\x0A\x0A",},
"software":{
dir:1,
items:{
"tank.rkb":{},
"basic-1200.rk":{},
"readme.txt":{},
"asm-1200.rk":{},
"frog.rkb":{},
"tetris.rk":{},
"mineswp.rkb":{},
"biorithm.rkb":{},
"snake.rkb":{},
"mars.rkb":{},
},
},
"doc":{
dir:1,
items:{
"Vector_Start_1200_Upgrade_to_Vector_06C.djvu":{},
"Vector_Start_1200_Circuits.djvu":{},
},
},
},
},
"Agat_9":{
dir:1,
items:{
"english.txt":{
name:"Agat 9",
params:"Year\x091988\x0ARAM\x09128 kB\x0AROM\x092 kB\x0ACPU\x096502 1 MHz\x0AText\x0964x32x2, 32x32x8, 40x24x2\x0AGraph\x09512x256x2, 256x256x4, 128x128x16, 280x192x2",
body:"Computer \x22Agat 9\x22 is a Soviet school computer. It is partially compatible with\x0Athe \x22Apple II+\x22 computer. The Agat 9 computer is not a copy of the Apple II+\x0Acomputer. Agat was created as an independent computer, if possible, compatible\x0Awith Apple.\x0A\x0AThe main feature of this computer is that it was supplied to Soviet schools\x0Awith color monitors, disk drives in each computer, foreign games and programs.\x0AIncluded with my Agat was an inkjet printer \x22Electronics MS6312\x22.\x0A\x0AMy computer has 128 kilobytes of RAM installed, which was not bad for 1988.\x0AComputer \x22Agat 9\x22 can display graphics: 512x256 b/w, 280x192 b/w, 256x256 4\x0Acolors, 128x128 16 colors; or text 64x32 b/w, 40x24 b/w, 32x32 8 colors.\x0A\x0AThere are two significantly different generations of Agate. The first generation\x0Ais Agate 4, 7, 8. Computer \x22Agat 4\x22 was released in 1984 in the amount of about\x0A100 pieces. Computers \x22Agat 7\x22 and \x22Agat 8\x22 were released in 1985. For the user,\x0Athere are no significant differences between these models. If you want to dig\x0Adeeper, Wikipedia has a lot to say about Agate. The second generation is the\x0AAgat 9 computer. It was released in 1988. But what about the other numbers?\x0AAgate 1, 2, 3 these names were given to intermediate models that were shown to\x0Amagazines and high authorities. Models 5, 6 remained on paper.\x0A\x0AThe Agat keyboard can be inserted into the front panel of the case. These\x0Astylish but poor quality keyboards were eventually replaced by the boring\x0AMC7004 keyboards. In the MC7004 keyboards, the microcontroller firmware was\x0Achanged for the Agat computer. Agat keyboards are connected to the computer via\x0Aa serial interface. And without the keyboard, Agate does not turn on.\x0A\x0AAgat has a processor compatible with MOS6502. Such a processor was used in the\x0AApple II+ computer, the Commodore 64 computer and the NES game console. Apart\x0Afrom Agat, no other Soviet home or school computer used such a processor. \x0AA redesigned \x22Apple DOS\x22 was used as the operating system. 140 KB drives\x0Acompatible with Apple and/or 840 KB drives compatible only with Agat were used.\x0AIt is impossible to read or write floppy disks for Agatha on IBM PC.\x0A",},
"photo":{
dir:1,
items:{
"103.jpg":{},
"16.jpg":{},
"9.jpg":{},
"21.jpg":{},
"7.jpg":{},
"43.jpg":{},
"17.jpg":{},
"38.jpg":{},
"42.jpg":{},
"11.jpg":{},
"102.jpg":{},
"101.jpg":{},
"30.jpg":{},
"2.jpg":{},
"13.jpg":{},
"28.jpg":{},
"20.jpg":{},
"40.jpg":{},
"19.jpg":{},
"37.jpg":{},
"26.jpg":{},
"34.jpg":{},
"1.jpg":{},
"36.jpg":{},
"29.jpg":{},
"0.jpg":{},
"45.jpg":{},
"23.jpg":{},
"10.jpg":{},
"18.jpg":{},
"35.jpg":{},
"31.jpg":{},
"8.jpg":{},
"32.jpg":{},
"27.jpg":{},
"41.jpg":{},
"39.jpg":{},
"33.jpg":{},
"22.jpg":{},
},
},
"russian.txt":{
name:"Агат 9",
params:"Год\x091988\x0AОЗУ\x09128 кБ\x0AПЗУ\x092 кБ\x0AПроц\x096502 1 MHz\x0AТекст\x0964x32x2, 32x32x8, 40x24x2\x0AГрафика\x09512x256x2, 256x256x4, 128x128x16, 280x192x2",
body:"Компьютер \x22Агат 9\x22 это советский школьный компьютер. Он частично совместим с\x0Aкомпьюертом \x22Apple II+\x22. Да-да, с компьютером фирмы Apple. Компьютер \x22Агат 9\x22\x0Aэто не копия компьютера \x22Apple II+\x22. Агат создавался как самостоятельный\x0Aкомпьютер по возможности совместимый с Apple.\x0A\x0AГлавная особенность этого компьютера в том, что он поставлялся в советские школы\x0Aс цветными мониторами, дисководами в каждом компьютере, зарубежными играми и\x0Aпрограммами. В комплекте с моим Агатом был струйный принтер \x22Электроника\x0AМС6312\x22.\x0A\x0AВ моём компьютере установлено 128 килобайт оперативной памяти, что для 1988 года\x0Aбыло не плохо. Компьютер \x22Агат 9\x22 может показывать графику: 512x256 ч/б, 280x192\x0Aч/б, 256x256 4 цвета, 128x128 16 цветов; либо текст 64x32 ч/б, 40x24 ч/б, 32x32\x0A8 цветов.\x0A\x0AСуществует два значительно отличающихся поколения Агатов. Первое поколение это\x0AАгаты 4, 7, 8. Компьютер \x22Агат 4\x22 был выпущен в 1984 году в количестве примерно\x0A100 шт. Компьютеры \x22Агат 7\x22 и \x22Агат 8\x22 выпущены в 1985 году. Для пользователя\x0Aсущественных отличий между этими моделями нет. Если вы хотите копнуть глубже,\x0Aто в Википедии написано очень много про Агат. Второе поколение это компьютер\x0A\x22Агат 9\x22. Он был выпущен в 1988 году. А как же остальные номера? Агат 1, 2, 3\x0Aэти названия получили промежуточные модели демонстрировавшиеся журналам и\x0Aвысокому начальству. Модели 5, 6 остались на бумаге.\x0A\x0AКлавиатуру Агата можно вставить в переднюю панель корпуса. Эти стильные, но\x0Aнекачественные клавиатуры были со временем заменены на скучные клавиатуры\x0AМС7004. В клавиатурах MC7004 была измена прошивка микроконтроллера под компьютер\x0AАгат. Клавиатуры Агата подключены к компьютеру по последовательному интерфейсу.\x0AА еще без клавиатуры Агат не включается.\x0A\x0AВ Агате установлен процессор совместимый с MOS6502. Такой процессор\x0Aиспользовался в компьютере \x22Apple II+\x22, компьютере \x22Commodore 64\x22 и игровой\x0Aприставке NES (Денди). Помимо Агата больше ни в каком советском домашнем или\x0Aшкольном компьютере такой процессор не использовался. В качестве операционной\x0Aсистемы использовался переработанный \x22Apple DOS\x22. Использовались дисководы на\x0A140 Кб совместимые с Apple и/или на 840 Кб совместимые только с Агатом.\x0AПрочитать или записать дискеты для Агата на IBМ PC невозможно.\x0A",},
"doc":{
dir:1,
items:{
"Agat_9_Floppy_controller_140Kb_FGZ_089_173_Descrption.djvu":{},
"Agat_9_Mainboard_Description.djvu":{},
"Agat_9_Keyboard_Circuit.jpg":{},
"Agat_9_Floppy_controller_840Kb_JaBZ_089_023_Circuit.jpg":{},
"Agat_9_Printer_controller_FG3_089_174_Circuit.jpg":{},
"Agat_9_Mainboard_Circuit.djvu":{},
"Agat_9_Floppy_controller_840Kb_JaBZ_089_023_01_Circuit.jpg":{},
"Agat_9_Floppy_controller_840Kb_JzBZ_089_023_Assembly_drawing.jpg":{},
"Agat_9_Printer_controller_FGZ_089_174_Description.djvu":{},
"Agat_9_Floppy_controller_140Kb_FGZ_089_173_Circuit.jpg":{},
"Agat_9_Floppy_controller_840Kb_JaBZ_089_023_Description.txt":{},
},
},
},
},
"Vector_06C":{
dir:1,
items:{
"english.txt":{
name:"Vector 06C",
params:"Year\x091987\x0ARAM\x0964-320 kB\x0AROM\x090.5 kB\x0ACPU\x09i8080 3 MHz\x0AGraph\x09512x256x4, 256x256x16, 256 colors palette\x0ASound\x09i8253 x3\x0AGroup\x09Vector 06C",
body:"TODO\x0A",},
"my_software":{
dir:1,
items:{
"9999_in_1_music":{
dir:1,
items:{
"Makefile":{},
"vector_music.vec.lst":{},
"vector_music.creator":{},
"vector_music.vec":{},
"vector_music.files":{},
"vector_music.cxxflags":{},
"vector_music.asm":{},
"vector_music.cflags":{},
"bin":{
dir:1,
items:{
"cmm":{},
"sjasmplus":{},
},
},
"vector_music.c":{},
},
},
},
},
"utils":{
dir:1,
items:{
"rom2wav2rom_version_2":{
dir:1,
items:{
"wav2rom.exe":{},
"wav2rom.txt":{},
"rom2Wav.exe":{},
},
},
"rom2wav2rom_version_3":{
dir:1,
items:{
"source":{
dir:1,
items:{
"bin2wav.c":{},
},
},
"bin2wav.ubuntu64":{},
"bin2wav.exe":{},
},
},
"bin2wav":{
dir:1,
items:{
"vector06c_bin_to_wav":{},
"sources":{
dir:1,
items:{
"vector06c_bin_to_wav.files":{},
"Makefile":{},
"vector06c_bin_to_wav.creator":{},
"make_pcm_wav_file.cpp":{},
"make_pcm_wav_file.h":{},
"fs_tools.cpp":{},
"fs_tools.h":{},
"vector06c_bin_to_wav.cpp":{},
},
},
"vector06c_bin_to_wav.exe":{},
},
},
},
},
"photo":{
dir:1,
items:{
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"tape_load_screen.png":{},
},
},
"russian.txt":{
name:"Вектор 06Ц",
params:"Год\x091987\x0AОЗУ\x0964-320 кБ\x0AПЗУ\x090.5 кБ\x0AПроц\x09К580ВМ80А 3 MГц\x0AГрафика\x09512x256x4, 256x256x16, палитра 256 цв\x0AЗвук\x09К580ВИ53 x3\x0AГруппа\x09Вектор 06Ц",
body:"Вектор 06Ц это советский домашний компьютер с самой красивой графикой. Самой\x0Aкрасивой, потому что компьютер в разрешении 256x256 может отобразить 16 честных\x0Aцветов из палитры в 256 цветов. Мало какой компьютер того времени может\x0Aотобразить розовый цвет для кожи и коричневый для ствола дерева.\x0A\x0AПосле включения компьютера на экране появляются линейки. По этим линейкам Вектор\x0Aлегко узнается среди других компьютеров. Эти линейки показывают заполнение\x0Aпамяти компьютера и то, что компьютер готов начать загрузку программы с\x0Aмагнитофона. По мере загрузки программы эти линейки будут закрашиваться. Пока\x0Aпрограмма не загрузится вы ничего на компьютере сделать не сможете. ПЗУ объемом\x0A512 байт содержит только загрузчик с магнитофона. Но даже загрузив программу без\x0Aошибок, надо знать секретную комбинацию клавиш, что бы запустить программу.\x0A\x0AСпособ записи на кассету у Вектора более прогрессивный, чем у большинства\x0Aостальных 8 битных компьютеров. Программа записываются блоками по 256 байт и\x0Aкаждый блок защищается контрольной суммой. Если при загрузке блока произошла\x0Aошибка, то можно повторить загрузку только ошибочного блока.\x0A\x0AДля загрузки с других носителей информации компьютер можно доработать,\x0Aустановить ПЗУ объемом 2 Кб содержащее загрузчик с магнитофона, флоппи-диска,\x0Aквази-диска или внешнего ПЗУ. Внешнее ПЗУ подключается к параллельному порту\x0Aкомпьютера и может содержать любимую игру, бейсик или любую другую программу.\x0A\x0AУ Вектора 64 Кб оперативной памяти. ПЗУ отключается от адресного пространства и\x0Aне мешает. Из этих 64 Кб под видеопамять используется 8/16/24/32 Кб для режимов\x0A256x256 2/4/8/16 цветов, а программ остаётся от 32 до 56 Кб. Причем, каждые 8 Кб\x0Aпамяти представляют собой отдельную битовую плоскость, что позволяет быстро\x0Aнакладывать изображения на фон. Еще есть графические режимы 512x256 2/4 цвета и\x0Aаппаратная вертикальная прокрутка экрана. Аппаратная прокрутка очень ускоряет\x0Aработу с текстовыми программами, ну и может использоваться в некоторых иргах.\x0A\x0AДля вывода звука используется 3 канала микросхемы таймера КР580ВИ53, что\x0Aпозволяет выводить 3-х голосую полифонию без существенной загрузки центрального\x0Aпроцессора, либо цифровой звук (ШИМ модуляция), но уже при 100% загрузке\x0Aпроцессора.\x0A\x0AПроцессор КР580ВМ80А работает на повышенной тактовой частоте 3 МГц. По\x0Aдокументам максимальная частота процессора 2,5 МГц. Но при этом\x0A\x0Aпроизводительность компьютера не больше, чем у Ориона 128 с процессором на\x0A2,5 МГц. Это потому что в Векторе процессор тормозится видеоконтроллером. Время\x0Aвыполнения любой команды процессора округляется до 4-х тактов в большую сторону.\x0A\x0AВ Векторе используется емкостная или герконовая клавиатура. Такие клавиатуры\x0Aсчитаются более удобными и надежными, но у Вектора получилось чуть выше среднего\x0Aпо надежности и удобству.\x0A\x0AДля Вектора было разработано расширение оперативной памяти до 320 Кб, контроллер\x0Aдисковода, подключен звуковой синтезатор AY-3-8910 и даже заменен процессор на\x0AZ80.\x0A\x0AВектор был разработан примерно в 1987 году в Кишеневе инженерами Донатом\x0AТемиразовым и Александром Соколовым. Изначально выпускался на кишинёвском ПО\x0AСчётмаш. В 1989 году компьютер стоил 750 руб.\x0A",},
"software":{
dir:1,
items:{
"rom":{
dir:1,
items:{
"supkalah.rom":{},
"down.rom":{},
"xon2copy.rom":{},
"uzas1.rom":{},
"barman.rom":{},
"loderun.rom":{},
"dear-exc.rom":{},
"cookie 2.rom":{},
"exp1.rom":{},
"dengolov.rom":{},
"down1.rom":{},
"ambm255.rom":{},
"labir4.rom":{},
"pdizzy.rom":{},
"tetris.rom":{},
"gomoki.re0":{},
"chaser.rom":{},
"poker.rom":{},
"life2.rom":{},
"istribit.rom":{},
"columns3.rom":{},
"dear-col.rom":{},
"slalom.rom":{},
"pairstrs.rom":{},
"klasshes.rom":{},
"kotribol.re0":{},
"vodolaz.rom":{},
"kolobiha.rom":{},
"dizzy-s.rom":{},
"sokoban.rom":{},
"land.rom":{},
"trip.rom":{},
"kotprig.rom":{},
"putup5im.rom":{},
"nupogodi.rom":{},
"volejbol.re0":{},
"tutankh2.rom":{},
"billiard.rom":{},
"robbo2.rom":{},
"dcountr2.rom":{},
"pusher.rom":{},
"putup5.rom":{},
"pyramid.rom":{},
"airforcs.rom":{},
"put11kuj.rom":{},
"rotorsay.rom":{},
"poprigun.r0m":{},
"snake1.rom":{},
"dear-mas.rom":{},
"airman.rom":{},
"putex1im.rom":{},
"faraon.rom":{},
"binland.rom":{},
"vetka.com":{},
"pescher1.rom":{},
"bacbyl.rom":{},
"digger.rom":{},
"zodstr2.rom":{},
"dairman.rom":{},
"snake2.rom":{},
"ohota.rom":{},
"ochko101.rom":{},
"spacecom.rom":{},
"pif-paf.rom":{},
"burya.rom":{},
"caeon.rom":{},
"shahm2.rom":{},
"kijanka.rom":{},
"kijantim.rom":{},
"sidearm.rom":{},
"wonder3.rom":{},
"agress1.r0m":{},
"starfit_.rom":{},
"vertolet.rom":{},
"putup6.rom":{},
"putuped.rom":{},
"bouldush.rom":{},
"putup4im.rom":{},
"robbo1v.rom":{},
"macsit.rom":{},
"cyberno.rom":{},
"fatax2.rom":{},
"spacewar.rom":{},
"sabotaz.rom":{},
"sherly.rom":{},
"chsund2.rom":{},
"mreversi.com":{},
"life.rom":{},
"karti.rom":{},
"udav_ok.rom":{},
"reversi.rom":{},
"nashchha.rom":{},
"critters.rom":{},
"galaxan.rom":{},
"revsex2.rom":{},
"rockman2.rom":{},
"klad.rom":{},
"boulder11.rom":{},
"labir3.rom":{},
"apex.rom":{},
"frogger.rom":{},
"ir@world.rom":{},
"readme.txt":{},
"labir6.rom":{},
"putup1im.rom":{},
"earth3.rom":{},
"spacesaf.rom":{},
"tetr_ok.rom":{},
"kvadrati.rom":{},
"xyzostrs.rom":{},
"snake.rom":{},
"kotprig.re0":{},
"magshar.rom":{},
"alibaba.rom":{},
"labirint.rom":{},
"bouldd22.rom":{},
"voleibol.rom":{},
"tetrisp.rom":{},
"pacman.rom":{},
"sragen2.rom":{},
"sharik.rom":{},
"paradis_.rom":{},
"warp.rom":{},
"risestrs.rom":{},
"rockford.rom":{},
"ninjakag.rom":{},
"putuppr1.r0m":{},
"bronevik.rom":{},
"pesprizr.rom":{},
"parashut.re0":{},
"sgibbon.rom":{},
"basic25.r0m":{},
"shoptour.rom":{},
"grotohod.rom":{},
"pescher2.rom":{},
"pusherm.rom":{},
"putup.rom":{},
"iexpress.rom":{},
"labir8.rom":{},
"xzone.rom":{},
"tutunkh.rom":{},
"putup2im.rom":{},
"whouse.rom":{},
"cather.rom":{},
"filer.rom":{},
"boulderd.rom":{},
"paradim.rom":{},
"cronex.rom":{},
"transmut.rom":{},
"abrams.rom":{},
"arktika.re0":{},
"runer_ok.rom":{},
"alfred.rom":{},
"diggerm.rom":{},
"speiscom.rom":{},
"stalker.rom":{},
"klad99.rom":{},
"airfight.rom":{},
"dear-sup.rom":{},
"sragen1.rom":{},
"nickches.rom":{},
"xyzolog.rom":{},
"bas25zay.r0m":{},
"desant.rom":{},
"udaw.rom":{},
"tron.rom":{},
"arcan2.rom":{},
"s@ranger.rom":{},
"tetriso.rom":{},
"ugolki.rom":{},
"ctrain.rom":{},
"colbstrs.rom":{},
"uzas2.rom":{},
"dino2.rom":{},
"spichki.rom":{},
"jungleay.rom":{},
"fataxim.rom":{},
"labir5.rom":{},
"trutni.rom":{},
"ninjstrs.rom":{},
"putupex2.rom":{},
"paradise.rom":{},
"chesmast.rom":{},
"chronos.rom":{},
"spacop.rom":{},
"piton.rom":{},
"zplaneta.rom":{},
"trutni.re0":{},
"xonix.rom":{},
"stalkerm.rom":{},
"chess.rom":{},
"landing.rom":{},
"eraser.rom":{},
"starfite.rom":{},
"flighter.rom":{},
"btank.rom":{},
"flyspirt.rom":{},
"chesse.rom":{},
"osciller.rom":{},
"basic25z.r0m":{},
"lender.rom":{},
"pifpaf.rom":{},
"flight.rom":{},
"plifter.rom":{},
"sexor.rom":{},
"putupm.rom":{},
"columns2.rom":{},
"cybernbr.rom":{},
"sokoban_.rom":{},
"konfetti.rom":{},
"dear-spt.rom":{},
"rotors.rom":{},
"best+.rom":{},
"spmegatr.rom":{},
"runner.rom":{},
"seka.rom":{},
"joeblade.rom":{},
"pif-paf_.rom":{},
"dfight.rom":{},
"robbo1.rom":{},
"jeti2.rom":{},
"putupex3.rom":{},
"dear-pl.rom":{},
"spcdemon.rom":{},
"kijanka2.rom":{},
"jeti.rom":{},
"hairwarr.rom":{},
"chsund3.rom":{},
"filler.rom":{},
"pruzasov.rom":{},
"forpost.rom":{},
"tankwar.rom":{},
"tarzan.rom":{},
"commandz.rom":{},
"chsund1.rom":{},
"semvinej.rom":{},
"itaxstrs.rom":{},
"colorwar.rom":{},
"planeta.rom":{},
"parashut.rom":{},
"revsex1.rom":{},
"mars.rom":{},
"putup2_.r0m":{},
"shahm1a.rom":{},
"fantom2.rom":{},
"zamok.rom":{},
"alibstrs.rom":{},
"tank.rom":{},
"exolon.rom":{},
"fortuna.rom":{},
"putupedd.rom":{},
"pohiwana.rom":{},
"putups.rom":{},
"golkiper.rom":{},
"karatel.rom":{},
"binaryay.rom":{},
"arkanoi2.rom":{},
"turbudav.re0":{},
"psst.rom":{},
"pitong.rom":{},
"niagar.rom":{},
"atninja.rom":{},
"colball.rom":{},
"shturm.rom":{},
"mower.rom":{},
"pyramid.txt":{},
"fatax4.rom":{},
"klad1.rom":{},
"snareland.rom":{},
"srazsnlo.rom":{},
"alien.r0m":{},
"istrebit.rom":{},
"ranger.rom":{},
"vorishka.rom":{},
"fatax1.rom":{},
"ambalm.rom":{},
"formula.rom":{},
"salesman.zip":{},
"cybern.rom":{},
"kirash.rom":{},
"terminus.rom":{},
"snarlan.rom":{},
"digger2.rom":{},
"adskok.rom":{},
"fatax.rom":{},
"bouldd11.rom":{},
"kotribol.rom":{},
"tetrisz.rom":{},
"cookie.rom":{},
"ochko.rom":{},
"pairs.rom":{},
"cheese2.rom":{},
"efa.rom":{},
"mohotni2.rom":{},
"putup_.rom":{},
"klad2.rom":{},
"collines.rom":{},
"uzas.rom":{},
"wampir@l.rom":{},
"bombard.rom":{},
"ctegg.rom":{},
"tennis.rom":{},
"bomber.rom":{},
"kletka.rom":{},
"xonixs.rom":{},
"shahm3.rom":{},
"global.rom":{},
"putup4.rom":{},
"putuple.rom":{},
"rembo.rom":{},
"jetset.rom":{},
"raider.rom":{},
"helicopt.rom":{},
"putup2.rom":{},
"putup8.rom":{},
"karatek.rom":{},
"vozdshar.rom":{},
"liberator.rom":{},
"pitongln.rom":{},
"shashki.rom":{},
"blasterj.rom":{},
"eric.rom":{},
"shahm4.rom":{},
"ninja2.rom":{},
"dcountry.rom":{},
"putupex1.rom":{},
"preda1im.rom":{},
"arkanoid.rom":{},
"towers.rom":{},
"eaglesn.rom":{},
"tennis.re0":{},
"stonkers.rom":{},
"specshes.rom":{},
"fuite.rom":{},
"magpap1.r0m":{},
"putustrs.rom":{},
"deathstr.rom":{},
"space-ts.rom":{},
"crapaut.rom":{},
"cvkvadr.rom":{},
"kolobeg.rom":{},
"donkong.rom":{},
"aidsmid.rom":{},
"mineswep.rom":{},
"frescue.rom":{},
"nardy@.rom":{},
"circus.rom":{},
"ambal255.rom":{},
"flyer.rom":{},
"sokoban.re0":{},
"upriver.rom":{},
"push.rom":{},
"xonixsn.rom":{},
"kolobih@.rom":{},
"airforce.rom":{},
"harrier.rom":{},
"dear-rsy.rom":{},
"predato2.rom":{},
"ollilisa.rom":{},
"westbank.rom":{},
"rockman.rom":{},
"moonbugs.rom":{},
"tetris0.rom":{},
"logic.rom":{},
"iczin.rom":{},
"himiya.rom":{},
"billy.rom":{},
"dino1.rom":{},
"bolderm.rom":{},
"dear-rs.rom":{},
"stfight.re0":{},
"tetrisii.rom":{},
"runerman.rom":{},
"lapi.rom":{},
"superwea.rom":{},
"sokoban0.rom":{},
"alambush.rom":{},
"w1.rom":{},
"stepjump.rom":{},
"bolder2.rom":{},
"cosman.rom":{},
"dizzi.rom":{},
"robbo3.rom":{},
"tir.rom":{},
"assaut.rom":{},
"putuppr2.r0m":{},
"kotprig2.re0":{},
"ambal.rom":{},
"tankwars.rom":{},
"arktika.rom":{},
"doroga.rom":{},
"put10kuj.rom":{},
"monstre.rom":{},
"arcn.c01":{},
"tir3.rom":{},
"ericstrs.rom":{},
"labir1.rom":{},
"gapper_.rom":{},
"dragonf.rom":{},
"riseay.rom":{},
"frscstrs.rom":{},
"pakmanen.rom":{},
"micmouse.rom":{},
"rockm95.rom":{},
"dear-bst.rom":{},
"columnsj.rom":{},
"mirsm.rom":{},
"putup3im.rom":{},
"stars2.rom":{},
"predato1.rom":{},
"outrun.rom":{},
"zoryt.rom":{},
"polygame.rom":{},
"ninjya.rom":{},
"sdemise.rom":{},
"bordholl.rom":{},
"pasjansi.rom":{},
"ciferton.rom":{},
"pool.rom":{},
"fantom.rom":{},
"starwars.rom":{},
"sland.rom":{},
"popcorn.rom":{},
"zodstr1.rom":{},
"cybermut.rom":{},
"runman.rom":{},
"fatax3.rom":{},
"sokzamka.rom":{},
"uzas3.rom":{},
"pyr-df99.rom":{},
"saboteur.rom":{},
"features.rom":{},
"fataxcol.rom":{},
"fataxm.rom":{},
"poddavki.rom":{},
"iw@intro.rom":{},
"xonix2.re0":{},
"magpap2.rom":{},
"kobra.rom":{},
"house.rom":{},
"samuray.rom":{},
"snake3.rom":{},
"krenol.r44":{},
"jetset2.rom":{},
"maze.rom":{},
"kobra0.r0m":{},
"putup3.r0m":{},
"morohot2.rom":{},
"putex3im.rom":{},
"polet.rom":{},
"progujas.rom":{},
"jungle.rom":{},
"gapper.rom":{},
"stars.rom":{},
"karate.rom":{},
"gpatrul.rom":{},
"tarzan_.rom":{},
"troll.rom":{},
"cooky2.rom":{},
"putup7.rom":{},
"kolopunc.rom":{},
"gomoku.rom":{},
"ghostbus.rom":{},
"football.rom":{},
"ohmummy.rom":{},
"popcorn.re0":{},
"mines.rom":{},
"cave2.rom":{},
"putup9.rom":{},
"labir2.rom":{},
"parity.rom":{},
"aidsjun.rom":{},
"dengolos.rom":{},
"pacmstrs.rom":{},
"armiya8.rom":{},
"labir7.rom":{},
"putex2im.rom":{},
"jumpjack.rom":{},
"zodstr3.rom":{},
"pipedr.rom":{},
"karatet.rom":{},
"riseout.rom":{},
"labir9.rom":{},
"robotek.rom":{},
"aidssex.rom":{},
"putup1.rom":{},
},
},
"floppy":{
dir:1,
items:{
"t-rex-05.fdd":{},
"vetka.com":{},
"robocop.fdd":{},
"vector.edd":{},
"mreversi.com":{},
"puzznic.fdd":{},
"win4.fdd":{},
"win2.fdd":{},
"cdpacman.fdd":{},
"lemmings.fdd":{},
"stmpro.fdd":{},
"lines.fdd":{},
"win3.fdd":{},
"kb2.fdd":{},
"kb.fdd":{},
"game-15.fdd":{},
"viewgrph.fdd":{},
"rpm.fdd":{},
"card.fdd":{},
"win1.fdd":{},
"gt.fdd":{},
"incubus.fdd":{},
"zoo.fdd":{},
},
},
"for_z80_cpu":{
dir:1,
items:{
"valley.txt":{},
"alien8.txt":{},
"macaroid.rom":{},
"jetset.rom":{},
"valley.rom":{},
"macaroid.txt":{},
"jetset16.rom":{},
"jetset16.txt":{},
"alien8.rom":{},
"jetset.txt":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"rom8":{
dir:1,
items:{
"rom8.txt":{},
"rom8.pdf":{},
"rom8.bin":{},
},
},
},
},
"doc":{
dir:1,
items:{
"Vector_06C_Floppy_controller.djvu":{},
"Vector_06C_External_ROM_circuit.txt":{},
"Vector_06C_Testing_tools_User_manual_(Mick_Laboratory).djvu":{},
"Vector_06C_User_manual_(Mick_Laboratory).djvu":{},
"Quasidisk":{
dir:1,
items:{
"readme.txt":{},
"kdnalad.djvu":{},
"gerber":{
dir:1,
items:{
"kd_kish_rev_1_2 - CADCAM READ-ME.TXT":{},
"kd_kish_rev_1_2 - CADCAM Top Solder Resist.TXT":{},
"kd_kish_rev_1_2 - CADCAM Top Silk Screen.TXT":{},
"kd_kish_rev_1_2 - CADCAM Bottom Copper.TXT":{},
"kd_kish_rev_1_2 - CADCAM Bottom Solder Resist.TXT":{},
"kd_kish_rev_1_2 - CADCAM Drill.TXT":{},
"kd_kish_rev_1_2 - CADCAM Top Copper.TXT":{},
},
},
"kdnalad_sch2.jpg":{},
"kdnalad.rom":{},
"kdnalad_mon.jpg":{},
"kdisk.re3":{},
"kdnalad.rtx":{},
"kdnalad_time.jpg":{},
"kdnalad_sch.jpg":{},
},
},
"Vector_06C_AY8910_extension_circuit_2.pdf":{},
"Vector_06C_AY8910_extension_circuit.pdf":{},
"Vector_06C_Circuit.pdf":{},
"Vector_06C_Circuit_(Mick_Laboratory).djvu":{},
"Vector_06C_Monitor_debuger_Programmer_manual_(Mick_Laboratory).djvu":{},
"Vector_06C_External_ROM_circuit.gif":{},
},
},
},
},
"Unior_FV-6506":{
dir:1,
items:{
"english.txt":{
name:"Unior FV-6506",
params:"Year\x09≤1990\x0ARAM\x09128 kB\x0AROM\x092 kB\x0ACPU\x09i8080 2.2 MHz\x0AText\x0980x25x8\x0AGraph\x09240x120x8\x0ASound\x09i8253",
body:"TODO",},
"utils":{
dir:1,
items:{
"bt2wav_ubuntu32":{},
"bt2wav.exe":{},
"bt2wav_ubuntu64":{},
},
},
"photo":{
dir:1,
items:{
"3.jpg":{},
"2.jpg":{},
"tcpm2.png":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"tcpm1.png":{},
},
},
"russian.txt":{
name:"Юниор ФВ-6506",
params:"Год\x09≤1990\x0AОЗУ\x09128 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 2.2 MГц\x0AТекст\x0980x25x8\x0AГрафика\x09240x120x8\x0AЗвук\x09К580ВИ53",
body:"Юниор ФВ-6506 это советский домашний компьютер. Это улучшенная версия\x0Aкомпьютера Радио 86РК. У Юниора была увеличена частота процессора с 1.7 до\x0A2.2 МГц. Был увеличен объем оперативной памяти с 32 килобайт до 128 килобайт.\x0AБыло увеличено разрешение экрана с 64x25 символов до 80x25 символов. Добавлены\x0Aстрочные буквы. Добавлен псевдографический режим 240x120 точек. Добавлен цвет.\x0AКомпьютер отображает 8 цветов. Для вывода звука установлена микросхема\x0AКР580ВИ53. Установлена отличная клавиатура. Совместимость с оригинальным Радио\x0A86РК слабая.\x0A\x0AВ знакогенераторе объемом 128 символов авторы разместили не только заглавные\x0Aлатинские и русские буквы, но и строчные латинские и русские буквы. Это\x0Aпозволяет работать с текстами на этом компьютере, например, подготавливать их\x0Aдля печати на принтере.\x0A\x0AВ Юниоре установлено 2 знакогенератора. Одновременно можно использовать только\x0Aодин. Первый содержит 128 символов размером 6x8 пикселей: буквы, цифры, знаки\x0Aпрепинания. Второй содержит 64 псевдографических символа размером 6x4 пикселей.\x0AНа их основе сделан псевдографический режим 240x120 точек. По факту 240x102\x0Aточки, остальное за краем экрана.\x0A\x0AЮниор в отличии от Радио 86РК не выключает экран при загрузке и сохранении на\x0Aмагнитную ленту. Это стало возможно, потому что модуляция и демодуляция\x0Aвыполняется аппаратно. Используется микросхема КР580ВВ51, сигнал с которой\x0Aподвергается манчестерскому кодированию (фазовая модуляция).\x0A\x0AВсе устройства компьютера перенесены из адресного пространства оперативной\x0Aпамяти в адресное пространство портов ввода-вывода.\x0A\x0AОперативная память компьютера расширена до 128 килобайт. Но доступ к старшей\x0Aполовине памяти возможен только с помощью ПДП контроллера. Обычно старшая часть\x0Aпамяти используется как электронный диск, т.е. для хранения файлов.\x0A\x0AНа этом компьютере используется операционная система TCP/M-80М, которая работает\x0Aс магнитной лентой как с дискетой. Она сама управляет магнитофоном: перематывает\x0Aпленку, включает воспроизведение и запись. TCP/M это CP/M с драйвером\x0Aмагнитофона, вместо дисковода. T это Tape.\x0A\x0AПри первом использовании кассеты её необходимо отформатировать. Во время\x0Aформатирования кассеты компьютер записывает на кассету метки содержащие номера\x0Aсекторов. При работе с кассетой операционная система использует эти метки, что\x0Aбы определять, где и какой сектор начинается. В каком направлении необходимо\x0Aперематывать кассету, что бы найти нужный сектор.\x0A\x0AУправление магнитофоном не является уникальной возможностью этого компьютера.\x0AПодключить магнитофон можно к любому компьютеру имеющему параллельный порт.\x0AИнтерес тут представляет драйвер магнитофона для операционной системы TCP/M.\x0AИменно он управляет магнитофоном.",},
"software":{
dir:1,
items:{
"cii.b.bt":{},
"cii.a.bt":{},
"pasc.a.bt":{},
"pasc.b.bt":{},
"sc.a.bt":{},
"elcon.a.bt":{},
"proba2.bt":{},
"elcon.b.bt":{},
"jn.a.bt":{},
"265333.bt":{},
},
},
"firmware":{
dir:1,
items:{
"palette.rom":{},
"unior.rom":{},
"unior_font.rom":{},
},
},
"doc":{
dir:1,
items:{
"Unior_FV-6506_User_manual.djvu":{},
"Unior_FV-6506_Circuit.png":{},
"Unior_FV-6506_Programmer_manual.djvu":{},
"Unior_FV-6506_Chargen.png":{},
"Unior_FV-6506_Operator_manual.djvu":{},
"Unior_FV-6506_Circuit.djvu":{},
},
},
},
},
"PK8010_Korvet":{
dir:1,
items:{
"english.txt":{
name:"PK8010 Korvet",
params:"Year\x091987\x0ARAM\x09113-257 kB\x0AROM\x0924 kB\x0ACPU\x09i8080 2.5 MHz\x0AGraph\x09512x256x8, 16 colors palette\x0AText\x0964x16x2\x0ASound\x09i8253\x0AIn ROM\x09Basic",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"emulator":{
dir:1,
items:{
"alleg41.dll":{},
"disk":{
dir:1,
items:{
"disk.kdi":{},
},
},
"korvet09.exe":{},
"data":{
dir:1,
items:{
"cpm.rom":{},
"korvet11.rom":{},
"korvet20.rom":{},
"mapper.mem":{},
"kontur.rom":{},
"korvet2.fnt":{},
"korvet.rom":{},
"kontur.fnt":{},
},
},
"printer.txt":{},
"korvet.cfg":{},
"doc":{
dir:1,
items:{
"keyboard.txt":{},
"read.me":{},
"news.txt":{},
},
},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"extensions":{
dir:1,
items:{
"external_rom":{
dir:1,
items:{
"korvetrom.lyt":{},
"korvetrom.dsn":{},
"roms":{
dir:1,
items:{
"tetris.rom":{},
"park.rom":{},
"pacman.rom":{},
"rally.rom":{},
"mafia.rom":{},
"galaxian.rom":{},
"anton.rom":{},
},
},
},
},
},
},
"sources":{
dir:1,
items:{
"cpm-bios-2.1-wiza":{
dir:1,
items:{
"bios0-.asm":{},
"bios0.asm":{},
},
},
"cpm-bios-2.1-ofp_niijf_mgu":{
dir:1,
items:{
"ccpbase.rel":{},
"iodisk.mac":{},
"info.mac":{},
"cbios.mac":{},
"calcm.mac":{},
"init.mac":{},
"lst.mac":{},
"disp.rel":{},
"hinit2.mac":{},
"lsys.bat":{},
"p0.mac":{},
"setvect.rel":{},
"hin.mac":{},
"init.rel":{},
"info.rel":{},
"iodisk.rel":{},
"ink.mac":{},
"calc.mac":{},
"fsubs.mac":{},
"command.mac":{},
"disp.mac":{},
"cbios.rel":{},
"hinit.mac":{},
"command.rel":{},
"setvect.mac":{},
"bdospc.mac":{},
"hin.rel":{},
"bdospc.rel":{},
"ink.rel":{},
"link.bat":{},
"mac.bat":{},
"hinit.rel":{},
"ccpbase.mac":{},
"lst.rel":{},
},
},
"microdos-bios-15.11.1986":{
dir:1,
items:{
"mbios.asm":{},
},
},
"cpm-bios-1.2":{
dir:1,
items:{
"iodisk.mac":{},
"info.mac":{},
"cbios.mac":{},
"init.mac":{},
"lst.mac":{},
"systema":{},
"ink.mac":{},
"disp.mac":{},
"hinit.mac":{},
},
},
},
},
"russian.txt":{
name:"ПК8010 Корвет",
params:"Год\x091987\x0AОЗУ\x09113-257 кБ\x0AПЗУ\x0924 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AГрафика\x09512x256x8, палитра 16 цв\x0AТекст\x0964x16x2\x0AЗвук\x09К580ВИ53\x0AВ ПЗУ\x09Бейсик",
body:"ПК8010 и ПК8020 это советские школьные и домашние компьютеры. ПК8010 это тот же\x0Aкомпьютер, с той же печатной платой, но в неё не впаяны некоторые детали. \x0AНапример, не впаян контроллер дисковода. При необходимости впаять его не такая \x0Aуж и проблема. Это гораздо проще, чем найти контроллер дисковода для УКНЦ,\x0Aнапример.\x0A\x0AЧасто можно увидеть комплект состоящий из клавиатуры, монитора и системного\x0Aблока. Только это не системный блок. Вся электроника компьютера находится в\x0Aкорпусе клавиатуры. А в корпусе под монитором находятся только дисководы с\x0Aблоком питания.\x0A\x0AКорвет интересен тем, что в нем есть графический укоритель. Т.е. электрическая\x0Aсхема позволяющая ускорить рисование линий, текста, закраску фигур, очистку\x0Aэкрана... Это подходит для векторной графики, диаграмм, САПР, ну и\x0Aпрограммирования на Бейсике. Графика на корвете работает быстрее, чем на УКНЦ\x0Aили IBM PC (8088 + CGA). Но ускорения вывода изображений, копирования и\x0Aпрокрутки экрана в Корвете нет, поэтому для игр (как на Денди / NES) такое\x0Aускорение не подходит.\x0A\x0AКорвет отличается от других советских компьютеров высоким и одновременно цветным\x0Aразрешением видео 512x256 8 цветов. Лучше только у компьютера УКНЦ.\x0A\x0AВ Корвете установлено 113 Кб или 257 Кб оперативной памяти. Заменив микросхемы\x0Aпамяти К565РУ6 на К565РУ5 можно нарастить ОЗУ до 257 Кб. Почему такие не круглые\x0Aцифры? В компьютере установлено 5 банков памяти: 64 Кб для центрального\x0Aпроцессора, 16 или 64 Кб для видеоадаптера для красного цвета графического\x0Aрежима, 16 или 64 Кб для синего цвета, 16 или 64 Кб для зеленого цвета и еще\x0A1 Кб для аппаратного текстового видеорежима. Буквально треть печатной платы\x0Aкомпьютера забита микросхемами памяти.\x0A\x0AТекстовый видеорежим 64x16 2 цвета может работать одновременно с графическим.\x0AЧасть графической памяти может быть использована для хранения данных. А может\x0Aбыть и вся использована, если программа использует только текстовый видеорежим.\x0A\x0AЕсли Корвет подключить к обычному телевизору, то часть изображения окажется за\x0Aграницами экрана. Как у Вектор 1200 Старт или Кристы 2. Корвету нужен специально\x0Aнастроенный монитор.\x0A\x0AВ ПЗУ компьютера записан Бейсик. После включения питания сразу можно начать\x0Aпрограммирование или урок в школе. А при подключенном дисководе загружается\x0Aоперационная система CP/M или её аналог МикроДОС. Несколько компьютеров можно\x0Aобъединить в локальную сеть, контроллер локальной сети есть в каждом компьютере.\x0AВ Корвете можно встретить надежную герконовую клавиатуру, что так же очень\x0Aрадует. А можно встретить и менее надежную токопроводящую резину. А еще\x0Aпараллельный и последовательный порты, два порта джойстиков.\x0A",},
"software":{
dir:1,
items:{
"floppy":{
dir:1,
items:{
"unsort20.kdi.7z":{},
"unsort24.kdi.7z":{},
"unsort50.kdi.7z":{},
"unsort59.kdi.7z":{},
"pk8020_soft_archive_1.kdi.7z":{},
"unsort63.kdi.7z":{},
"unsort42.kdi.7z":{},
"psih_tests.kdi.7z":{},
"pk8020_soft_archive_3.kdi.7z":{},
"unsort14.kdi.7z":{},
"unsort55.kdi.7z":{},
"unsort39.kdi.7z":{},
"pk8020_soft_archive_15.kdi.7z":{},
"pk8020_soft_archive_2.kdi.7z":{},
"unsort12.kdi.7z":{},
"pk8020_soft_archive_14.kdi.7z":{},
"unsort22.kdi.7z":{},
"unsort28.kdi.7z":{},
"unsort33.kdi.7z":{},
"unsort52.kdi.7z":{},
"unsort9.kdi.7z":{},
"unsort18.kdi.7z":{},
"unsort19.kdi.7z":{},
"pk8020_soft_archive_5.kdi.7z":{},
"pk8020_soft_archive_4.kdi.7z":{},
"inkart_malysh_1.kdi.7z":{},
"unsort35.kdi.7z":{},
"unsort54.kdi.7z":{},
"inkart_malysh_3.kdi.7z":{},
"unsort48.kdi.7z":{},
"unsort34.kdi.7z":{},
"unsort53.kdi.7z":{},
"unsort30.kdi.7z":{},
"unsort5.kdi.7z":{},
"unsort1.kdi.7z":{},
"pk8020_soft_archive_6.kdi.7z":{},
"pk8020_soft_archive_13.kdi.7z":{},
"unsort47.kdi.7z":{},
"unsort17.kdi.7z":{},
"inkart_malysh_2.kdi.7z":{},
"unsort45.kdi.7z":{},
"pk8020_soft_archive_10.kdi.7z":{},
"unsort65.kdi.7z":{},
"pk8020_soft_archive_7.kdi.7z":{},
"unsort32.kdi.7z":{},
"unsort58.kdi.7z":{},
"unsort56.kdi.7z":{},
"unsort37.kdi.7z":{},
"unsort49.kdi.7z":{},
"pk8020_soft_archive_8.kdi.7z":{},
"pk8020_soft_archive_12.kdi.7z":{},
"unsort25.kdi.7z":{},
"unsort11.kdi.7z":{},
"unsort7.kdi.7z":{},
"shibut_dmitriy_ex_prog.kdi.7z":{},
"pk8020_soft_archive_11.kdi.7z":{},
"unsort27.kdi.7z":{},
"unsort43.kdi.7z":{},
"unsort36.kdi.7z":{},
"pk8020_soft_archive_9.kdi.7z":{},
"unsort44.kdi.7z":{},
"unsort4.kdi.7z":{},
"unsort6.kdi.7z":{},
"unsort62.kdi.7z":{},
"unsort2.kdi.7z":{},
"unsort13.kdi.7z":{},
"unsort3.kdi.7z":{},
"modelirovanie.kdi.7z":{},
"unsort66.kdi.7z":{},
"unsort23.kdi.7z":{},
"unsort51.kdi.7z":{},
"unsort57.kdi.7z":{},
"unsort8.kdi.7z":{},
"unsort10.kdi.7z":{},
"unsort40.kdi.7z":{},
"unsort26.kdi.7z":{},
"unsort16.kdi.7z":{},
"unsort67.kdi.7z":{},
"unsort29.kdi.7z":{},
},
},
},
},
"doc":{
dir:1,
items:{
"PK8010_Korvet_Circuit_and_description.pdf":{},
"PK8010_Korvet_CPM.txt":{},
"PK8010_Korvet_CPM.pdf":{},
},
},
},
},
"Alfa-BK":{
dir:1,
items:{
"english.txt":{
name:"Alfa-BK",
params:"Year\x09≤1990\x0ARAM\x0932 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AText\x0964x25x2\x0AGraph\x09128x62x2\x0AGroup\x09Radio 86RK",
body:"Alfa-BK is a Radio 86RK computer with 32 kB of RAM in a 3 mm thick steel case.\x0AOne case weighs 5 kg. This computer uses a simple keyboard. A couple of layers\x0Aof film are glued onto a sheet of textolite. The user presses the film against\x0Athe textolite with his finger and closes the contact. After 25 years, the\x0Akeyboard works clearly.\x0A\x0A\x0A",},
"photo":{
dir:1,
items:{
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"Альфа-БК",
params:"Год\x09≤1990\x0AОЗУ\x0932 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AТекст\x0964x25x2\x0AГрафика\x09128x62x2\x0AГруппа\x09Радио 86РК",
body:"Альфа БК это компьютер Радио 86РК с 32 Кб ОЗУ в стальном корпусе толщиной 3 мм.\x0AОдин корпус весит 5 кг. В этом компьютере использована простейшая клавиатура.\x0AНа лист текстолита наклеено пару слоев пленки. Пользователь прижимает пальцем\x0Aпленку к текстолиту и замыкает контакт. Спустя 25 лет клавиатура работает четко.\x0A",},
"doc":{
dir:1,
items:{
"Alpha_BK_Circuits.djvu":{},
"Alpha_BK_User_manual.djvu":{},
},
},
},
},
"Specialist_Linevskoy":{
dir:1,
items:{
"english.txt":{
name:"Specialist Linevskoy",
params:"Year\x091988\x0ARAM\x0948 kB\x0AROM\x092 - 16 kB\x0ACPU\x09i8080 2 MHz\x0AGraph\x09384x256x2, 384x256x5, 384x256x8\x0AGroup\x09Specialist",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"3.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"Специалист Линевской",
params:"Год\x091988\x0AОЗУ\x0948 кБ\x0AПЗУ\x092 - 16 кБ\x0AПроц\x09К580ВМ80А 2 MГц\x0AГрафика\x09384x256x2, 384x256x5, 384x256x8\x0AГруппа\x09Специалист",
body:"Эта печатная плата называется Линёвская в честь населенного пункта Линёво \x0AНовосибирской области, в котором находился кооператив, который развел и \x0Aпроизводил эти печатные платы с 1988 года.\x0A\x0AСпециалист это советский любительский компьютер. Он появился в виде схем,\x0Aпечатных плат и 16-ричных дампов в журнале Моделист Конструктор 1987-2. \x0AРадиолюбители должны были собрать компьютер самостоятельно. Чуть позже заводы,\x0Aкооперативы, институты начали выпуск своих Специалистов.\x0A\x0AБольше инфомрации вы найдете в папке Specialist.\x0A",},
"doc":{
dir:1,
items:{
"Specialist_linevskoy_PCB_2.png":{},
"Specialist_linevskoy_PCB.png":{},
"Specialist_linevskoy_Circuit.png":{},
"Specialist_linevskoy_PCB_1.png":{},
},
},
},
},
"PK8002_Elf":{
dir:1,
items:{
"english.txt":{
name:"PK8000 Elf",
params:"Year\x091989\x0ARAM\x0964 kB\x0AROM\x094 kB\x0ACPU\x09i8080 2.5 MHz\x0AGraph\x09512x192x2, 256x192x16, sprites, 256 colors palette\x0AText\x0932x27x16, 64x27x2\x0ASound\x09i8253 (3 channels with volume)",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"castools":{
dir:1,
items:{
"msxcastoolsui.exe":{},
"copying":{},
"msxcastoolsui.txt":{},
"wav2cas.exe":{},
"cas2wav.exe":{},
"casdir.exe":{},
"readme":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"ПК8002 Эльф",
params:"Год\x091989\x0AОЗУ\x0964 кБ\x0AПЗУ\x094 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AГрафика\x09512x192x2, 256x192x16, спрайты, палитра 256 цв\x0AТекст\x0932x27x16, 64x27x2\x0AЗвук\x09К580ВИ53 (3 канала с громкостью)",
body:"ПК8002 Эльф это советский домашний компьютер. Чемн интересен? Ни в одном\x0Aсоветском домашнем компьютере нет спрайтов, кроме этого. А так же компьютер\x0Aимеет неплохие графические возможности: видеорежим 256x212 16 цветов из палитры\x0Aв 256 цветов, двухцветный графический видеорежим 512x212, аппаратный текстовый\x0Aвидеорежим. А еще в компьютере 3-х канальный звук: 3 генератора прямоугольных\x0Aимпульсов (КР580ВИ53), общая регулировка амплитуды и генератор шума.\x0A\x0A*** Спрайты ***\x0A\x0AСпрайты это аппаратное ускорение вывода изображений на экран. Процессору не\x0Aнужно копировать в видеопамять каждую точку изображения самому. Процессор только\x0Aлишь указывает видеоконтроллеру координаты изображения, что бы изображение\x0Aотобразилось в нужном месте экрана. Т.е. вместо того, что бы вывести 100 точек,\x0Aпроцессор выведет 100 изображений.\x0A\x0AВидеопамять при этом не изменяется, в видеопамяти изображение не появляется. В\x0Aвидеопамяти находится фоновое изображение поверх которого отображаются эти самые\x0Aизображения, которые и называются спрайтами. Спрайты это не просто прямоугольные\x0Aизображения, спрайты могут иметь прозрачные места и быть любой формы.\x0A\x0AСпрайты это Ваш персонаж, его враги, пули, взрывы... всё то, что перемещается\x0Aповерх фона.\x0A\x0AПреимущества технологии спрайтов проявляются, когда нужно переместить\x0Aизображение в другое место экрана. Процессору достаточно изменить одно число,\x0Aодну координату, что бы изображение переместилось. Не нужно восстанавливать фон\x0Aпод изображением, ведь видеопамять не изменяется. Вывод графики ускоряется в 100\x0Aраз.\x0A\x0AСпрайты использовались в игровых приставках с самого начала, они были в Atari\x0A2600 (Рембо), NES (Денди), Sega Genesis (Sega Mega Drive). Именно поэтому игры\x0Aна приставках такие динамичные и красочные. В компьютерах спрайты использовались\x0Aреже, только в компьютерах заточенных под игры. Например, они были в самых\x0Aпопулярных западных и восточных компьютерах. В американском компьютере Commodore\x0A64 и японских компьютерах стандарта MSX.\x0A\x0AЗапад, восток, а как же Европа и СССР? У нас был ZX Spectrum. В ZX Spectrum\x0Aспрайтов не было. Во времена создания ZX Spectrum Великобритания была такой же\x0Aбедной, как СССР в 90-ые. Люди не могли себе позволить платить за большие\x0Aсложные микросхемы или сотню микросхем базовой логики.\x0A\x0AСпециализированных микросхем со спрайтами в СССР не выпускалось так же. Фирмы\x0Aимеющие возможность разрабатывать микросхемы для своих компьютеров об играх не\x0Aзадумывались. Создавать сложный и дорогой компьютер для игры - какая глупость!\x0AЛучше установить два процессора для вычислений (как в УКНЦ), чем отдельный\x0Aигровой графический процессор.\x0A\x0A*** О компьютере ***\x0A\x0AЧто бы обеспечить компьютер играми, играми написанными для технологии спрайтов,\x0Aкомпьютер создавался максимально похожим на компьютеры MSX. Сделать советский\x0AMSX совместимый компьютер было невозможно, потому что ни одной из 3-х ключевых\x0Aмикросхем компьютеров MSX (процессора Z80, видеоконтроллера TMS99x8 и звукового\x0Aсинтезатора AY-3-8910) у нас не выпускалось.\x0A\x0AВ ПК8002 Эльф вместо процессора Z80 был использован процессор прошлого поколения\x0Ai8080, а точнее наш аналог КР580ВМ80А. У процессора i8080 меньше скорость\x0Aработы, меньше регистров, меньше команд, меньше способов адресации, отличается\x0Aобработка прерываний... Поэтому игры от MSX написанные для процессора Z80\x0Aтребовали дизассемблирования, полного анализа и доработки исполняемого кода, что\x0Aбы запуститься на процессоре 8080.\x0A\x0A(Спорное решение, процессоры Z80 уже появлялись в стране).\x0A\x0AВидеоконтроллер был реализован на микросхемах базовой логики, схема компьютера\x0Aсодержит 140 микросхем! Полной совместимости с видеоконтроллером MSX нет, ведь\x0Aигры всё равно надо переписывать, поэтому тратить лишние микросхемы для\x0Aобеспечения совместимости было бессмысленно.\x0A\x0AПроблема совместимости видеоконтроллеров частично решалась тем, что существовало\x0Aмного интересных игр, которые взаимодействовали с видеоконтроллером только через\x0Aфункции ПЗУ.\x0A\x0AВозможности видеоконтроллера получились средними между MSX1 и MSX2. Компьютер\x0Aотображал текстовые режимы 32x24 16 цветов 60 Гц или 32x27 16 цветов 50 Гц. Эти\x0A16 цветов выбираются из палитры в 256 цветов. Цвет фона и текста можно назначать\x0Aотдельно каждой строке символа (блоку пикселей 8x1). Знакогенератор содержит 864\x0Aсимвола, что позволяет заполнить весь экран не повторяющимися символами и\x0Aполучить аналог графического режима 256x192 или 256x212. Это фон, а еще есть\x0Aспрайты.\x0A\x0AПоверх фона отображается до 64-х трёхцветных спрайта размером от 16x2 до 16x212\x0Aпикселей. Четвертый цвет спрайта прозрачный.\x0A\x0AТак же поддерживается видеорежим, когда на экране отображается всего 4 цвета, но\x0Aкаждый пиксель на экране может быть любого цвета. И еще есть режим, когда на\x0Aэкране отображается всего 2 цвета, но разрешение экрана в два раза больше\x0A515x192 или 512x212.\x0A\x0AЕще можно переключаться между 4-мя страницами видеопамяти.\x0A\x0AЗвук компьютера реализован на микросхемах базовой логики, таймере КР580ВИ53 и\x0AЦАП КР572ПА1А. Программист задает частоты каналов КР580ВИ53. Программист может\x0Aвключить генератор шума, частота дискретизации шума задается третьим каналом\x0AКР580ВИ53 и собственно шум замещает собой третий канал. Затем каналы смешиваются\x0Aв определенных пропорциях и с помощью КР572ПА1А регулируется общая громкость.\x0A\x0AПЗУ компьютера содержит программу Монитор.\x0A\x0A",},
"software":{
dir:1,
items:{
"othell.cas":{},
"putup.cas":{},
"eric.cas":{},
"kungfu.cas":{},
"color.cas":{},
"jungle.cas":{},
"basic.cas":{},
"ping.cas":{},
"gonki.cas":{},
"test.cas":{},
},
},
"firmware":{
dir:1,
items:{
"source":{
dir:1,
items:{
"pk8002.rom.txt":{},
"readme.docx":{},
"pk8002.i64":{},
},
},
"pk8002_rt2_firmware_1_05.jed":{},
"pk8002_rf2_firmware_0_02.bin":{},
"pk8002.rom":{},
"pk8002_rt2_firmware_1_04.jed":{},
"pk8002_rf2_firmware_0_01.bin":{},
},
},
"doc":{
dir:1,
items:{
"PK8002_Circuits_Chips_Pages.txt":{},
"PK8002_PCB_bottom.jpg":{},
"PK8002_Circuit_4_ROM_Sound_Joystick_Tape_v2.png":{},
"PK8002_Author_notes.txt":{},
"PK8002_User_manual.djvu":{},
"PK8002_Clocks.png":{},
"PK8002_Correspondence_of_CPU_and_DMA_address_bits.ods":{},
"PK8002_PCB_top.jpg":{},
"PK8002_PCB_bottom.png":{},
"PK8002_Circuit_2_RAM_and_MUX_v2.png":{},
"PK8002_Screen_clock_diagramm.png":{},
"PK8002_Circuit_6_Video_v2.png":{},
"PK8002_Circuit_3_Video.png":{},
"PK8002_Circuit_1_CPU_and_clock_v2.png":{},
"PK8002_PCB_top.png":{},
"PK8002_Video_memory.odt":{},
"PK8002_Circuit_7.png":{},
"PK8002_Screen_clock_daigramm.odt":{},
"PK8002_IO_ports.txt":{},
},
},
},
},
"Ocean_240":{
dir:1,
items:{
"english.txt":{
name:"Ocean 240",
params:"Year\x091986\x0ARAM\x09128 kB\x0AROM\x0916 kB\x0ACPU\x09i8080 2.4 MHz\x0AGraph\x09512x256x2, 256x256x4 palette 8 colors",
body:"\x22Ocean 240\x22 is a rare Soviet computer. I wouldn't be surprised if only two\x0Acomputers were released. But at the same time this computer is known. Its\x0Acircuit, PCB and description were published in the magazine MPSS 1986/2. You can\x0Adownload the magazine here.\x0A\x0AThis computer was developed by the Institute of Oceanology of the USSR Academy\x0Aof Sciences. The magazine said that this computer was used on the ship. The\x0Acomputer processed data received from underwater sensors. The computer uses the\x0ACP/M operating system. The processing program was written on Pascal. There is a\x0Asite of the owner of one of the computers. The owner has written several useful\x0Aprograms for this computer. In mid-1986, the next version of the 240.2 computer\x0Awas released, with vertical and horizontal hardware screen scrolling.\x0A\x0AAccording to the characteristics, i can assume that computer is designed for\x0Aworking in the CP/M operating system. The processor works almost at a maximum\x0Afrequency at 2.4 MHz. A screen resolution 256x256 or 512x256 pixels allows to\x0Adisplay 32 or 64 characters across the screen width. And there is still a\x0Amargin, the computer can display 80 characters across the screen width using\x0A6x8 pixel font. There are two video pages. In 256x256 mode, 4 colors are\x0Adisplayed from a palette of 8 colors. There are 8 fixed palettes. Hardware\x0Avertical scrolling allows to work fast in the console. 128 kilobytes of RAM\x0Aallows to organize a RAM disk, since the CP/M operating system cannot use more\x0Athan 64 kilobytes.\x0A\x0AI took photos from the site http://azmaster.narod.ru/Ocean-240. I decided to\x0Aduplicate the information about this computer so that it would not disappear.\x0A",},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"17.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Океан 240",
params:"Год\x091986\x0AОЗУ\x09128 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09К580ВМ80А 2.4 MГц\x0AГрафика\x09512x256x2, 256x256x4 палитра 8 цветов",
body:"\x22Океан 240\x22 это редкий советский компьютер. Я не удивлюсь если было выпущено\x0Aвсего два компьютера. Но при этом этот компьютер известный. Его схема, печатная\x0Aплата и описание были напечатаны в журнале МПСС 1986/2. Журнал вы можете скачать\x0Aтут.\x0A\x0AЭтот компьютер разработан Институтом океанологии АН СССР. В журнале МПСС\x0Aнаписано, что этот компьютер использовался на корабле. Компьютер обрабатывал\x0Aданные полученные с подводных датчиков. На компьютере использовалась\x0Aоперационная система CP/M, а программа обработки была написана на Паскале. Еще\x0Aв интернете есть страничка владельца одного из компьютеров. Владелец написал\x0Aнесколько полезных программ для этого компьютера. В середине 1986 года была\x0Aвыпущена следующая версия компьютера 240.2 с аппаратной вертикальной и\x0Aгоризонтальной прокруткой экрана.\x0A\x0AПо характеристикам можно сказать, что этот компьютер удобен для работы в\x0Aоперационной системе CP/M. Процессор работает почти на максимальной частоте\x0A2.4 МГц. Разрешение экрана 256x256 или 512x256 пикселей позволяет вывести 32\x0Aили 64 символа по ширине экрана. И еще есть запас. Можно вывести 80 символов\x0Aпо ширине применив шрифт 6x8 пикселей. Есть две видеостраницы. В режиме 256x256\x0Aотображается 4 цвета из палитры в 8 цветов. В компьютере 8 фиксированных палитр.\x0AАппаратная вертикальная прокрутка позволяет работать в консоли шустро. 128\x0Aкилобайт оперативной памяти позволяет организовать RAM-диск, так как\x0Aоперационная система CP/M и её программы больше 64 килобайт использовать не\x0Aможет.\x0A\x0AЯ сохранил фотографии с сайта http://azmaster.narod.ru/Ocean-240. Я решил\x0Aпродублировать информацию об этом компьютере, что бы она не исчезла.\x0A\x0A",},
"russian_programming.txt":{},
"software":{
dir:1,
items:{
"software":{
dir:1,
items:{
"format.asm":{
name: "Формат Дисков",

},
"jack":{
dir:1,
items:{
"jack.com":{
name: "Игра",
},
},
},
"basic":{
dir:1,
items:{
"mb.com":{
name: "Бейсик",
},
"antix.bas":{
name: "так, фигня какая то (c) AZMaster",

},
"plot.bas":{
name: "Ещё одна демка",
},
"readme.txt":{
name: "Как пользоваться Бейсиком",
},
"rd.bas":{
name: "Чёта хотел изобразить, уже и не помню чего (c) AZMaster",

},
"gonki.bas":{
name: "Тараканьи бега.",

},
"demo.bas":{
name: "Демка",
},
"muza.bas":{
name: "Что то типа синтезатора",
},
},
},
"ocpars":{
dir:1,
items:{
"ocpars.exe":{
name: "Программа для Windows. Преобразование образов дискет в удобоваримый вид \"Океана\", 2-стороны в одну.",
},
},
},
"znakogenerator":{
dir:1,
items:{
"cgarus.tab":{
name: "Шрифт",
},
"zng.com":{
name: "Редактор шрифтов \"Знако Генератор\"",
},
"zng.mac":{
name: "Редактор шрифтов \"Знако Генератор\", исходные коды",
},
"cga.tab":{
name: "Шрифт",
},
},
},
"bios.txt":{
name: "Настройка цветов CP/M и Монитора",
},
"res":{
dir:1,
items:{
"res.com":{
name: "Дизассемблер",
},
},
},
"type":{
dir:1,
items:{
"type.com":{
name: "Просмотрщик текстов",
},
},
},
"catchum":{
dir:1,
items:{
"catchum.dat":{
name: "Должен быть на одном диске с CATCHUM.COM",
},
"catchum.com":{
name: "Прикольная игрушка, типа PacMan",
},
},
},
"power":{
dir:1,
items:{
"pw.com":{
name: "Дополнение к операционной системе CP/M",
},
},
},
"rs232.asm":{
name: "Программа приёма и передачи данных по COM порту.",

},
"assembler":{
dir:1,
items:{
"l80.com":{
name: "L80 (Linker)",
},
"m80.com":{
name: "M80 (Macro Assembler)",
},
},
},
"turbo_monitor":{
dir:1,
items:{
"tm.mac":{
name: "Турбо Монитор, исходные коды",
},
"tm.com":{
name: "Турбо Монитор",
},
},
},
"tetris":{
dir:1,
items:{
"tet.com":{
name: "Игра",
},
},
},
"wordmaster":{
dir:1,
items:{
"wm.com":{
name: "Текстовый редактор WORDMASTER",
},
},
},
},
},
"fdd":{
dir:1,
items:{
"disketa.okd":{},
"disk1.okd":{},
"oce1_2.okd":{},
"oce2_2.okd":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"Ocean_240_RT4_FDC.txt":{},
"Ocean_240_ROM_C000_СPM_without_floppy.bin":{},
"Ocean_240_ROM_E000_Monitor.bin":{},
"Ocean_240_ROM_E000_Turbo_monitor.bin":{},
"Ocean_240_RT4_VC.txt":{},
"Ocean_240_ROM_C000_CPM_with_floppy.bin":{},
"Ocean_240_ROM_E000_Tests.bin":{},
},
},
"doc":{
dir:1,
items:{
"Ocean_240_PCB_0.png":{},
"Ocean_240_PCB_2.png":{},
"Ocean_240_Circuit.jpg":{},
"Ocean_240_PCB_1.png":{},
"Ocean_240_Articles_from_the_MPSS_magazine.djvu":{},
"Ocean_240_PCB_4.png":{},
"Ocean_240_PCB_not_tested.lay6":{},
"Ocean_240_PCB_3.png":{},
"Ocean_240_PCB_not_tested.png":{},
},
},
},
},
"Crystall_2":{
dir:1,
items:{
"english.txt":{
name:"Crystall 2",
params:"Year\x091987",
body:"TODO",},
"photo":{
dir:1,
items:{
},
},
"russian.txt":{
name:"Кристалл 2",
params:"Год\x091987",
body:"TODO",},
"software":{
dir:1,
items:{
"basic80.rkr":{},
"volcano.rkr":{},
"circus.rkr":{},
"tetris4.rkr":{},
"rendzu.rkr":{},
"rikoshet.rkr":{},
"reversi2.rkr":{},
"krestno.rkr":{},
"tochki.rkr":{},
"sp_games.rkr":{},
"tetris1.rkr":{},
"chess2.rkr":{},
"kalah.rkr":{},
"tapper.gam":{},
},
},
"firmware":{
dir:1,
items:{
"Kristall-2-5.bin":{},
"Kristall-2-1.bin":{},
"d30.bin":{},
"Kristall-2-5.asm":{},
"Kristall-2-3.bin":{},
"d31.bin":{},
"Kristall-2-3.asm":{},
"Kristall-2-4.bin":{},
"Kristall-2-1.asm":{},
"Kristall-2-4.asm":{},
},
},
"doc":{
dir:1,
items:{
"Crystall_2_Description_and_circuits.djvu":{},
"Crystall_2_Circuits.png":{},
},
},
},
},
"Bashkiria-2M":{
dir:1,
items:{
"english.txt":{
name:"Bashkiria",
params:"Year\x091989\x0ARAM\x09128 kB\x0AROM\x098 kB\x0ACPU\x09i8080 2 MHz\x0AGraph\x09384x256x16, palette 64 colors",
body:"Bashkiria-2M was developed at the Bashkir Research and Production Association\x0Anamed of S. M. Kirov, in the Republic of Bashkiria, from which the computer got\x0Aits name. The computer is rare and there are very few native programs for it,\x0Abut the CP/M operating system partially compensates for this. This computer\x0Asolves two major problems for running CP/M programms. Programs do not have\x0Aenough RAM and the screen scrolls up for a long time. The computer has 128 KB of\x0ARAM, and the video has vertical hardware scrolling. It allows you to use CP/M to\x0Athe maximum.\x0A\x0A\x22To the maximum\x22 with the proviso that the screen resolution would be a little\x0Amore. The screen resolution of Bashkiria 2M is 384x256 pixels. This is the\x0Aoptimal resolution for color TVs or monitors of the time. The graininess and\x0Afocusing of televisions (CRT) allows you to see individual pixels. In addition,\x0Athe proportions of a pixel at this resolution are close to a square. But working\x0Ain CP/M, that is, working with text at 512 or 640 pixels, is more convenient.\x0AIn these modes, you can draw 80 characters per line in a clear font.\x0A\x0AThe computer can display 4 colors from a palette of 64 colors. The computer has\x0Aa built-in LAN adapter and a printer port.\x0A\x0AThe computer was produced in two versions: student and teacher. The student\x0Acomputer came with an external ROM cartridge. Usually the BASIC programming\x0Alanguage was stored there. The teacher's computer was supplied with an external\x0Afloppy drive controller. It is impossible to connect the floppy drive controller\x0Ato the student's computer, since not all the necessary signals were output to\x0Athe student's computer expansion connector.\x0A",},
"utils":{
dir:1,
items:{
"emumalor_e580":{
dir:1,
items:{
"bios.dat":{},
"e580.exe":{},
"disk1.cpm":{},
"e580.txt":{},
"disk2.cpm":{},
},
},
"far_plugin":{
dir:1,
items:{
"readme.txt":{},
"img.exe":{},
},
},
"emulator_e580w":{
dir:1,
items:{
"e580w.txt":{},
"bios.dat":{},
"2m.exe":{},
},
},
},
},
"russian.programming.html":{},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"17.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"20.jpg":{},
"19.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"18.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Башкирия 2М",
params:"Год\x091989\x0AОЗУ\x09128 кБ\x0AПЗУ\x098 кБ\x0AПроц\x09К580ВМ80А 2 MГц\x0AГрафика\x09384x256x4, палитра 64 цв",
body:"Компьютер разработан в \x22Башкирском научно-производственном объединении им. С. М.\x0AКирова\x22, что в республике Башкирия, от чего компьютер и получил такое название.\x0AКомпьютер редкий и родных программ для него очень мало, но это частично\x0Aкомпенсирует операционная система CP/M. В этом компьютере решены две главные\x0Aпроблемы для работы в CP/M. Программам недостаточно оперативной памяти и экран\x0Aдолго прокручивается вверх. В компьютере установлено 128 Кб оперативной памяти,\x0Aа видеоадаптер имеет вертикальную аппаратную прокрутку. Это позволяет\x0Aиспользовать CP/M на максимум.\x0A\x0A\x22На максимум\x22 с оговоркой, что разрешение экрана бы чуть-чуть побольше. \x0AРазрешение экрана Башкирии 2М составляет 384x256 точки. Это является оптимальным\x0Aразрешением для цветных телевизоров или мониторов того времени. Зернистость и\x0Aфокусировка телевизоров (кинескопов) еще позволяет разглядеть отдельные пиксели.\x0AК тому же пропорции пикселя при таком разрешении близки к квадрату. Но работать\x0Aв CP/M, то есть работать с текстом в разрешении 512 или 640 точек удобнее. В\x0Aэтих режимах можно нарисовать 80 символов в строке понятным шрифтом.\x0A\x0AКомпьютер может отображать 4 цвета из палитры в 64 цвета. В компьютер встроен\x0Aадаптер локальной сети и порт принтера.\x0A\x0AКомпьютер выпускался в двух вариантах: ученический и учительский. Ученический\x0Aкомпьютер поставлялся с внешним картриджем ПЗУ. Обычно туда был записан язык\x0Aпрограммирования Бейсик. Учительский компьютер поставлялся с внешним\x0Aконтроллером дисковода, причем подключить контроллер дисковода к ученическому\x0Aкомпьютеру нельзя, так как не все необходимые сигналы были выведены на разъем\x0Aученического компьютера.\x0A\x0A",},
"software":{
dir:1,
items:{
"ae580":{
dir:1,
items:{
"e580.com":{},
"bios.dat":{},
"ae580.txt":{},
},
},
"floppy":{
dir:1,
items:{
"disk3.cpm":{},
"newgames.cpm":{},
"disk1.cpm":{},
"disk3.txt":{},
"newgames.txt":{},
"disk2.cpm":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"bios1.rom":{},
"bios2.rom":{},
"b1bios.rom":{},
"b1basic.rom":{},
"ramdos.sys":{},
},
},
},
synced:{
"Bashkiria-2M/russian.programming.html": "Башкирия-2М. Программирование.",
},
},
"Argo_FV-6511":{
dir:1,
items:{
"english.txt":{
name:"Argo FV-6511",
params:"Year\x09≤1992\x0ARAM\x09128 kB\x0AROM\x092 kB\x0ACPU\x09Z80 3.5 MHz\x0AText\x0980x25x16\x0AGraph\x09640x200x8, 320x200x16, 256x192x15\x0AGroup\x09ZX Spectrum",
body:"This is a very strange computer. It works with the tape as with a floppy disk.\x0AThe tape has a CP/M file system, sectors, a list of files in the first sectors,\x0Aand the files can be fragmented. The computer is able to detect sectors with\x0Adamaged tape and dont use them. Argo uses the Z80 processor and this computer\x0Acan run programs for the \x22ZX Spectrum 48\x22 computer. Argo has 128 kilobytes of\x0ARAM, but it can't run programs for the ZX Spectrum 128. Argo's video adapter\x0Ais built on the i8275 chip, on the same chip that built the Radio 86RK computer.\x0AAgro has a hardware text video mode 80x25x16 with variable character generator.\x0AArgo has 640x200x8, 320x200x16 graphics video modes. And it's all about the same\x0Acomputer.\x0A\x0AThe ROM size of this computer is only 2 kilobytes. The ROM contains only the\x0Abootloader from the tape. Every time the power is turned on, the TCP/M operating\x0Asystem boots from the tape. TCP/M is CP/M with a tape recorder driver instead\x0Aof a floppy drive. T is Tape.\x0A\x0AFor this computer, a special tape recorder is needed, in which rewind, playback\x0Aand recording can be activated by an electrical signal. The authors of the\x0Acomputer advise the Mayak-231 tape recorder and its later modifications. I\x0Abought an Orel-101-1 tape recorder for this computer.\x0A\x0AThe first time you use a cassette, you must format it. During the formatting of\x0Athe cassette, the computer writes marks on the cassette containing sector\x0Anumbers. When working with a tape, the operating system uses these marks to\x0Adetermine where and which sector begins. In what direction should the cassette\x0Abe rewound in order to find the desired sector.\x0A\x0ATape recorder control is not unique to this computer. You can connect the tape\x0Arecorder to any computer with a parallel port. Of interest here is the tape\x0Arecorder driver for the TCP/M operating system. It controls the tape recorder.\x0A\x0AThe computer's ROM does not contain the computer firmware \x22ZX Spectrum 48\x22,\x0Awhich is needed by ZX programs. The ROM does not have a program for switching\x0Athe computer to the compatibility mode with the computer \x22ZX Spectrum 48\x22. This\x0Aprogram and firmware must be loaded from the cassette every time before starting\x0Aany ZX Spectrum game.\x0A\x0AHow did the authors manage to make the video adapter based on the i8275 chip\x0Acompatible with the ZX Spectrum? They placed the character generator in RAM. The\x0Acharacter generator format is the same as the ZX Spectrum screen format and it\x0Ais located at the same address as the screen. If the video memory is filled with\x0Acertain character codes, then the character generator becomes the ZX Spectrum\x0Ascreen.\x0A\x0AThe keyboard is locked while the ZX program is loading and remains locked when\x0Afinished. To unlock the keyboard, you must press F10. The F9 key resets the\x0Acomputer without exiting the ZX Spectrum mode. The F8 key returns the computer\x0Ato TCP/M. This suggests that the ZX keyboard is being emulated.\x0A\x0AThe computer has an excellent keyboard, high-quality printed circuit board and\x0Aa good metal case that does not give the impression of a brick. Personally, I\x0Afell in love with metal cases after such computers.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Арго ФВ-6511",
params:"Год\x09≤1992\x0AОЗУ\x09128 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09Z80 3.5 MГц\x0AТекст\x0980x25x16\x0AГрафика\x09640x200x8, 320x200x16, 256x192x15\x0AГруппа\x09ZX Spectrum",
body:"Это очень странный компьютер. Он работает с кассетой как с дискетой. На кассете\x0Aфайловая система CP/M, сектора, список файлов в первых секторах, а сами файлы\x0Aмогут фрагментироваться. Компьютер умеет определять сектора с поврежденной\x0Aлентой и не использовать их. В Арго используется процессор Z80 и этот компьютер\x0Aумеет выполнять программы для компьютера \x22ZX Spectrum 48\x22. У него 128 килобайт\x0Aоперативной памяти, но программы для ZX Spectrum 128 он выполнять не умеет.\x0AВидеоадаптер у Арго построен на микросхеме КР580ВГ75, на той же микросхеме, что\x0Aпостроен компьютер Радио 86РК. У Агро есть аппаратный текстовый видеорежим\x0A80x25x16 с изменяемым знакогенератором. У Арго есть графические видеорежимы\x0A640x200x8, 320x200x16. И это всё об одном и том же компьютере.\x0A\x0AОбъем ПЗУ этого компьютера всего 2 килобайта. ПЗУ содержит только загрузчик с\x0Aмагнитофона. Каждый раз после включения питания операционная система TCP/M\x0Aзагружается с кассеты. TCP/M это CP/M с драйвером магнитофона, вместо дисковода.\x0AT это Tape.\x0A\x0AДля этого компьютера нужен особый магнитофон, у которого перемотку,\x0Aвоспроизведение и запись можно включать электрическим сигналом. Авторы\x0Aкомпьютера советуют магнитофон Маяк-231 и его более поздние модификации. Я же\x0Aкупил для этого компьютера магинитофон Орель-101-1.\x0A\x0AПри первом использовании кассеты её необходимо отформатировать. Во время\x0Aформатирования кассеты компьютер записывает на кассету метки содержащие номера\x0Aсекторов. При работе с кассетой операционная система использует эти метки, что\x0Aбы определять, где и какой сектор начинается. В каком направлении необходимо\x0Aперематывать кассету, что бы найти нужный сектор.\x0A\x0AУправление магнитофоном не является уникальной возможностью этого компьютера.\x0AПодключить магнитофон можно к любому компьютеру имеющему параллельный порт.\x0AИнтерес тут представляет драйвер магнитофона для операционной системы TCP/M.\x0AИменно он управляет магнитофоном.\x0A\x0AВ ПЗУ компьютера нет прошивки компьютера \x22ZX Spectrum 48\x22, которая нужна\x0AZX-программам. В ПЗУ нет программы перехода компьютера в режим совместимости с\x0Aкомпьютером \x22ZX Spectrum 48\x22. Эту программу и прошивку нужно загружать с\x0Aкассеты каждый раз перед запуском какой-нибудь игры.\x0A\x0AКак у авторов получилось сделать видеоадаптер на микросхеме КР580ВГ75\x0Aсовместимым с ZX Spectrum? Они разместили знакогенератор в оперативной памяти.\x0AФормат знакогенератора такой же, как формат экрана Спектрума и расположен он по\x0Aтому же адресу, что и экран. Если определенными кодами символов заполнить\x0Aвидеопамять, то знакогенератор становится экраном ZX Spectrum.\x0A\x0AВо время загрузки ZX-программы клавиатура блокируется и остается заблокированной\x0Aпосле окончания. Что бы разблокировать клавиатуру, необходимо нажать F10.\x0AКлавиша F9 выполняет сброс компьютера без выхода из режима ZX Spectrum. Клавиша\x0AF8 возвращает компьютер в TCP/M. Это наводит на мысли, что ZX-клавиатура\x0Aэмулируется.\x0A\x0AУ компьютера отличная клавиатура, качественная печатная плата и хороший\x0Aметаллический корпус не создающий впечатление кирпича. Лично я полюбил\x0Aметаллические корпуса после таких компьютеров.\x0A\x0A",},
"software":{
dir:1,
items:{
"Argo_FV-6511_Tape_image.bt":{},
"Argo_FV-6511_Tape_image.log":{},
},
},
"firmware":{
dir:1,
items:{
"Argo_FV-6511_ROM.bin":{},
},
},
"doc":{
dir:1,
items:{
"Argo_FV-6511_Operators_manual_1.djvu":{},
"Argo_FV-6511_Operators_manual_2.djvu":{},
"Argo_FV-6511_User_manual.djvu":{},
},
},
},
},
"Electronica_MS_6313_Matrix_printer":{
dir:1,
items:{
"english.txt":{
name:"Electronica MS6313",
params:"Year\x09≤1991",
body:"TODO",},
"photo":{
dir:1,
items:{
"3.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"Электроника МС6313",
params:"Год\x09≤1991",
body:"TODO",},
"doc":{
dir:1,
items:{
"Electronica_MS_6313_Codes.djvu":{},
"Electronica_MS_6313_User_manual.djvu":{},
"Electronica_MS_6313_User_manual_addition.djvu":{},
},
},
},
},
"Krista":{
dir:1,
items:{
"english.txt":{
name:"Krista",
params:"Year\x09≤1989\x0ARAM\x0932 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AGraph\x09128x62x2\x0AText\x0964x25x2\x0ASound\x09i8253\x0AGroup\x09Radio 86RK",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"17.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Криста",
params:"Год\x09≤1989\x0AОЗУ\x0932 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AГрафика\x09128x62x2\x0AТекст\x0964x25x2\x0AЗвук\x09К580ВИ53\x0AГруппа\x09Радио 06РК",
body:"Криста это единственный советский домашний компьютер со световым пером.\x0A\x0AПредставьте, что вы играете на своём мобильном телефоне или планшете не пальцем,\x0Aа стилусом. Если вы не знаете, что такое стилус, то представьте, что вы\x0Aнажимаете на экран палочкой. В современных устройствах именно экран реагирует\x0Aна ваше нажатие. А много лет назад экраны были бесчувственными и на нажатие\x0Aреагировал сам стилус или световое перо.\x0A\x0AВнутри светового пера установлен фотодатчик, который реагирует на свет исходящий\x0Aот экрана. Экран ЭЛТ монитора не светится постоянно, а каждая точка на экране\x0Aмонитора вспыхивает на мгновение. Точка за точкой изображение передается из\x0Aкомпьютера на экран монитора. На экране вспыхивают пиксель за пикселем.\x0AПиксель 1, 2, 3, 4, 5... Если над пикселем 5 находилось световое перо, то свет\x0Aпопадает на фотодатчик и фотодатчик посылает электрический импульс в компьютер.\x0AТаким образом компьютер знает, что световое перо находится над 5-ым пикселем.\x0A\x0AЧто бы световое перо работало, монитор должен мерцать, а также не должно быть\x0Aзадержки между передачей очередной точки из компьютера и появлением этой точки\x0Aна экране. На такое способен только ЭЛТ монитор. Все современные мониторы вносят\x0Aзадержку и не мерцают, поэтому световое перо на них работать не будет.\x0A\x0AКомпьютер \x22Криста\x22 это компьютер \x22Радио 86РК\x22. Это компьютер с текстовым\x0Aвидеоадаптером, без графики, без цвета. Положение светового пера определяется с\x0Aточностью до символа. Максимальное разрешение экрана 64x51 символ. То есть\x0Aразрешение картинку, которую вы нарисуете, будет всего 64x51. Сам компьютер\x0Aможет с помощью псевдографических символов можно выводить графику 128x62, но\x0Aопределять положение светового пера с такой точностью он не может.\x0A\x0AНесмотря на это, компьютер \x22Криста\x22 это уникальный и интересный компьютер.\x0AТолько у Кристы, среди советских домашних компьютеров, есть световое перо. А\x0Aеще у Кристы надежная герконовая клавиатура.\x0A\x0AКомпьютер \x22Криста\x22 совместим с Микрошей. Совместим по формату записи на\x0Aмагнитную ленту, по знакогенератору, по звуковому генератору на основе\x0AКР580ВИ53. Именно с компьютером \x22Радио 86РК\x22 компьютер \x22Криста\x22 совместим плохо.\x0AБольшинство игровых программ от Радио 86РК не запустится на этом компьютере, так\x0Aкак адреса всех устройств компьютера были изменены. Совместимость обеспечивается\x0Aтолько на уровне точек входа в ПЗУ, адреса и формата видеопамяти.\x0A",},
},
},
"ZX_Gamma":{
dir:1,
items:{
"english.txt":{
name:"Gamma",
params:"Year\x09≤1991\x0ARAM\x0948 kB\x0AROM\x0916 kB\x0ACPU\x09Z80 3.5 MHz\x0AGraph\x09256x192x15\x0AIn ROM\x09Basic\x0AGroup\x09ZX Spectrum 48",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"bug.jpg":{},
"russian.txt":{
name:"Гамма",
params:"Год\x09≤1991\x0AОЗУ\x0948 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09Z80 3.5 Мгц\x0AГрафика\x09256x192x15\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09ZX Spectrum 48",
body:"\x22Гамма\x22, \x22Комплекс игровой Гамма\x22 или \x22Процессор\x22 это советский ZX Spectrum 48\x0Aсовместимый компьютер. Он производился на заводе \x22Процессор\x22 в г. Воронеж. На\x0Aмоем компьютере указана дата производства 1991 год.\x0A\x0AПЗУ компьютера отличается от оригинального ZX Spectrum 48. В знакогенераторе\x0Aстрочные английские буквы заменены заглавными русскими. Переведены на русский\x0Aязык сообщения Sinclair BASIC. Из-за этого некотоыре программы, игры выглядят\x0Aочень странно.\x0A\x0AНа задней стенке корпуса компьютера располагаются шесть DIN-разъёмов для\x0Aподключения: телевизора, монитора, джойстика, внешнего блока питания, входа с\x0Aмагнитофона и выход на магнитофон. Внутри корпуса находятся две платы:\x0Aклавиатурная (53ПК16-2ред2) и системная (Б28). Последних существовало как\x0Aминимум три редакции.\x0A\x0AПодобными простенькими, некачественными и дешевыми компьютерами в начале 90-х\x0Aбыла завалена вся страна. В народа не было денег на более соверменные\x0Aкомпьютеры.\x0A\x0A",},
"doc":{
dir:1,
items:{
"MS9016_Power_unit_circuits.jpg":{},
"ZX_Spectrum_ROM_disassembly.txt":{},
},
},
},
},
"Kroha":{
dir:1,
items:{
"english.txt":{
name:"Kroha",
params:"Year\x091990\x0ARAM\x092 kB\x0ACPU\x09i8080 2 MHz\x0AText\x0948x25x2",
body:"\x22Kroha\x22 is a computer with a joystick instead of a keyboard. Programs for this\x0Acomputer are stored in removable ROM.\x0A\x0AThe circuit of this computer is similar to the \x22Specialist\x22 computer. The main\x0Adifference from the computer \x22Specialist\x22 is that in \x22Kroha\x22 is implemented a\x0Atext video adapter, not a graphic one. Screen size 48x32 characters. All\x0Acharacters are black and white. The character generator contains 256 characters.\x0AThe ROM of the character generator is installed on a replaceable PCB, a\x0Acartridge. The use of two removable ROMs, for the program and for graphics\x0A(characters), is very similar to the Nintendo Entertainment System.\x0A\x0AOnly one cartridge was produced for this computer. It contained games: Wall,\x0ATetris, Caterpillar, Balls, Air Defense.\x0A\x0AIn Kroha, the video frame sync is connected to a processor interrupt. A static\x0Amemory is used, the information in which is stored after the power is turned off\x0Athanks to a galvanic cell. There are only 2048 bytes of RAM, of which 1536 bytes\x0Aare used by video, and only 512 bytes remain for the programmer.\x0A\x0AFrom the author of the computer, Caro:\x0A\x0AThere was a period in my life when I worked at SKB Kontur. That's when I\x0Adeveloped this set-up box \x22Kroha\x22. We then sat on the territory of the\x0ATechnosvyaz plant, which was supposed to assemble these devices for conversion\x0A(law of transition to a market economy). We made about 200 pieces. It did not\x0Aget into the stores. It went to the workers of the plant and the SKB Kontur.\x0AThe main problem of course - the lack of games.\x0A\x0AThe photos were sent to me by Dmitry [Newbilius] Moiseev. I don't have this\x0Acomputer.\x0A\x0A",},
"photo":{
dir:1,
items:{
"31.png":{},
"34.png":{},
"30.png":{},
"16.jpg":{},
"9.jpg":{},
"21.jpg":{},
"7.jpg":{},
"17.jpg":{},
"36.png":{},
"11.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"20.jpg":{},
"19.jpg":{},
"35.png":{},
"12.jpg":{},
"1.jpg":{},
"33.png":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"18.jpg":{},
"32.png":{},
},
},
"emulation_in_proteus":{
dir:1,
items:{
"display.dll":{},
"readme.txt":{},
"x80.dll":{},
"kroxa1.dsn":{},
"game1.bin":{},
"kroha_font.bin":{},
"kroxa1.pwi":{},
},
},
"russian.txt":{
name:"Кроха",
params:"Год\x091990\x0AОЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 2 MГц\x0AТекст\x0948x32x2",
body:"\x22Кроха\x22 это компьютер с джойстиком вместо клавиатуры. Программы для этого\x0Aкомпьютера хранятся на сменных ПЗУ. Такие компьютеры часто называют приставкой.\x0A\x0AСхема компьютера похожа на компьютер \x22Специалист\x22. Главное отличие от компьютера\x0A\x22Специалист\x22 в том, что в \x22Крохе\x22 реализовали текстовый видеоадаптер, а не\x0Aграфический. Размер экрана 48x32 символов. Все символы черно-белые.\x0AЗнакогенератор содержит 256 символов. ПЗУ знакогенератора установлено на сменной\x0Aпечатной плате, картридже. Использование двух сменных ПЗУ, для программы и для\x0Aграфики (символов) очень напоминает приставку Денди (Nintendo Entertainment\x0ASystem).\x0A\x0AДля компьютера был выпущен всего один картридж. Он содержал игры: Стена, Тетрис,\x0AГусеница, Шарики, ПВО.\x0A\x0AВ Крохе кадровый синхроимпульс видео подключен к прерыванию процессора.\x0AИспользована статическая память, информация в которой сохраняется после\x0Aвыключения питания благодаря гальваническому элементу. Оперативной памяти\x0Aвсего 2048 байт, из которых 1536 байт используется видео, а программисту\x0Aостается лишь 512 байт.\x0A\x0AОт автора компьютера, caro:\x0A\x0AБыл в моей жизни такой период, когда я работал в СКБ \x22Контур\x22. Вот тогда я и\x0Aразработал эту приставочку под названием \x22Кроха\x22. Мы тогда сидели на территории\x0Aзавода \x22Техносвязь\x22, который и должен был по конверсии собирать эти машинки. Но\x0Aсделали их порядка 200 штук и в магазины они не попали - разошлись по работникам\x0Aзавода и СКБ \x22Контур\x22. Основная проблема конечно - отсутствие игр.\x0A\x0A",},
"firmware":{
dir:1,
items:{
"bios.bin":{},
"font.bin":{},
"font.txt":{},
},
},
"doc":{
dir:1,
items:{
"Kroha_Circuit_(my_not_tested).png":{},
"Kroha_Changen_1.jpg":{},
"Kroha_PCB.png":{},
"Kroha_Circuit.png":{},
"Kroha_Chargen_2.png":{},
},
},
},
},
"Radio-86RK":{
dir:1,
items:{
"english.txt":{
name:"Radio-86RK",
params:"Year\x091986\x0ARAM\x0916 - 32 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AText\x0964x25x2\x0AGraph\x09128x62x2\x0AGroup\x09Radio 86RK",
body:"The Radio 86RK computer appeared in the form of diagrams in Radio magazine in\x0A1986 (No. 4-6). It was a very simple computer: 9 large chips, 11 small ones, and\x0A8 memory chips. Some chips could not be installed.\x0A\x0AThe computer is simple, because the video is assembled on the i8275 and i8257\x0Achips. Those chips can show color video mode, but for the sake of simplicity,\x0Athis feature was not used in Radio 86RK.\x0A\x0AThe i8275 chip can only display the text mode using only 128 characters. The\x0Acharacter generator of Radio 86RK contains english and russian letters, but the\x0Asmall character generator was only enough for capital letters. There are no\x0Alowercase letters. Also, 16 pseudo-graphic symbols were placed in the character\x0Agenerator, dividing the familiarity in half in width and height. Thanks to them,\x0Ait is possible to implement pseudo-graphic mode 128x62.\x0A\x0AThe video adapter slowed down the processor unpredictably while reading the RAM,\x0Aso the program execution time could not be calculated. And this is necessary for\x0Athe correct operation of the program for loading and saving to a tape recorder.\x0ATherefore, during boot from the tape recorder, the video controller turned off\x0Aand the user see a black screen.\x0A\x0AA little later, many factories decided to produce this computer. Moreover, they\x0Awere released in different cases with different keyboards and under different\x0Anames: Radio 86RK, Krista, Partner 01.01, Microsha, Electronica KR, Spectr 001,\x0AMicko 88, Geofit, Elix-89, Quantor BK, Apogey BK01, Alfa BK ... Some computers\x0Awere significantly expanded, for example, 56 kB of RAM, a three-channel sound\x0Agenerator were installed in Apogey BK01C, color was added and a 192×128\x0Apseudographic mode was added (against 128×62 for the original computer). Most of\x0Athe 86RK computers produced were not compatible with each other.\x0A",},
"myextensions":{
dir:1,
items:{
"sd_controller":{
dir:1,
items:{
"files_on_sdcard":{
dir:1,
items:{
"boot":{
dir:1,
items:{
"boot.rk":{},
"sdbios.rk":{},
"shell.rk":{},
},
},
},
},
"sources":{
dir:1,
items:{
"controller":{
dir:1,
items:{
"proto.hci":{},
"86rksd.cbi":{},
"sd.hci":{},
"fs.hci":{},
"common.hci":{},
"86rksd.txt":{},
"sd.cci":{},
"86rksd.map":{},
"proto.h":{},
"86rksd.cof":{},
"fs.c":{},
"86rksd.cci":{},
"sd.h":{},
"spi.h":{},
"sd.c":{},
"proto.cci":{},
"linker":{
dir:1,
items:{
"sd.a":{},
"fs.a":{},
"proto.a":{},
"sd.o":{},
"proto.o":{},
"string.ol":{},
"string.al":{},
"86rksd.a":{},
"86rksd.o":{},
"fs.o":{},
},
},
"exe":{
dir:1,
items:{
"86rksd.rom":{},
"86rksd.hex":{},
},
},
"fs.h":{},
"86rksd.c":{},
"_clean.bat":{},
"list":{
dir:1,
items:{
"86rksd.lst":{},
"86rksd.asm":{},
},
},
"spi.c":{},
"proto.c":{},
"86rksd.fct":{},
"common.h":{},
"86rksd.prj":{},
"fs.cci":{},
},
},
"c8080":{
dir:1,
items:{
"c8080.exe":{},
"tasm.exe":{},
"tasm85.tab":{},
"include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"32":{
dir:1,
items:{
"sub32_32.c":{},
"set32.c":{},
"add32_16.c":{},
"cmp32_32.c":{},
"add32_32.c":{},
"sub32_16.c":{},
"div32_16.c":{},
},
},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"radio86rk":{
dir:1,
items:{
"print2.c":{},
"getmemtop.c":{},
"radio8screen0B.c":{},
"charAddr.c":{},
"directCursor.c":{},
"printn.c":{},
"radio8screenvars.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print2m.c":{},
"print.c":{},
"printm.c":{},
"puttape.c":{},
"radio8screen1B.c":{},
"radio8screen2B.c":{},
"radio8screen2A.c":{},
"printcn.c":{},
"bios.h":{},
"kbhit.c":{},
"print2n.c":{},
"putch.c":{},
"radio8screen0.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"radio8screen1.c":{},
"radio8screen2C.c":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"orion":{
dir:1,
items:{
"getmemtop.c":{},
"clrscr.c":{},
"puthex.c":{},
"puttape.c":{},
"bios.h":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
},
},
"op_cmp16":{},
"spec":{
dir:1,
items:{
"setcolor.c":{},
"clrscr.c":{},
"bios.h":{},
"setcolorautodisable.c":{},
"key.h":{},
"putch.c":{},
"color.h":{},
},
},
"strchr.c":{},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"fs":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"fs_read.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"fs_seek.c":{},
"fs_swap.c":{},
"fs_exec.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
},
},
"op_mul":{},
"stdlib.h":{},
"32.h":{},
"n":{
dir:1,
items:{
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_ig":{},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"print2.c":{},
"getmemtop.c":{},
"charAddr.c":{},
"directCursor.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print2m.c":{},
"print.c":{},
"printm.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"kbhit.c":{},
"print2n.c":{},
"putch.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"sound.h":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"op_shr":{},
},
},
},
},
"circuit":{
dir:1,
items:{
"bottom1.bmp":{},
"86rksd.edf":{},
"86rksd.lyt":{},
"86rksd.do":{},
"doc1.docx":{},
"86rksd.dsn":{},
"86rksd_clear.lyt":{},
"Last Loaded 86rksd.DBK":{},
"top1.bmp":{},
"86rksd.sts":{},
},
},
"boot_rk":{
dir:1,
items:{
"boot.lst":{},
"tasm.exe":{},
"errors.txt":{},
"boot.rk":{},
"-compile.bat":{},
"tasm85.tab":{},
"boot.asm":{},
},
},
"sdbios_rk":{
dir:1,
items:{
"sdbios.lst":{},
"tasm.exe":{},
"sdbios.bin":{},
"-make.bat":{},
"-make-rka.js":{},
"tbl.bin":{},
"sdbios.rk":{},
"tasm85.tab":{},
"sdbios.asm":{},
},
},
"shell_rk":{
dir:1,
items:{
"shell.h":{},
"cmd_delete.c":{},
"cmd_new.c":{},
"stdlib8080.inc":{},
"errors.txt":{},
"readme.txt":{},
"shell.lst":{},
"fs.c":{},
"cmd_sel.c":{},
"-make-rka.js":{},
"tbl.bin":{},
"interface.h":{},
"fs.h":{},
"-compile.bat":{},
"interface.c":{},
"shell.bin":{},
"shell.rk":{},
"cmd_copymove.c":{},
"shell.c":{},
"cmd_freespace.c":{},
"tasm85.tab":{},
"shell.asm":{},
},
},
},
},
"circuit.png":{},
"shell.jpg":{},
},
},
},
},
"tools":{
dir:1,
items:{
"rk2wav2":{
dir:1,
items:{
"bin2wav.ubuntu64":{},
"bin2wav.exe":{},
"bin2wav.c":{},
},
},
"rk2wav":{
dir:1,
items:{
"rk2wav.exe":{},
"rk2wav.ubuntu64":{},
"rk2wav.c":{},
},
},
},
},
"photo":{
dir:1,
items:{
"0.jpg":{},
},
},
"russian.txt":{
name:"Радио-86РК",
params:"Год\x091986\x0AОЗУ\x0916 - 32 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AТекст\x0964x25x2\x0AГрафика\x09128x62x2\x0AГруппа\x09Радио 86РК",
body:"Компьютер Радио-86РК появился в виде схем в журнале Радио в 1986 году (№ 4-6). \x0AЭто был очень простой компьютер: 9 больших микросхем, 11 маленьких и 8 микросхем\x0Aпамяти. Некоторые микросхемы можно было не ставить.\x0A\x0AКомпьютер простой, потому что видео собрано на основе микросхем КР580ВГ75\x0A(аналог Intel 8275) и КР580ВТ57 (аналог Intel 8257). Эти же микросхемы могут\x0Aпоказывать цветной видеорежим, но ради простоты в Радио 86РК эта возможность\x0Aне использовалась.\x0A\x0AМикросхема КР580ВГ75 могла отображать только текстовый режим экрана использующий\x0Aвсего 128 символов. Знакогенератор Радио 86РК содержит английские и русские\x0Aбуквы, но маленького знакогенератора хватило только на заглавные буквы. Строчных\x0Aбукв нет. Так же в знакогенератор поместили 16 псевдографических символа делящих\x0Aзнакоместо пополам по ширине и высоте. Благодаря им можно реализовать\x0Aпсевдографический режим 128x62.\x0A\x0AВидеоадаптер во время чтения ОЗУ непредсказуемо притормаживал процессор, поэтому\x0Aвремя выполнения программы рассчитать было невозможно. А это необходимо для\x0Aкорректной работы программы загрузки и сохранения на магнитофон. Поэтому во\x0Aвремя загрузки с магнитофона, видеоконтроллер отключался и пользователь видел\x0Aчерный экран.\x0A\x0AЧуть позже многие заводы решили выпускать этот компьютер. Причем выпускали в\x0Aразных корпусах с разными клавиатурами и под разными названиями: Радио 86РК,\x0AКриста, Партнер 01.01, Микроша, Электроника КР, Спектр 001, Микро 88, Геофит,\x0AЭликс-89, Квантор БK, Апогей БК01, Альфа БК… Некоторые компьютеры были\x0Aзначительно расширены, например в Апогей БК01Ц было установлено 56 кБ ОЗУ,\x0Aтрехканальный звуковой генератор, был добавлен цвет и псевдографический режим\x0A192×128 (против 128×62 у оригинального компьютера). Большинство выпускаемых\x0A86РК компьютеров были не совместимы между собой.\x0A\x0A",},
"software":{
dir:1,
items:{
"basic80.rkr":{},
"zagib.rkr":{},
"diverse.gam":{},
"volcano.rkr":{},
"basic_ok.rkr":{},
"klad.rkr":{},
"tapper.rkr":{},
"fulledit.rkr":{},
"chess.gam":{},
"muz_syst.rkr":{},
"krok.gam":{},
"basicmus.rkr":{},
"dumped.rkr":{},
"debug.rkr":{},
"hexedit2.rkr":{},
"zmeigog.gam":{},
"circus.rkr":{},
"edmasm.rkr":{},
"maze.gam":{},
"lest.rkr":{},
"bomber.rkr":{},
"lorunner.rkr":{},
"xonix-s.rkr":{},
"bs_psf.rkr":{},
"tetris4.rkr":{},
"rendzu.rkr":{},
"progr3.rkr":{},
"xonixzm.rkr":{},
"basic_rk.rkr":{},
"basic_pr.rkr":{},
"rikoshet.rkr":{},
"zmei.rkr":{},
"slams.rkr":{},
"svvi.rkr":{},
"stopkr.rkr":{},
"wall.rkr":{},
"skachki.rkr":{},
"progr1.rkr":{},
"reversi2.rkr":{},
"pacman.gam":{},
"tetris5.gam":{},
"formula.rkr":{},
"forth.rkr":{},
"lestn1.rkr":{},
"morse16.rkr":{},
"wel.rkr":{},
"krestno.rkr":{},
"sdemise.gam":{},
"ed-dssm.rkr":{},
"tennis_2.rkr":{},
"glass2.rkr":{},
"jump.rkr":{},
"skvotch.rkr":{},
"stranger.rkr":{},
"basmic.rkr":{},
"bombard.rkr":{},
"gfire.gam":{},
"sapper.rkr":{},
"basicpc.rkr":{},
"labyrint.gam":{},
"muzukred.rkr":{},
"tennis.rkr":{},
"tetris6.gam":{},
"glass1.rkr":{},
"pacman.rkr":{},
"cpm.rkr":{},
"xonix1.rkr":{},
"desant.rkr":{},
"tochki.rkr":{},
"torpatt.rkr":{},
"redasm.rkr":{},
"udaw.rkr":{},
"udaw.gam":{},
"stonefld.rkr":{},
"constmag.rkr":{},
"pvo.rkr":{},
"spiton.gam":{},
"c.rkr":{},
"sos1.rkr":{},
"2048.rkr":{},
"sp_games.rkr":{},
"sos1.gam":{},
"paket.rkr":{},
"tetris1.rkr":{},
"tetr2.rkr":{},
"progr2.rkr":{},
"sdemise.rkr":{},
"chess2.rkr":{},
"pascal.rkr":{},
"paket2.rkr":{},
"linkrk.rkr":{},
"basmikr.rkr":{},
"bs_svvi.rkr":{},
"skachki.gam":{},
"ed-dssm2.rkr":{},
"e_stakan.rkr":{},
"hexedit1.rkr":{},
"asm_ed.rkr":{},
"bs_m_old.rkr":{},
"pingpong.rkr":{},
"basicser.rkr":{},
"sp_comp.rkr":{},
"pusher.rkr":{},
"xonixzm.gam":{},
"music.rkr":{},
"kalah.rkr":{},
"assm_mic.rkr":{},
"stranger.gam":{},
"life.rkr":{},
"loderun.rkr":{},
"pusher.gam":{},
"dssm-cpm.rkr":{},
"sos2.rkr":{},
"otello.rkr":{},
"spiton.rkr":{},
"utka.gam":{},
"tennis.gam":{},
"sos2.gam":{},
"z-statio.rkr":{},
"ed-sort.rkr":{},
"piton.rkr":{},
"foxhunt.rkr":{},
"cherv.rkr":{},
"utka.rkr":{},
"xonix.rkr":{},
"tapper.gam":{},
},
},
"firmware":{
dir:1,
items:{
"radio_86rk_16kb.rom":{},
"radio_86rk_32kb_with_ms7007_keyboard.rom":{},
"radio_86rk_chargen.rom":{},
"radio_86rk_16kb_with_ms7007_keyboard.rom":{},
"radio_86rk_32kb.rom":{},
},
},
"doc":{
dir:1,
items:{
"Radio_86RK_Keyboard_circuit.jpg":{},
"Radio_86RK_Circuit.pdf":{},
"Radio_86RK_8x8_font_circuit.jpg":{},
"Radio_86RK_Keyboard.jpeg":{},
},
},
},
},
"ZX_Evolution":{
dir:1,
items:{
"english.txt":{
name:"ZX Evolution",
params:"Year\x092009\x0ARAM\x094096 kB\x0AROM\x09512 kB\x0ACPU\x09Z80 14 MHz\x0AГрафика\x09640x200x16, 320x200x16, 256x192x15, 64 colors palette, VGA\x0AText\x0980x25x16\x0ASound\x09AY-3-8910, Covox\x0AIn ROM\x09Basic\x0AGroup\x09ZX Spectrum 128",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"3.jpg":{},
"2.jpg":{},
"1.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"ZX Evolution",
params:"Год\x092009\x0AОЗУ\x094096 кБ\x0AПЗУ\x09512 кБ\x0AПроц\x09Z80 14 Мгц\x0AГрафика\x09640x200x16, 320x200x16, 256x192x15, палитра 64 цвета, VGA\x0AТекст\x0980x25x16\x0AЗвук\x09AY-3-8910, Covox\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09ZX Spectrum 128",
body:"ZX Evolution это компьютер для тех, кому надоело сидеть за разваливающейся от\x0Aстарости техникой. ZX Evolution это всё тот же ретрокомпьютер, но только\x0Aсобранный из чуть более современных деталей. Он совместим с ретрокомпьютерами:\x0AZX Specturm 128, Pentagon 128, АТМ Турбо, Scorpion...\x0A\x0AРазработан он в 2009 году. В нем установлен настоящий процессор Z80, настоящий\x0Aзвуковой чип AY-3-8910, настоящий контроллер дисковода КР1818ВГ93. Это\x0Aгарантирует совместимость и идентичность со старыми компьютерами. Остальные\x0Aдетали заменены на более современные.\x0A\x0AКомпьютер подключается к VGA монитору (но не к любому), используется PS/2\x0Aклавиатура, а программы загружаются с SD карты. Это супер удобно, особенно\x0Aдля разработки. Но! Компьютер поддерживает и все старые интерфейсы: подключение\x0Aк телевизору через SCART / RGB, подключение механической клавиатуры,\x0Aмагнитофона, дисковода, жесткого диска, CD ROM-а... У компьютера множество\x0Aинтерфейсов, я их перечислять не буду.\x0A\x0AКомпьютер построен на микросхеме ПЛИС. Это значит, что вы можете изменить схему\x0Aкомпьютера без паяльника.\x0A\x0AАвторы компьютера: Вадим Акимов (LVD), Чунин Роман (CHRV), Дмитриев Дмитрий\x0A(DDP), Вячеслав Савенков (Savelij).\x0A\x0AКомпьютер это только плата стандарта MiniITX. Корпус я купил на Aliexpress.\x0AНадпись ZX Evolution я вырезал на своём фрезерном станке из алюминия.\x0A\x0A",},
"doc":{
dir:1,
items:{
"ZX_Evolution_Logo_CNC.svg":{},
"ZX_Evolution_BOM_revc.pdf":{},
"Circuit":{
dir:1,
items:{
"zxevo.lib":{},
"todo.txt":{},
"zxevo.sch":{},
"zxevo_c_2006.pcb":{},
"zxevo.pcb":{},
},
},
"ZX_Evolution_User_manual_revc.pdf":{},
"ZX_Evolution_MON_revc.pdf":{},
"ZX_Evolution_Base_configuration.pdf":{},
"ZX_Evolution_User_manual.pdf":{},
"ZX_Evolution_Circuit_revc.pdf":{},
},
},
},
},
"BK0011":{
dir:1,
items:{
"english.txt":{
name:"BK0011",
params:"Year\x091989\x0ARAM\x09128 kB\x0AROM\x0932 kB\x0ACPU\x09K1801VM1 4 MHz\x0AGraph\x09512x256x2, 256x256x4, 8 colors palette\x0AIn ROM\x09Basic\x0AGroup\x09BK0010",
body:"BK0011 is a continuation of the development of the computer BK0010.01. CPU \x0Afrequency has been increased from 3 MHz to 4 MHz. RAM has been increased from\x0A32 kB up to 128 kB. Previously, only 16 kB was available to the user, the rest\x0Awas occupied by video memory, and now 112 kB is available. The difference is 7\x0Atimes! Used paging memory, because address space of the K1801VM1 processor only\x0A64 kB.\x0A\x0AAn external floppy drive controller was supplied with the BK0011 computer. But\x0Athis only applies to home versions. Only one controller was included to schools\x0Acomplect of 13 computers.\x0A\x0ATo run some programs for BK0010 on BK0011, you must first load the BK0010 ROM\x0Aimage into RAM. Entry points and set of routines in the ROM of BK0011 has\x0Achanged significantly. Also in programs for BK0010 launched there will be no\x0Asound on BK0011 due to an error in the computer circuit.\x0A\x0APage management added to unused control bits port of sound port. And so that\x0Aold programs do not accidentally switch the memory page, working with sound, the\x0Aauthors of the computer blocked this port entirely for old programs. In the\x0ABK0011M computer, next version of BK0011, the sound was returned. There are\x0Ablocked only the page memory control bits.\x0A\x0AEveryone was waiting for a new video mode, everyone wanted 8 or 16 colors.\x0A256x256 4 colors for 1989 year is not serious. But no, the graphics mode has not\x0Achanged. Appeared the ability to select one of two video pages to be displayed\x0Aon the monitor. And appeared a palette, or rather 16 alternative sets of colors.\x0A\x0ATake a look at palettes 5, 6, 7, 8. They contain identical colors. What for?\x0APalettes 9, 10 are the same. What for? And you will not find a palette in which\x0Athere would be blue and white colors. And this combination first comes to mind\x0Awhen you are going to write Norton commander. I can't think of a reason why they\x0Aput together such a palette. Even if for the authors it is absolutely did not\x0Acare.. Even if they choose colors by random way, by throwing the die, the result\x0Awill be better. Unless, they mixed up at the factory firmware. We flashed the\x0AROM of the palettes with firmware for the microprocessor. May be...\x0A",},
"photo":{
dir:1,
items:{
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"БК0011",
params:"Год\x091989\x0AОЗУ\x09128 кБ\x0AПЗУ\x0932 кБ\x0AПроц\x09К1801ВМ1 4 MГц\x0AГрафика\x09512x256x2, 256x256x4, палитра 8 цветов\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09БК0010",
body:"БК0011 это продолжение развития компьютера БК0010.01. Была увеличена тактовая\x0Aчастота процессора с 3 МГц до 4 МГц. Оперативная память была увеличена с 32 кБ\x0Aдо 128 кБ. Ранее пользователю было доступно лишь 16 кБ, остальное занимала\x0Aвидеопамять, а теперь стало доступно 112 кБ. Разница в 7 раз! Используется\x0Aстраничная адресация памяти, т.к. адресное пространство процессора К1801ВМ1\x0Aвсего 64 кБ.\x0A\x0AВ комплекте с компьютером БК0011 поставлялся внешний контроллер дисковода. Но\x0Aэто касается только домашних версий. В школы поставлялся лишь один контроллер\x0Aдисководов на класс из 13 компьютеров.\x0A\x0AДля запуска некоторых программ для БК0010 на БК0011 требуется предварительно\x0Aзагрузить образ ПЗУ БК0010 в оперативную память. Точки входа и набор подпрограмм\x0Aв ПЗУ у БК0011 значительно изменился. Так же в программах для БК0010 запущенных\x0Aна БК0011 не будет звука из за ошибки в схеме компьютера.\x0A\x0AУправление страничной памятью добавили в неиспользуемые биты порта управления\x0Aзвуком. А что бы старые программы случайно не переключили страницу памяти,\x0Aработая со звуком, авторы компьютера заблокировали этот порт целиком для старых\x0Aпрограмм. В следующей версии компьютера БК0011М звук вернули. Там заблокированы\x0Aтолько биты управления страничной памятью.\x0A\x0AВсе ждали новый видеорежим, хотелось 8 или 16 цветов. 256x256 4 цвета для 1989\x0Aгода это не серьезно. Но нет, графический режим не изменился. Появилась\x0Aвозможность выбирать одну из двух видеостраниц для отображения на мониторе.\x0AИ появилась палитра, а точнее 16 альтернативных наборов цветов.\x0A\x0AВзгляните на палитры 5, 6, 7, 8. Они содержат идентичные цвета. Зачем? Палитры\x0A9, 10 одинаковые. Зачем? И вы не найдете палитры в которой были бы синий и белый\x0Aцвета. А это сочетание первое приходит на ум, когда собираешься писать Norton\x0ACommander. Я не могу придумать причины, по которой составили такую палитру. Даже\x0Aесли бы автору было абсолютно фиолетово. Даже если выбрать цвета случайным\x0Aобразом, бросая кубик, то результат будет лучше. Разве что, на заводе перепутали\x0Aпрошивки. Прошили ПЗУ палитр прошивкой для микропроцессора. Может быть...\x0A\x0A",},
"doc":{
dir:1,
items:{
"BK0011_Palettes.png":{},
},
},
},
},
"Orion-128":{
dir:1,
items:{
"english.txt":{
name:"Orion 128",
params:"Year\x091990\x0ARAM\x09128 - 256 kB\x0AROM\x092 kB\x0ACPU\x09i8080 2.5 MHz\x0AGraph\x09384x256x16",
body:"\x22Orion 128\x22 is a simple Soviet computer for self-assembly. Circuit of this \x0Acomputer was published in 1990 in the magazine \x22Radio\x22.\x0A\x0AThe reader needed to make or find a PCB himself, find parts, find the keyboard,\x0Athen solder everything together, flash the ROM, and after that find and fix \x0Aeverything malfunctions. The main purpose of this computer is to explain how\x0Acomputers works. But some factories produced \x22Orion 128\x22 assembled. For example,\x0Athis one.\x0A\x0AThe PCB of this computer is slightly different from the magazine version.\x0AChanged place to connect the keyboard. Among the photos: the green board from\x0Athe magazine, the yellow board has been modified at the factory.\x0A\x0AFrom my personal point of view, \x22Orion 128\x22 is an improved version of the\x0Acomputer \x22Specialist\x22. Their schemes are very similar, only Orion 128 has 2-4\x0Atimes more RAM, 128 or 256 kilobytes. More color graphics, 16 colors.\x0AAnd the processor is a bit faster.\x0A\x0ASince it was a DIY computer, it was easy to upgrade. Users was installing the\x0AZ80 processor. Users was increasing the clock frequency processor from 2.5 MHz\x0Ato 7 MHz. In this case, Orion 128 was the fastest 8 bit computer. Users\x0Awas installing a sound synthesizer chip AY8910. Users was connecting the floppy\x0Adrive controller.\x0A\x0ABelow, I write about the standard magazine version of the computer. Let me\x0Aclarify, because that a DIY computer can be remade in any way. Orion 128\x0Acomputer loading operating system from an external ROM (cartridge), which\x0Ais connected to the socket on the back of the computer.\x0A\x0AIn addition to the operating system, this external ROM can contain any files.\x0AImmediately after turning on, the monitor screen displays blue bars with\x0Aa list of files, like Norton Commander. Files written to external ROM this\x0Adevice A:. Devices B:, C:, D: are files in RAM (RAM disk).\x0A\x0AWhen the power is turned off, all user-written files are lost. Whatever lose\x0Adata, before turning off the power, the user must make a backup a copy of the\x0Afiles to a tape recorder.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"shell.png":{},
"8.jpg":{},
},
},
"my_soft":{
dir:1,
items:{
"lines":{
dir:1,
items:{
"lines$.bru":{},
"lines0.png":{},
"lines$.bin":{},
"sources":{
dir:1,
items:{
"c8080":{
dir:1,
items:{
"TASM.EXE":{},
"c8080.exe":{},
"Include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"op_cmp16":{},
"strchr.c":{},
"Spec":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"setcolor.c":{},
"clrscr.c":{},
"fs_read.c":{},
"fs.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"bios.h":{},
"fs_seek.c":{},
"setcolorautodisable.c":{},
"fs_swap.c":{},
"key.h":{},
"fs_exec.c":{},
"putch.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
"color.h":{},
},
},
"strlen.c":{},
"op_il":{},
"op_mod":{},
"Lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_mul":{},
"stdlib.h":{},
"n":{
dir:1,
items:{
"div32.c":{},
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"op_ig":{},
"Apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"getmemtop.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
"sound.h":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"op_mod16":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"op_shr":{},
},
},
"TASM85.TAB":{},
},
},
"orion_128-game_lines":{
dir:1,
items:{
"lines.h":{},
"lines.c":{},
"stdlib8080.inc":{},
"lines$.bru":{},
"Graph":{
dir:1,
items:{
"title.c":{},
"cursor.bmp":{},
"playerWin.c":{},
"-make.bat":{},
"screen.bmp":{},
"player.bmp":{},
"title.bmp":{},
"playerWin.bmp":{},
"player.c":{},
"screen.c":{},
"MegaLZ.exe":{},
"playerD.c":{},
"playerD.bmp":{},
"SpecialistGraphConverter.exe":{},
"cursor.c":{},
"balls.c":{},
"kingLose.c":{},
"kingLose.bmp":{},
"balls.bmp":{},
},
},
"orion_music.c":{},
"-make-bru.js":{},
"lines$.bin":{},
"unpackRom":{
dir:1,
items:{
"M256.2$.BRU":{},
"-unpack.js":{},
"BOOT$.BRU":{},
"EDIT$.BRU":{},
"PENX4$.BRU":{},
"ROMDISK.BIN":{},
"D$.BRU":{},
"BASIC$.BRU":{},
"DIS$.BRU":{},
"PCVIEW$.BRU":{},
"CH4$.BRU":{},
"AS425$.BRU":{},
"tbl.bin":{},
"BOOT":{},
"CH4.TX.BRU":{},
"BOOT.LK$.BRU":{},
"VC.TX.BRU":{},
"CHR$.BRU":{},
"DOS$.BRU":{},
"OTL$.BRU":{},
"VC$.BRU":{},
"ALT33$.BRU":{},
"SPECTR$.BRU":{},
},
},
"SpecialistGraphConverter":{
dir:1,
items:{
"StdAfx.h":{},
"SpecialistGraphConverter.vcproj":{},
"SpecialistGraphConverter.vcxproj.filters":{},
"VinLib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"bitmap.cpp":{},
"string.cpp":{},
"exec.h":{},
"types.h":{},
"exception.h":{},
"bitmap.h":{},
"exec.cpp":{},
"console.cpp":{},
"_gdi.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"console.h":{},
},
},
"StdAfx.cpp":{},
"SpecialistGraphConverter.vcxproj":{},
"-clean.bat":{},
"SpecialistGraphConverter.cpp":{},
"SpecialistGraphConverter.sln":{},
},
},
"unmlz.h":{},
"screenshot.png":{},
"orion_graph.c":{},
"orion_graph.h":{},
"tbl.bin":{},
"makeRom":{
dir:1,
items:{
"vc$.bru":{},
"tbl.bin":{},
"romdisk.bin":{},
"BOOT":{},
"-makeRom.js":{},
"DOS$.BRU":{},
},
},
"interface.h":{},
"-compile.bat":{},
"lines.lst":{},
"orion_music.h":{},
"lines.asm":{},
"unmlz.c":{},
"orion_interface.c":{},
"TASM85.TAB":{},
},
},
},
},
"lines1.png":{},
},
},
},
},
"russian.txt":{
name:"Орион 128",
params:"Год\x091990\x0AОЗУ\x09128 - 256 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AГрафика\x09384x256x16",
body:"\x22Орион 128\x22 это простой советский компьютер для самостоятельной сборки. Схема \x0Aэтого компьютера была напечатана в 1990 году в журнале \x22Радио\x22.\x0A\x0AЧитатель должен был сам изготовить или найти печатную плату, найти детали, \x0Aнайти клавиатуру, затем спаять все вместе, прошить ПЗУ, а после этого найти все\x0Aнеисправности. Основная цель этого компьютера - объяснить, как устроены\x0Aкомпьютеры. Но некоторые заводы выпускали \x22Орион 128\x22 собранным. Например, этот.\x0A\x0AПлата этого компьютера немного отличается от журнального варианта. Изменено\x0Aместо для подключения клавиатуры. Среди фотографий: зелная плата из журнана,\x0Aжелтая плата доработана на заводе.\x0A\x0AС моей личной точки зрения \x22Орион 128\x22 это улучшенный вариант компьютера \x0A\x22Специалист\x22. Их схемы очень похожи, только у \x22Ориона 128\x22 в 2-4 раза больше \x0Aоперативной памяти, 128 или 256 килобайт. Более цветная графика, 16 цветов. \x0AИ немного быстрее работает процессор.\x0A\x0AТак как это был DIY компьютер, то он легко поддавался улучшению. Пользователи\x0Aустанавливали в \x22Орион 128\x22 процессор Z80. Увеличивали тактовую частоту\x0Aпроцессора с 2.5 МГц до 7 МГц. В этом случае \x22Орион 128\x22 был самым быстрым\x0Aих всех 8 битных компьютеров. Пользователи устанавливали звуковой синтезатор\x0AAY8910, подключали контроллер дисковода.\x0A\x0AДалее я пишу про стандартную журнальную версию компьютера. Сразу уточню, потому\x0Aчто DIY компьютер можно переделать как угодно. Компьютер Орион 128 загружает\x0Aоперационную систему с внешнего ПЗУ (картридж), которое подключается к разъему\x0Aна задней стенке компьютера. У меня этого картриджа пока нет.\x0A\x0AПомимо операционной системы на этом внешнем ПЗУ могут находится любые файлы.\x0AСразу после включения на экране монитора отображаются синие панели со списком\x0Aфайлов, как у Нортон Командера. Файлы записанные во внешнее ПЗУ это устройство\x0AA: . Устройства B:, C:, D: это файлы в оперативной памяти (RAM-диск).\x0A\x0AПри выключении питания все записанные пользователем файлы пропадают. Что бы не\x0Aпотерять данные, перед выключением питания пользователь должен сделать резервную\x0Aкопию файлов на магнитофон.\x0A\x0A\x0A",},
"software":{
dir:1,
items:{
"dinamit$.rko":{},
"sokoban$.rko":{},
"faeton$.rko":{},
"buran$.rko":{},
"cosman$.ord":{},
"kznva$.rko":{},
"thrusta.com":{},
"mole$.rko":{},
"cave$.rko":{},
"tetris2$.ori":{},
"21$.ord":{},
"chronos$.ord":{},
"rangerm.com":{},
"stenka.com":{},
"cyber2$.ord":{},
"boulder$.rko":{},
"tennis$.rko":{},
"zoo2$.rko":{},
"lines$.bru":{},
"rally$.rko":{},
"sex_2$.ori":{},
"pool$.rko":{},
"snake$.ord":{},
"shashki$.rko":{},
"chess3$.rko":{},
"xenom.com":{},
"starwar$.ori":{},
"copter$.rko":{},
"pauk$.rko":{},
"3-poros.com":{},
"synt$.rko":{},
"magie$.rko":{},
"tutan$.rko":{},
"sokrow.com":{},
"pingvin$.rko":{},
"vavilon$.ori":{},
"ladder$.ord":{},
"zet$.ori":{},
"ricos$.rko":{},
"arkan$.ord":{},
"zodias-2.ord":{},
"chess_2$.ori":{},
"xonix-3$.ord":{},
"xonix$.ori":{},
"pusher$.ord":{},
"wert$.ord":{},
"piton$.rko":{},
"robot.com":{},
"airfght$.rko":{},
"krest2$.rko":{},
"wert-2$.ord":{},
"tetris3$.rko":{},
"tutan$.ord":{},
"reversi$.rko":{},
"digger$.rko":{},
"zoo$.rko":{},
"land3$.rko":{},
"harrier$.ord":{},
"gran$.rko":{},
"tetris2$.rko":{},
"draug$.ord":{},
"samantha.com":{},
"durant$.rko":{},
"moonfox$.rko":{},
"tetris$.ord":{},
"adventr$.rko":{},
"volcano$.ori":{},
"mechan$.ord":{},
"st-show$.ord":{},
"speaker$.rko":{},
"ladder$.rko":{},
"mine$.ori":{},
"poker$.rko":{},
"vaza.com":{},
"sabot2.com":{},
"shar$.rko":{},
"lk-lend$.rko":{},
"chess-g$.ord":{},
"jjack$.ord":{},
"chess_1$.ori":{},
"strike$.ord":{},
"tetr$.ori":{},
"valley$.rko":{},
"land$.rko":{},
"pingvin.com":{},
"starwar$.rko":{},
"mars$.rko":{},
"sabot1.com":{},
"billy1$.ord":{},
"chess2$.rko":{},
"striker$.rko":{},
"psst$.ord":{},
"krieger$.ori":{},
"races$.rko":{},
"rik$.ori":{},
"us_07_9$.rko":{},
"cooky$.ord":{},
"krest1$.rko":{},
"sokrow$.ord":{},
"x0$.ori":{},
"nards$.ord":{},
"almaz$.rko":{},
"poker$.ori":{},
"nards_bw$.ord":{},
"land2$.rko":{},
"klad$.rko":{},
"otello$.rko":{},
"pacman$.rko":{},
"radii$.ord":{},
"sokoban$.ord":{},
"zodiac-2.ord":{},
"krot$.rko":{},
"almaz2$.rko":{},
"paratr.com":{},
"reversi.com":{},
"pikfama$.ori":{},
"killer.com":{},
"chess4$.rko":{},
"21$.rko":{},
"piton$.ord":{},
"scdl$.rko":{},
"goros$.ord":{},
"billy$.ord":{},
"bomber$.ori":{},
"raid$.ord":{},
"lunattak.com":{},
"war$.rko":{},
"manner.com":{},
"speaker$.ori":{},
"kort$.rko":{},
"chess-e$.ord":{},
"udav$.rko":{},
"nest$.ord":{},
"almaz-4.com":{},
"xonix$.rko":{},
"dolt$.rko":{},
"spking$.rko":{},
"ranger$.rko":{},
"thrusta$.rko":{},
"m_miner$.rko":{},
"sex_1$.ori":{},
"rally-s.com":{},
"jet-set$.rko":{},
"ug$.ori":{},
"downear$.rko":{},
"kosti$.ord":{},
"handicr$.rko":{},
"tetris$.rko":{},
"land5$.rko":{},
"almazh$.rko":{},
"stakan$.ord":{},
"bil1-tx$.ord":{},
"x_0$.ori":{},
"fisher$.rko":{},
"demolit$.ord":{},
"chess$.ori":{},
"chess$.ord":{},
"calc$.ord":{},
"zodiac$.ord":{},
"loderun$.rko":{},
"turin$.ord":{},
"krot.com":{},
"valley.com":{},
"saboter$.rko":{},
"bomber$.rko":{},
"vitamin$.rko":{},
},
},
"my_extensions":{
dir:1,
items:{
"ps2_keyboard_atmega16":{
dir:1,
items:{
"source":{
dir:1,
items:{
"_clean.bat":{},
"orion_keyb.hex":{},
"orion_keyb.prj":{},
"orion_keyb.c":{},
},
},
"setup_key_bindings":{
dir:1,
items:{
"setup_key_bindings.html":{},
},
},
"ready2.jpg":{},
"russian.html":{},
"pcb.lay":{},
"circuit.png":{},
"rom.eep":{},
"rom.hex":{},
"ready1.jpg":{},
},
},
},
},
"my_utils":{
dir:1,
items:{
"make_rom_disk":{
dir:1,
items:{
"romdisk256.bin":{},
"best3":{
dir:1,
items:{
"tetris2$.ori":{},
"chronos$.ord":{},
"-makerom.js":{},
"romdisk.bin":{},
"almaz-4.com":{},
},
},
"vc$.bru":{},
"tbl.bin":{},
"best1":{
dir:1,
items:{
"lines$.bru":{},
"-makerom.js":{},
"romdisk.bin":{},
"piton$.ord":{},
"nest$.ord":{},
},
},
"make.bat":{},
"boot":{},
"best4":{
dir:1,
items:{
"synt$.rko":{},
"-makerom.js":{},
"digger$.rko":{},
"romdisk.bin":{},
"chess2$.rko":{},
"nards$.ord":{},
"loderun$.rko":{},
},
},
"best2":{
dir:1,
items:{
"21$.ord":{},
"cyber2$.ord":{},
"-makerom.js":{},
"romdisk.bin":{},
},
},
},
},
},
},
"doc":{
dir:1,
items:{
"Orion_128_All_articles_from_Radio.djvu":{},
"Orion_128_User_manual.pdf":{},
},
},
},
},
"_Music_AY8910":{
dir:1,
items:{
"reislin.mp3":{},
"army.mp3":{},
"nothing.mp3":{},
"readme.txt":{},
"nothing.vt2":{},
"fire.vt2":{},
"prisyaga.mp3":{},
"izida.mp3":{},
"prisyaga.vt2":{},
"game_logo_zx_spectrum.png":{},
"krisania_zx_spectrum.png":{},
"fire.mp3":{},
"raistlin_egorov_zx_spectrum.png":{},
"vortextracker2.5.zip":{},
"izida.vt2":{},
"otr.vt2":{},
"army.vt2":{},
"otr.mp3":{},
"reislin.vt2":{},
"takhisis_zx_spectrum.png":{},
},
},
"Iskra_1080_Tartu":{
dir:1,
items:{
"english.txt":{
name:"Iskra 1080 Tartu",
params:"Year\x091990\x0ARAM\x0964 kB\x0AROM\x0920 kB\x0ACPU\x09i8080 2.2 MHz\x0AGraph\x09768x256x2, 384x256x4, 16 colors palette\x0ASound\x091 bit\x0AIn ROM\x09Basic, Monitor, Disassembler, CP/M BIOS for local network",
body:"TODO\x0A",},
"russian.tables.html":{},
"cpm_software":{
dir:1,
items:{
"games":{
dir:1,
items:{
"othello.com":{},
"mbasic.com":{},
},
},
"boot":{
dir:1,
items:{
"cpm22.bin":{},
},
},
},
},
"my_software":{
dir:1,
items:{
"2048":{
dir:1,
items:{
"game2048.c":{},
"Makefile":{},
"output.com":{},
"c8080":{
dir:1,
items:{
"c8080":{},
"include":{
dir:1,
items:{
"string.h":{},
"memswap.c":{},
"sleep.c":{},
"memcmp.c":{},
"strcpy.c":{},
"rand.c":{},
"__o_mod_u16":{},
"memset.c":{},
"__o_shl_32":{},
"__o_div_u16":{},
"c8080":{
dir:1,
items:{
"uint16tostring.c":{},
"c8080.h":{},
"delay.c":{},
"delay.h":{},
"printfinternal.h":{},
"uint16tostring.h":{},
"numberofbit.c":{},
"numberofbit.h":{},
"printfinternal.c":{},
"div16mod.h":{},
},
},
"strchr.c":{},
"__o_and_16":{},
"strlen.c":{},
"putchar.c":{},
"__o_shl_16":{},
"stdarg.h":{},
"__o_shr_u16":{},
"__o_sub_16":{},
"time.h":{},
"stdio.h":{},
"stdlib.h":{},
"sjasmplus":{},
"snprintf.c":{},
"strcmp.c":{},
"memcpy.c":{},
"stddef.h":{},
"printf.c":{},
"__o_call_hl":{},
"__o_add_32":{},
"stdbool.h":{},
"unistd.h":{},
"__o_i8_to_i16":{},
"__o_cmp_16":{},
"memmove.c":{},
"stdint.h":{},
"getchar.c":{},
},
},
},
},
"screenshot.png":{},
"read_me.txt":{},
"output.asm":{},
"output.lst":{},
"game2048.c.original":{},
},
},
"tetris_for_iskra_1080":{
dir:1,
items:{
"tetris.lst":{},
"text.inc":{},
"Makefile":{},
"tetris.lvt":{},
"graph":{
dir:1,
items:{
"level5.inc":{},
"level1.inc":{},
"level6.inc":{},
"logo.inc":{},
"level3.inc":{},
"igrab.inc":{},
"plane.inc":{},
"level2.inc":{},
"level4.inc":{},
"font.inc":{},
},
},
"emu":{
dir:1,
items:{
"history.txt":{},
"codepage.txt":{},
"symgen.bin":{},
"faq.txt":{},
"emu.ext":{},
"emu.ini":{},
"iskra1080":{
dir:1,
items:{
"layout.kbd":{},
"i1080.rom":{},
},
},
"config":{
dir:1,
items:{
"iskra1080.cfg":{},
},
},
"emu.exe":{},
"plugins":{
dir:1,
items:{
"mc6502.dll":{},
"x86.dll":{},
"nairi.dll":{},
"z80.dll":{},
"rus8bit.dll":{},
"indicator.dll":{},
"pdp11.dll":{},
},
},
},
},
"start_emu":{},
"tetris.inc":{},
"graph.inc":{},
"graph_sources":{
dir:1,
items:{
"level5.h":{},
"tasm.exe":{},
"test2.bin.mlz":{},
"pack_plane.cpp":{},
"level9.h":{},
"l1.h":{},
"font1.png":{},
"test.bin":{},
"pack_plane":{},
"pack_igrab":{},
"test2.bin":{},
"lab.lvt":{},
"level5.inc":{},
"make":{},
"level2.h":{},
"megalz.exe":{},
"pack_logo.cpp":{},
"plane.H":{},
"plane.png":{},
"logo.inc":{},
"pack_font":{},
"level9.inc":{},
"test.bin.mlz":{},
"test2.h":{},
"plane.inc":{},
"logo.h":{},
"lab.asm":{},
"pack_logo":{},
"level3.h":{},
"unmlz.inc":{},
"l2.png":{},
"pack":{},
"test2.bin.gz":{},
"l2.h":{},
"font1.h":{},
"level4.h":{},
"lab.lst":{},
"igrab.h":{},
"tasm85.tab":{},
"pack_font.cpp":{},
"level2.inc":{},
"plane.h":{},
"pack_igrab.cpp":{},
"pack.cpp":{},
"font.inc":{},
},
},
"tetris.creator":{},
"install_mfc42_dll_for_wine":{},
"rand.inc":{},
"tetris.asm":{},
"intro.inc":{},
"tetris.files":{},
"unmlz.inc":{},
"graphsrc":{
dir:1,
items:{
"level3.png":{},
"level9-no.png":{},
"menu-no.png":{},
"igrab.png":{},
"level1.png":{},
"plane.png":{},
"intro-plane.png":{},
"level7-no.png":{},
"level5.png":{},
"level8-no.png":{},
"level4.png":{},
"intro.png":{},
"level10-no.jpg":{},
"level6.png":{},
"level2.png":{},
"igrab.h":{},
},
},
"bios.inc":{},
"screenshots":{
dir:1,
items:{
"start.png":{},
"text.png":{},
"level6.png":{},
},
},
"opcodes.inc":{},
"fn.inc":{},
"playfieldgraph.inc":{},
"bin":{
dir:1,
items:{
"pdp11asm.exe":{},
},
},
},
},
"lines_for_iskra_1080":{
dir:1,
items:{
"output.i1080":{},
"lines.h":{},
"lines.c":{},
"Makefile":{},
"graph":{
dir:1,
items:{
"imgPlayer.png":{},
"imgPlayer.c":{},
"imgKingLose.png":{},
"imgPlayerD.png":{},
"imgPlayerD.c":{},
"imgPlayer.h":{},
"imgTitle.c":{},
"convert":{
dir:1,
items:{
"Makefile":{},
"convert.files":{},
"convert":{},
"convert.cflags":{},
"png.cpp":{},
"convert.cxxflags":{},
"convert.creator":{},
"megalz":{
dir:1,
items:{
"mhmt-depack-megalz.c":{},
"mhmt-emit.c":{},
"mhmt-optimal.h":{},
"mhmt-globals.c":{},
"mhmt-globals.h":{},
"mhmt-hash.c":{},
"mhmt-emit.h":{},
"mhmt-tb.h":{},
"mhmt-hash.h":{},
"mhmt-optimal.c":{},
"mhmt-pack.h":{},
"mhmt-lz.c":{},
"mhmt-pack.c":{},
"mhmt-lz.h":{},
"mhmt-tb.c":{},
"mhmt-types.h":{},
},
},
"fs_tools.cpp":{},
"fs_tools.h":{},
"convert_image.cpp":{},
"png.h":{},
},
},
"imgTitle.h":{},
"imgBalls.png":{},
"imgPlayerWin.c":{},
"imgKingLose.h":{},
"imgKingLose.c":{},
"imgBoard.png":{},
"imgTitle.png":{},
"imgScreen.png":{},
"imgScreen.h":{},
"imgBalls.c":{},
"imgPlayerWin.png":{},
"imgBoard.h":{},
"imgPlayerD.h":{},
"imgBalls.h":{},
"imgScreen.c":{},
"imgBoard.c":{},
"imgPlayerWin.h":{},
},
},
"c8080":{
dir:1,
items:{
"c8080":{},
"include":{
dir:1,
items:{
"string.h":{},
"memswap.c":{},
"memcmp.c":{},
"strcpy.c":{},
"rand.c":{},
"__o_mod_u16":{},
"memset.c":{},
"__o_div_u16":{},
"c8080":{
dir:1,
items:{
"c8080.h":{},
"delay.c":{},
"delay.h":{},
"numberofbit.c":{},
"numberofbit.h":{},
"div16mod.h":{},
},
},
"strchr.c":{},
"strlen.c":{},
"__o_shr_u16":{},
"__o_sub_16":{},
"stdlib.h":{},
"sjasmplus":{},
"strcmp.c":{},
"memcpy.c":{},
"stddef.h":{},
"stdbool.h":{},
"__o_cmp_16":{},
"memmove.c":{},
"stdint.h":{},
},
},
},
},
"lines_for_iskra_1080.creator":{},
"font.c":{},
"lines_for_iskra_1080.cxxflags":{},
"hal.c":{},
"iskra1080":{
dir:1,
items:{
"playtone.c":{},
"fillrect.c":{},
"keyboard.c":{},
"drawtext.c":{},
"pixelcoords.h":{},
"palette.h":{},
"drawimage.h":{},
"drawtext.h":{},
"palette.c":{},
"fillrect.h":{},
"drawimage.c":{},
"playtone.h":{},
"keyboard.h":{},
},
},
"unmlz.h":{},
"music.c":{},
"path.c":{},
"screenshot1.png":{},
"lines_for_iskra_1080.cflags":{},
"screenshot2.png":{},
".clang-format":{},
"output.asm":{},
"font.bin":{},
"output.lst":{},
"font.h":{},
"path.h":{},
"lines_for_iskra_1080.includes":{},
"test.c":{},
"music.h":{},
"unmlz.c":{},
"lines_for_iskra_1080.files":{},
"hal.h":{},
},
},
},
},
"utils":{
dir:1,
items:{
"iskra_1080_tartu_tap_to_wav":{
dir:1,
items:{
"iskra_1080_tartu_tap_to_wav.ubuntu64":{},
"iskra_1080_tartu_tap_to_wav.exe":{},
"sources":{
dir:1,
items:{
"Makefile":{},
"cppcheck.json":{},
"iskra_1080_tartu_tap_to_wav.files":{},
".clang-format":{},
"make_pcm_wav_file.cpp":{},
"iskra_1080_tartu_tap_to_wav.cflags":{},
"make_pcm_wav_file.h":{},
"iskra_1080_tartu_tap_to_wav.creator":{},
"fs_tools.cpp":{},
"fs_tools.h":{},
"iskra_1080_tartu_tap_to_wav.cxxflags":{},
"iskra_1080_tartu_tap_to_wav.cpp":{},
},
},
},
},
"i1080_to_bas":{
dir:1,
items:{
"i1080_to_bas.cpp":{},
".clang-format":{},
"i1080_to_bas":{},
},
},
},
},
"russian.io_ports.html":{},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"20.jpg":{},
"19.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"sources":{
dir:1,
items:{
"i1080.h":{},
"i1080_internal.h":{},
"i1080.c":{},
},
},
"russian.txt":{
name:"Искра 1080 Тарту",
params:"Год\x09≤1990\x0AОЗУ\x0964 кБ\x0AПЗУ\x0920 кБ\x0AПроц\x09К580ВМ80А 2.1 MГц\x0AГрафика\x09768x256x2, 384x256x4, палитра 16 цв\x0AЗвук\x091 бит\x0AВ ПЗУ\x09Бейсик, Монитор, Дизассемблер, CP/M BIOS",
body:"Искра 1080 Тарту это советский домашний компьютер. Компьютер разработан и\x0Aвыпускался курским объединением Счётмаш. Дата начала производства неизвестна.\x0AМой экземпляр датируется 1990 годом.\x0A\x0AВ компьютере используется процессор КР580ВМ80А, который работает на тактовой\x0Aчастоте 2.2 МГц. Установлено 64 кБ ОЗУ и все они доступны. Видеоадаптер\x0Aиспользует  часть этой памяти 12 кБ или 24 кБ. Под программе и её данным\x0Aостается 52 кБ или  40 кБ. Видеоадаптер компьютера поддерживает три графических\x0Aрежима. Два низкого разрешения 384x256 2 цвета и 384x256 4 цвета. И один\x0Aвысокого 768x256 2 цвета. Компьютер работает быстрее в режиме 384x256 2 цвета,\x0Aчем в остальных. Цвета выбираются из палитры в 16 цветов. Для переключения между\x0Aрежимами 384 и 768 необходимо переключить микропереключатель на задней стенке\x0Aкомпьютера. ПЗУ компьютера объемом 20 кБ содержит: Бейсик, Монитор,\x0AДизассемблер, CP/M BIOS. На плате компьютера есть места для установки микросхем:\x0Aпоследовательного порта КР580ВВ51 и контроллера дисководов КР1818ВГ93. На разъем\x0Aрасширения выведены сигналы для подключения дополнительной оперативной памяти,\x0Aальтернативного ПЗУ.\x0A\x0AКомпьютер выпускался в различных комплектациях, которые получили различные\x0Aназвания: Искра 1081, Искра 1083, Искра 1084. Я не видел и не слышал\x0Aни об одном из этих компьютеров. В Руководстве по эксплуатации написано что \x0AИскра 1081 поставлялась с двумя джойстиками и кассетой ПЗУ. Компьютер Искра 1083\x0Aпоставлялся с кабелями ИРПС и НГМД. То есть, на плате компьютера была\x0Aустановлена микросхема  последовательного порта. И возможно микросхема\x0Aконтроллера дисководов. Но на рисунке в Руководстве эксплуатации контроллер\x0Aдисководов изображен в двух вариантах: встроенный и в виде внешней платы\x0Aподключаемой к разъему расширения. Специалисты из Тарту ничего не знают об \x0Aэтих контроллерах дисководов. Компьютер Искра 1085 поставлялся с кабелями: \x0AИРПС, НГМД и ЛС. ЛС это кабель локальной сети, который соединяет компьютеры\x0Aчерез параллельные порты.\x0A\x0AВ название компьютера добавлено слово \x22Тарту\x22 потому что к разработке\x0Aкомпьютера были привлечены специалисты из Тартуского университета.\x0AВ 1984 году в Тартуском университете разработали компьютер для работы с CP/M.\x0AЭтот компьютер назвали Tartu. Он показывал только черно-белое изображение.\x0AАвторов пригласили к участию в разработке компьютера Искра 1080.\x0AНекоторые аппаратные решения и прошивка компьютера Tartu были использованы как \x0Aоснова для Искры 1080.\x0A\x0AПо требованию Счетмаш специалистами Тарту для Искры 1080 был адаптирован \x0Aкакой-то бейсик (либо обеспечена совместимость с каким то Бейскиком). \x0AВ Руководстве по эксплуатации заявлена совместимость с бейсиком компьютера \x0AКорвет ПК8010. Но бейсики Искры 1080 и Корвета ПК8010 имеют отличающийся набор\x0Aкоманд. Например, у Искры нет команды INKEY$. Компьютеры имеют различное \x0Aразрешение экрана, количество цветов, объем оперативной памяти и скорость\x0Aпроцессора, т.е. полной совместимости нет. Способ записи информации на\x0Aмагнитную ленту идентичен компьютеру Корвет ПК8010 и компьютерам стандарта MSX.\x0AКак минимум программу загрузить можно.\x0A\x0AСпециалисты из Тарту добавили поддержку цвета. Но на половину. Команды языка\x0Aпрограммирования бейсик PSET, LINE, CIRCLE, PAINT умеют рисовать цветную\x0Aграфику, но при прокрутке экрана цветная графика превращается в мусор. Потому\x0Aчто цветной видеорежим организован в виде двух битовых плоскостей, а\x0Aфункция прокрутки экрана работает только с одной битовой плоскостью.\x0AФункция PRINT не умеет выводить цветной текст по той же причине. \x0A\x0AГрафический режим 768x256x2 не поддерживается прошивкой компьютера. И я не видел\x0Aни одной программы для этого режима.\x0A\x0AСпециалисты из Тарту добавили в прошивку компьютера часть операционной\x0Aсистемы CP/M. Если параллельный порт компьютера Искра 1080 соединить\x0Aспециальным проводом с параллельным портом IBM PC. Затем запустить\x0Aна IBM PC специальную программу. То на Искре 1080 запустится операционная \x0Aсистема CP/M. Она будет работать с образом дискеты записанным в файл на жестком\x0Aдиске IBM PC. Единственное упоминание об этой возможности в Руководстве по\x0Aэксплуатации это описание контактов бокового разъема. Я написал идентичную \x0Aпрограмму той, что запускалась на IBM PC, только запускается она на \x0Aмикроконтроллере STM32F401, который работает с SD картой.\x0A\x0AОтличительная черта этого компьютера это стильный корпус. Плоская\x0Aпрямоугольная поверхность компьютера со скругленными углами похожа на технику\x0AApple/Xiaomi/Huawei, да и на остальную современную технику. Очертания корпуса\x0Aопередили своё время. Красиво выглядят невысокие клавиши белого и серого цветов.\x0AТакой серый цвет долго был в море, да и сейчас выглядит серьезно. В начертании\x0Aбукв на клавишах, в размере шрифта чувствуется работа дизайнера. Клавиши не\x0Aтолько выглядят красиво, они очень приятно нажимаются. Это герконовые клавиши.\x0AКлавиатура выглядит очень современно для 8 битных компьютеров, используется\x0Aраскладка QWERTY, есть клавиши NUM LOCK, CAPS LOCK с соответствующими\x0Aсветодиодами. К сожалению нет светодиода RUSSIAN. Хоть его никогда не было\x0Aна клавиатурах IBM PC, но в Искру бы могли добавить такой светодиод.\x0A\x0AКлавиша перезагрузки красного цвета окружена рамкой, что бы её случайно не \x0Aнажали. Выглядит как клавиша остановки атомного реактора. При этом,\x0Aнажатие на сброс не вызывает очистку памяти, вы просто возвращаетесь в Бейсик\x0Aили Монитор. Выступы на корпусе (цилиндр и кубики) мне не очень нравятся. Под\x0Aцилиндром находится магнит встроенного динамика, видимо это решение позволило\x0Aуменьшить высоту корпуса. А кубики маскируют вентиляционные отверстия. Боковая\x0Aгрань корпуса имеет сложную форму с углублением посередине, как на звезде\x0Aсмерти. Обозначения разъемов на задней стенке выполнены не краской, а рельефом.\x0AА изнутри корпус покрыт токопроводящей краской, что бы экранировать\x0Aвысокочастотные помехи от компьютера. Мне еще нравились голубые широкие разъемы,\x0Aтакие разъемы встречались только на сложной компьютерной технике, так выглядели\x0Aвысокие технологии в конце 80-х.\x0A\x0AИнтересной особенностью этого компьютера является знакогенератор. Расположение\x0Aрусских букв соответствует основной кодировке ГОСТ. Но остальные символы\x0Aразмещены хаотично, например символы рисования рамок. Я в детстве пытался\x0Aнарисовать этими символами свой Norton Commander. Но при выводе символов\x0Aвсегда есть межстрочный интервал в 2 пикселя. Непрерывные рамки распадаются\x0Aна строки. Еще два символа рисования рамок дублируются, а два отсутствуют.\x0AНедосмотели.\x0A\x0AУ компьютера есть интересные для программистов и схемотехников особенности.\x0AРазместить в адресном пространстве размером 64 кБ одновременно 20 кБ ПЗУ и 64 кБ\x0AОЗУ невозможно. Обычно в 8 битных компьютерах применяется несколько карт памяти,\x0Aпереключаемые записью числа с специальный регистр. В Искре 1080 так же\x0Aприменяются карты памяти, но переключаются они автоматически, в зависимости,\x0Aоткуда выполняется программа. Программе размещенной по адресам 0 - 0С7FFh\x0Aдоступна вся оперативная память, но прочитать ПЗУ невозможно. Программы нельзя\x0Aразмещать в ОЗУ выше адреса 0C7FFh, так как попытка выполнения по этим адресам\x0Aвызовет подключение ПЗУ вместо ОЗУ и произойдет выполнение программы из ПЗУ. Это\x0Aограничение практически не ощущается, так как в верхней части памяти находится\x0Aвидеопамять. Крайне редко возникает необходимо размещать исполняемый код в\x0Aвидеопамяти.\x0A\x0AЕще одна заметная особенность платы компьютера, это применение 10 однократно\x0Aпрограммируемых микросхем ПЗУ объёмом 2 кБ. Что бы уменьшить нагрузку на блок\x0Aпитания, питание на нужную микросхему ПЗУ подается только в момент чтения из\x0Aнеё.\x0A\x0AНа задний самый широкий разъем компьютера выведена системная шина компьютера, на\x0Aбоковой разъем выведены: параллельный порт к которому можно подключить: принтер,\x0Aпоследовательный порт, IBM PC в качестве файл-сервера или организовать \x0Aлокальную сеть.\x0A\x0AПрограмм для компьютера очень мало. Я их все перечислил тут. Я добавил\x0Aскриншоты, краткие описания, приложил исходные коды на Бейсике, ну а программы в\x0Aмашинном коде дизассемблировал. Программ мало.\x0A\x0AСхема компьютера, документация и кассета с программами нашлась. Но там не было\x0Aсхемы встроенного контроллера дисководов, не было схем. Поэтому я восстановил\x0Aсхему контроллера по печатной плате. Перечертил все соединения и подобрал\x0Aмикросхемы. Это как разгадывание кроссвордов. Понять что за 40-ногая микросхема\x0Aиспользуется не сложно. У разных микросхем питание подается на разные ножки. Я\x0Aпроверил и оказалось, что 20 ножка это земля, 21 ножка это +5В, 40 ножка это\x0A+12В. А это может быть только контроллер дисководов КР1818ВГ93. Остальные\x0Aмикросхемы подбирались по здравому смыслу.\x0A\x0AУ меня в детстве было чуть больше программ, чем на найденной кассете. Была еще\x0Aшикарная рекламная программа на Бейсике с картинками и музыкой. Помню векторное\x0Aизображение львенка и мелодию ламбады. Эта демопрогармма была постоянно\x0Aзапущена на компьютере, пока компьютер лежал в магазине. Я всё еще ищу эти\x0Aпрограммы.\x0A\x0AОтсутствие Тетриса меня и заставило недавно написать свой Тетрис для Искры 1080.\x0AПочитать можно тут. Изображения для Тетриса я взял из игры для IBM PC.\x0A\x0AМне написал письмо главный разработчик программного обеспечения этого\x0Aкомпьютера. Его зовут Olev Toom.\x0A\x0A<< Первоначально (1983-1984) в Тартуском университете был создан компьютер\x0ATartu. Главным конструктором по электронике был Лео-Хенн Хумал (Leo-Henn Humal),\x0Aа большую часть программного обеспечения писал Ваш покорный слуга (с помощью\x0Aколлег, разумеется). Я написал основную часть Монитора, дизассемблер и BIOS для\x0Aоперационной системы CP/M. Также мы адаптировали некую версию языка Basic для\x0Aработы из ПЗУ.\x0A\x0AНашей целью было создание простой монохромной машины, на которой работала бы\x0ACP/M и все программы, что для неё написаны.\x0A\x0AМашину Tartu выпускали мелкосерийно в Эстонии.\x0A\x0AКак у нас возникли связи с Курским заводом \x22Счетмаш\x22, я сейчас не помню. Но там\x0Aзаинтересовались нашей машиной. Однако для производства надо было некоторые вещи\x0Aпеределать. Во-первых, требовалось добавить цветной экран. Во-вторых, надо было\x0Aсовместить версию Basic с некоторыми другими. Таких изменений было немало. Новый\x0Aкомпьютер Искра 1080 Тарту отличался от первоначальной Tartu, но не очень\x0Aсильно.\x0A\x0AЯ посмотрел в ПЗУ и нашел много кода, который тогда написал. Что меня очень\x0Aобрадовало :). >>\x0A\x0A",},
"russian.basic_codes.html":{},
"software":{
dir:1,
items:{
"foto1":{
dir:1,
items:{
"foto1.i1080":{},
"foto1.png":{},
},
},
"kvadr":{
dir:1,
items:{
"kvadr.bas":{},
"kvadr.png":{},
"kvadr.i1080":{},
},
},
"rew":{
dir:1,
items:{
"rew.bas":{},
"rew.i1080":{},
"rew.png":{},
},
},
"elek":{
dir:1,
items:{
"elek.bas":{},
"elek.png":{},
"elek.i1080":{},
},
},
"lab":{
dir:1,
items:{
"lab.png":{},
"lab.asm":{},
"lab.1.i1080":{},
"lab.0.i1080":{},
},
},
"time":{
dir:1,
items:{
"time.bas":{},
"time.png":{},
"time.i1080":{},
},
},
"test1":{
dir:1,
items:{
"test1.i1080":{},
"test1.bas":{},
"test1.png":{},
},
},
"bomberman":{
dir:1,
items:{
"bomman.1.png":{},
"bomman.txt":{},
"bomman.i1080":{},
"bomman.2.png":{},
},
},
"rek":{
dir:1,
items:{
"rek.bas":{},
"rek.i1080":{},
"rek.1.png":{},
"rek.0.png":{},
},
},
"boi":{
dir:1,
items:{
"boi.png":{},
"boi.version0.i1080":{},
"boi.version1.i1080":{},
"boi.version0.bas":{},
"boi.version1.bas":{},
},
},
"foto2":{
dir:1,
items:{
"foto2.i1080":{},
"foto2.png":{},
},
},
"edasm":{
dir:1,
items:{
"edasm.i1080":{},
"edasm.png":{},
},
},
"test":{
dir:1,
items:{
"test.png":{},
"test.1.i1080":{},
"test.0.i1080":{},
},
},
"lines":{
dir:1,
items:{
"lines.0.png":{},
"lines.i1080":{},
"lines.1.png":{},
},
},
"arm":{
dir:1,
items:{
"arm.i1080":{},
"arm.bas":{},
"arm.png":{},
},
},
"mp3_originals":{
dir:1,
items:{
"igr6.mp3":{},
"komplekt programm dlja polzovatje.mp3":{},
"komplekt prog_2.mp3":{},
"izgotovil proveril.mp3":{},
"igr6.txt":{},
},
},
"boa":{
dir:1,
items:{
"boa.png":{},
"boa.txt":{},
"boa.i1080":{},
},
},
"rgb":{
dir:1,
items:{
"rgb.png":{},
"rgb.i1080":{},
"rgb.bas":{},
},
},
"driller_tanks":{
dir:1,
items:{
"dtank.txt":{},
"dtank.1.png":{},
"dtank.i1080":{},
"dtank.2.png":{},
},
},
"tetris":{
dir:1,
items:{
"tetris.5.png":{},
"tetris.2.png":{},
"tetris.7.png":{},
"tetris.1.png":{},
"tetris.6.png":{},
"tetris.i1080":{},
"tetris.4.png":{},
"tetris.0.png":{},
"tetris.3.png":{},
},
},
"i1080_to_bas":{},
},
},
"firmware":{
dir:1,
items:{
"08_dd39.bin":{},
"03_dd34.bin":{},
"05_dd36.bin":{},
"01_dd32.bin":{},
"09_dd40.bin":{},
"04_dd35.bin":{},
"i1080.rom":{},
"10_dd38.bin":{},
"06_dd37.bin":{},
"07_dd41.bin":{},
"02_dd33.bin":{},
},
},
"russian.terminal.html":{},
"my_emulator.html":{
dir:1,
items:{
"iskra1080keyboard.js":{},
"Makefile":{},
"iskra1080rom.js":{},
"file.rew.bas.js":{},
"file.lab.js":{},
"file.foto1.js":{},
"iskra1080emulator.includes":{},
"russian.html":{},
"iskra1080emulator.creator":{},
"file.edasm.js":{},
"filelist.js":{},
"file.test1.js":{},
"file.foto2.js":{},
"file.time.bas.js":{},
"file.lines.js":{},
"iskra1080emulator.files":{},
"file.boi.bas.js":{},
"file.test.js":{},
"iskra1080emulator.cflags":{},
"file.rgb.bas.js":{},
"file.boa.js":{},
"i8080.js":{},
"file.elek.bas.js":{},
"iskra1080video.js":{},
"disk0.js":{},
".clang-format":{},
"iskra1080floppyController.js":{},
"file.dtank.js":{},
"file.kvadr.bas.js":{},
"iskra1080emu.js":{},
"file.tetris.js":{},
"file.bomman.js":{},
"file.arm.bas.js":{},
"iskra1080emulator.cxxflags":{},
"file.rek.bas.js":{},
},
},
"doc":{
dir:1,
items:{
"Iskra_1080_Tartu_Chargen.png":{},
"Iskra_1080_Tartu_Circuit_Alemorf_version.png":{},
"Iskra_1080_Tartu_Chargen_2.png":{},
"Iskra_1080_Tartu_Circuit.gif":{},
"Iskra_1080_Tartu_Power_unit_Circuit_Alemorf_version.pdf":{},
"Iskra_1080_Tartu_Keyboard_circuit.dsn":{},
"Iskra_1080_Tartu_User_manual.djvu":{},
"Iskra_1080_Tartu_Software_manual.djvu":{},
"Iskra_1080_Tartu_Circuit.djvu":{},
"Iskra_1080_Tartu_Keyboard_circuit.png":{},
},
},
"disasm.png":{},
"russian.i8080.html":{},
},
synced:{
"Iskra_1080_Tartu/russian.tables.html": "Искра 1080 Тарту. Таблицы.",
"Iskra_1080_Tartu/russian.io_ports.html": "Искра 1080 Тарту. Порты ввода-вывода.",
"Iskra_1080_Tartu/russian.basic_codes.html": "Искра 1080 Тарту. Коды команд Бейсика.",
"Iskra_1080_Tartu/russian.terminal.html": "Искра 1080 Тарту. Коды терминала.",
"Iskra_1080_Tartu/my_emulator.html/russian.html": "Эмулятор Искра 1080 Тарту",
"Iskra_1080_Tartu/russian.i8080.html": "Система команд микропроцессора КР580ВМ80А",
},
},
"Spectr-001":{
dir:1,
items:{
"english.txt":{
name:"Spectr-001",
params:"Year\x09≤1991\x0ARAM\x0932 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AText\x0964x25x2\x0AGraph\x09128x62x2\x0AGroup\x09Radio 86RK",
body:"This is a strandard \x22Radio 86RK\x22 computer. This is a computer with very modest\x0Acapabilities. It hasn't graphics, only black and white text mode with no\x0Alowercase letters. The keyboard is terrible.\x0A\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Спектр-001",
params:"Год\x09≤1991\x0AОЗУ\x0932 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AТекст\x0964x25x2\x0AГрафика\x09128x62x2\x0AГруппа\x09Радио 86РК",
body:"Это обычный Радио 86РК компьютер, то есть компьютер с очень скромными\x0Aвозможностями. Графики нет, только черно-белый текстовый режим без строчных\x0Aбукв. Клавиатура ужасна.\x0A",},
"firmware":{
dir:1,
items:{
"bios.bin":{},
},
},
},
},
"Microsha":{
dir:1,
items:{
"english.txt":{
name:"Microsha",
params:"Year\x091987\x0ARAM\x0932 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AGraph\x09128x62x2\x0AText\x0964x25x2\x0ASound\x09i8253\x0AGroup\x09Radio 86RK",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"bin2wav":{
dir:1,
items:{
"sources":{
dir:1,
items:{
"bin2wav.c":{},
},
},
"bin2wav.ubuntu64":{},
"bin2wav.exe":{},
},
},
},
},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"21.jpg":{},
"17.jpg":{},
"11.jpg":{},
"15.jpg":{},
"25.jpg":{},
"13.jpg":{},
"20.jpg":{},
"19.jpg":{},
"24.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"23.jpg":{},
"10.jpg":{},
"14.jpg":{},
"18.jpg":{},
"8.jpg":{},
"22.jpg":{},
},
},
"russian.txt":{
name:"Микроша",
params:"Год\x091987\x0AОЗУ\x0932 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AГрафика\x09128x62x2\x0AТекст\x0964x25x2\x0AЗвук\x09К580ВИ53\x0AГруппа\x09Радио 06РК",
body:"Я начну свой рассказ немного с другого компьютера. Радио 86РК это очень простой\x0Aкомпьютер для самостоятельной сборки. 9 больших микросхем, 11 маленьких и 8 или\x0A16 микросхем памяти. Схемы этого компьютера были напечатаны в журнале Радио в\x0A1986 году (№ 4-6). Это хороший компьютер для того, что бы научиться\x0Aразрабатывать цифровые устройства, компьютеры, контроллеры. Если человек его сам\x0Aспаял и отладил, то человек вероятно сможет его доработать и использовать для\x0Aдела. Но авторы этого компьютера отнесли схемы не только в редакцию журнала \x0AРадио, но и на Ленинградский электромеханический завод. На заводе решили, что\x0Aтакой простой компьютер производить не сложно, а народ не разбирающийся\x0Aкомпьютерах купит что угодно и понеслось. Так появился компьютер Микроша.\x0A\x0AЕще авторы хотели что бы этот компьютер поставлялся в советские школы. Что бы\x0Aмиллионы советских детей учились работать на их компьютере. Название Микроша это\x0Aни что иное, как сокращение от МИКРокомпьютер ШколА. Но в школы этот компьютер\x0Aне попал. Название \x22Радио 86РК\x22 дали компьютеру в редакции журнала \x22Радио\x22. Уж\x0Aочень им хотелось компьютер имени журнала. Число 86 обозначало 1986 год.\x0A\x0AКомпьютеры \x22Микроша\x22 и \x22Радио 86РК\x22 несовместимы между собой. У них были разные\x0Aспособы записи на магнитную ленту, разные адреса устройств в оперативной памяти.\x0AБольшинство программ для Радио 86РК нельзя запустить на Микроше и наоборот. Это\x0Aстранно, потому что изначально это был один и тот же компьютер. В то время\x0Aникого не волновала совместимость между компьютерами.\x0A\x0AУдивительно, что для такого простого компьютера промышленно выпускался\x0Aконтроллер дисковода. Мне подарили реплику контроллера дисковода. Среди фото\x0Aниже вы можете увидеть оригинальный контроллер.\x0A\x0A",},
"software":{
dir:1,
items:{
"13":{
dir:1,
items:{
"gonka.rkm":{},
"maze.rkm":{},
"digger3.rkm":{},
"digger1.rkm":{},
"readme.txt":{},
"shahta.rkm":{},
"perelet.rkm":{},
"monster.rkm":{},
"samolet.rkm":{},
"shtab.rkm":{},
"robot.rkm":{},
"liquid.rkm":{},
"cherv.rkm":{},
"zagibon.rkm":{},
"digger2.rkm":{},
"muzsalon.rkm":{},
"udav3.rkm":{},
},
},
"18":{
dir:1,
items:{
"syntez.rkm":{},
"uras7.rkm":{},
"kopir.rkm":{},
"uras1.rkm":{},
"readme.txt":{},
"txtproc.rkm":{},
"uras4.rkm":{},
"uras2.rkm":{},
"forth63.rkm":{},
"instxtpr.rkm":{},
"rdwr61.rkm":{},
"libas.tx":{},
"uras6.rkm":{},
"uras8.rkm":{},
"uras9.rkm":{},
"uras3.rkm":{},
"uras5.rkm":{},
},
},
"04":{
dir:1,
items:{
"zamok.rkm":{},
"boks.rkm":{},
"skythe.rkm":{},
"marsg100.rkm":{},
"saboteur.rkm":{},
"readme.txt":{},
"pentis.rkm":{},
"datachan.rkm":{},
"sos.rkm":{},
"otladbdu.rkm":{},
"mars3.rkm":{},
"bmikron5.rkm":{},
"boulder.rkm":{},
"besystem.rkm":{},
"saper2.rkm":{},
"disasbdz.rkm":{},
"mars2.rkm":{},
"saper.rkm":{},
"slams.rkm":{},
"life.rkm":{},
"karate.rkm":{},
"torpeda.rkm":{},
"dumpbsd.rkm":{},
"panika.rkm":{},
},
},
"19":{
dir:1,
items:{
"prpitona.rkm":{},
"musredak.rkm":{},
"prilmdic.rkm":{},
"taskg100.rkm":{},
"boks.rkm":{},
"manipul.rkm":{},
"brikety.rkm":{},
"prilmred.rkm":{},
"readme.txt":{},
"cen.rkm":{},
"lovushka.rkm":{},
"musdikt.rkm":{},
"football.rkm":{},
"superud.rkm":{},
"musshkat.rkm":{},
"stalker.rkm":{},
"pusher.rkm":{},
"zmeelov.rkm":{},
"shirker.rkm":{},
"riverbed.rkm":{},
"perehod.rkm":{},
"inpusher.rkm":{},
},
},
"12":{
dir:1,
items:{
"insbstc1.tx":{},
"piramids.c":{},
"readme.txt":{},
"shifr.c":{},
"edmicro.rkm":{},
"best-c.rkm":{},
"vvodvyv.c":{},
"insbstc2.tx":{},
"insbstc3.tx":{},
"tennis.c":{},
"ferzi.c":{},
"insbstc4.tx":{},
"grafika.c":{},
},
},
"17":{
dir:1,
items:{
"urassm9.rkm":{},
"basapog.rkm":{},
"mk-rk86.rkm":{},
"tychon.rkm":{},
"urassm3.rkm":{},
"urassm6.rkm":{},
"numerat.rkm":{},
"urassm10.rkm":{},
"readme.txt":{},
"vyvname.rkm":{},
"nelson92.rkm":{},
"urassm7.rkm":{},
"mk-apog.rkm":{},
"insnel92.rkm":{},
"basservs.rkm":{},
"urassm1.rkm":{},
"urassm4.rkm":{},
"urassm2.rkm":{},
"ramdos.rkm":{},
"urassm5.rkm":{},
"urassm8.rkm":{},
},
},
"15":{
dir:1,
items:{
"mars13.rkm":{},
"syntez.rkm":{},
"zamok.rkm":{},
"kommut2.rkm":{},
"saboteur.rkm":{},
"mars.rkm":{},
"readme.txt":{},
"pentis.rkm":{},
"inszycap.rkm":{},
"zycaps.rkm":{},
"landmaze.rkm":{},
"sp21.rkm":{},
"paket2.rkm":{},
"saper2.rkm":{},
"almaz.rkm":{},
"stelbi.rkm":{},
"snakes.rkm":{},
"kindza.rkm":{},
"ataka.rkm":{},
"saper.rkm":{},
"slams.rkm":{},
"sfinks.rkm":{},
"life.rkm":{},
"polechud.rkm":{},
"loderun.rkm":{},
},
},
"21":{
dir:1,
items:{
"pascal":{
dir:1,
items:{
"good":{
dir:1,
items:{
"stena.pas":{},
"piton.pas":{},
"morskoy.pas":{},
},
},
},
},
"basic_plus":{
dir:1,
items:{
"good":{
dir:1,
items:{
"chislo.bas":{},
"krestiki.bas":{},
"labirin2.bas":{},
"montekar.bas":{},
},
},
"bad":{
dir:1,
items:{
"shashki.bas":{},
"eiforia.bas":{},
"blackjek.bas":{},
"kartinki.bas":{},
"avia.bas":{},
"palach.bas":{},
"preziden.bas":{},
"labirin1.bas":{},
"tank.bas":{},
"naezdnik.bas":{},
"game.bas":{},
"kapital.bas":{},
"diktator.bas":{},
"sokoban.bas":{},
"prognoz.bas":{},
},
},
},
},
"readme.txt":{},
"basmicro.rkm":{},
"basplus.rkm":{},
"pascal.rkr":{},
"basic_best":{
dir:1,
items:{
"good":{
dir:1,
items:{
"ushu2.bas":{},
"piranii.bas":{},
"insbest2.bas":{},
"kran.bas":{},
"skvosh.bas":{},
"insbest1.bas":{},
"stihi.bas":{},
"ushu0.bas":{},
"sport.bas":{},
"blackbox.bas":{},
"klingon.bas":{},
"eng-rus.bas":{},
},
},
"bad":{
dir:1,
items:{
"ushu1.bas":{},
},
},
},
},
"basic_micro_v02":{
dir:1,
items:{
"good":{
dir:1,
items:{
"senokos.bas":{},
"labirint.bas":{},
"tir.bas":{},
"stena.bas":{},
"reversi.bas":{},
"morskoy.bas":{},
"sobirat.bas":{},
"basketb.bas":{},
"roboty.bas":{},
"bomba.bas":{},
"smertn.bas":{},
"sokoban.bas":{},
"ohotnik.bas":{},
},
},
"bad":{
dir:1,
items:{
"skachki.bas":{},
"kosmotir.bas":{},
"podvig.bas":{},
"senokos.bas":{},
"labirint.bas":{},
"stena.bas":{},
"reversi.bas":{},
"morskoy.bas":{},
"sobirat.bas":{},
"basketb.bas":{},
"roboty.bas":{},
"bomba.bas":{},
"smertn.bas":{},
"sokoban.bas":{},
"ohotnik.bas":{},
},
},
},
},
"basbest.rkm":{},
},
},
"20":{
dir:1,
items:{
"zyc-scr5.rkm":{},
"space2.rkm":{},
"boks.rkm":{},
"skythe.rkm":{},
"gorynych.rkm":{},
"mars.rkm":{},
"readme.txt":{},
"zyc-red.rkm":{},
"sabotazh.rkm":{},
"zyc-scr6.rkm":{},
"kubiki.rkm":{},
"zyc-scr2.rkm":{},
"ball.rkm":{},
"sos.rkm":{},
"spacegam.rkm":{},
"zycaps.rkm":{},
"zyc-scr4.rkm":{},
"scorpion.rkm":{},
"zyc-scr3.rkm":{},
"doroga.rkm":{},
"space.rkm":{},
"zyc-inst.rkm":{},
"kamnepad.rkm":{},
"zyc-scr1.rkm":{},
"fantast.rkm":{},
"shirker.rkm":{},
"karate.rkm":{},
"riverbed.rkm":{},
"detectiv.rkm":{},
"torpeda.rkm":{},
"panika.rkm":{},
},
},
"gm_3":{
dir:1,
items:{
"hockey.rkm":{},
"crossfir.rkm":{},
"stakan2.rkm":{},
"chess.rkm":{},
"gonka.rkm":{},
"file_id.diz.txt":{},
"liqsky.rkm":{},
"maze.rkm":{},
"alambush.rkm":{},
"zstation.rkm":{},
"sprint.rkm":{},
"klad.rkm":{},
"descript.ion":{},
"saboteur.rkm":{},
"skachki.rkm":{},
"mars.rkm":{},
"perelet.rkm":{},
"rocker.rkm":{},
"barmen.rkm":{},
"tetris.rkm":{},
"kindzadz.rkm":{},
"xonmicr.rkm":{},
"pacman.rkm":{},
"gm_3.txt":{},
"othello.rkm":{},
"volcano.rkm":{},
"boulder.rkm":{},
"starrid.rkm":{},
"starwars.rkm":{},
"snakes.rkm":{},
"torpatt.rkm":{},
"xonixzm.rkm":{},
"mach3.rkm":{},
"life.rkm":{},
"tennis.rkm":{},
"6games.rkm":{},
"reversi2.rkm":{},
"digger.rkm":{},
"stakan.rkm":{},
"stakan3.rkm":{},
"mines.rkm":{},
},
},
"08":{
dir:1,
items:{
"chernyi.rkm":{},
"snake.rkm":{},
"fondbirz.rkm":{},
"gorynych.rkm":{},
"skachki.rkm":{},
"bomber.rkm":{},
"readme.txt":{},
"pentis.rkm":{},
"tsanshi3.rkm":{},
"kooperat.rkm":{},
"ball.rkm":{},
"tsanshi.rkm":{},
"barmen.rkm":{},
"pifpaf.rkm":{},
"poker.rkm":{},
"liquid.rkm":{},
"saper2.rkm":{},
"piton3.rkm":{},
"ataka.rkm":{},
"saper.rkm":{},
"sad.rkm":{},
"slams.rkm":{},
"life.rkm":{},
"stakan.rkm":{},
"draznil.rkm":{},
"torpeda.rkm":{},
"redflow.rkm":{},
},
},
"01":{
dir:1,
items:{
"tsirk.rkm":{},
"edassm.rkm":{},
"udav.rkm":{},
"klad.rkm":{},
"readme.txt":{},
"edtxt.rkm":{},
"xonix.rkm":{},
"disassm.rkm":{},
"tetris.rkm":{},
"pacman.rkm":{},
"otladch.rkm":{},
"lestnica.rkm":{},
"grafed.rkm":{},
"zagruzch.rkm":{},
"basic.rkm":{},
"bystsch.rkm":{},
},
},
"10":{
dir:1,
items:{
"bascpm.rkm":{},
"bascol.rkm":{},
"basmikrn.rkm":{},
"compcode.rkm":{},
"grafred2.rkm":{},
"readme.txt":{},
"sbasicm.rkm":{},
"libpcode.rkm":{},
"farida.rkm":{},
"imagemak.rkm":{},
"insimag.rkm":{},
"demopcod.pas":{},
"copy18.rkm":{},
"imageut1.rkm":{},
"bascolpr.bas":{},
"genpcode.rkm":{},
"imageut2.rkm":{},
},
},
"gm_1":{
dir:1,
items:{
"gma_1.txt":{},
"file_id.diz.txt":{},
"descript.ion":{},
"lestnica.rkm":{},
"rikoshet.rkm":{},
"reversi.rkm":{},
"circus.rkm":{},
},
},
"07":{
dir:1,
items:{
"prdisp.tx":{},
"monmikr2.tx":{},
"prpdp.tx":{},
"forth4.tx":{},
"forth2.tx":{},
"inst-mt.tx":{},
"dr.tx":{},
"inst-be.tx":{},
"readme.txt":{},
"edtxt.rkm":{},
"prbis.tx":{},
"forth3.tx":{},
"drv-okno1.tx":{},
"instbdu1.tx":{},
"monrkmk2.tx":{},
"forth1.tx":{},
"instbdu3.tx":{},
"inst-mus.tx":{},
"inst-dch.tx":{},
"kiril.tx":{},
"instbdu2.tx":{},
"compas2.tx":{},
"okno_end.tx":{},
"inst-bsd.tx":{},
"drv-okno3.tx":{},
"utilita":{
dir:1,
items:{
"help.tx":{},
"r.txt":{},
"F.TXT":{},
"help.txt":{},
"t.txt":{},
"tt.txt":{},
"Recall.exe":{},
},
},
"inst-cop.tx":{},
"inst-bis.tx":{},
"monmikr.tx":{},
"forth5fs.tx":{},
"inst-nt.tx":{},
"instbdu4.tx":{},
"svetpris.rkm":{},
"drv-okno2.tx":{},
"compas1.tx":{},
"dump.rkm":{},
"compas3.tx":{},
"abacus.tx":{},
"monrkmk1.tx":{},
"inst-bdz.tx":{},
"okno_en2.tx":{},
"monrkmk.rkm":{},
"i-be-mk.tx":{},
},
},
"03":{
dir:1,
items:{
"tychon.rkm":{},
"zagrbsv.rkm":{},
"monitbsv.rkm":{},
"readme.txt":{},
"drvloknt.rkm":{},
"disassrs.rkm":{},
"dumpchec.rkm":{},
"disassmk.rkm":{},
"ddt.rkm":{},
"best-ed.rkm":{},
"drvcennt.rkm":{},
"tedmicro.rkm":{},
"ed-popov.rkm":{},
"adaptpo.rkm":{},
"zagr_bsv.rkm":{},
"basicmm.rkm":{},
"basicnt.rkm":{},
},
},
"11":{
dir:1,
items:{
"grafika.bas":{},
"insbcol4.bas":{},
"readme.txt":{},
"teletest.bas":{},
"insbcol3.bas":{},
"insbcol2.bas":{},
"colormus.rkm":{},
"bascolor.rkm":{},
"insbcol1.bas":{},
"insbcol5.bas":{},
"inscoltv.rkm":{},
},
},
"02":{
dir:1,
items:{
"redassm.rkm":{},
"readme.txt":{},
"disassm.rkm":{},
"muraveyn.rkm":{},
"mesanina.rkm":{},
"hokkey.rkm":{},
"tennis.rkm":{},
"barman.rkm":{},
"micalc.rkm":{},
},
},
"06":{
dir:1,
items:{
"kosilka.rkm":{},
"meshanin.rkm":{},
"crossfir.rkm":{},
"krestiki.rkm":{},
"ralli.rkm":{},
"pvog3400.rkm":{},
"chess.rkm":{},
"boks.rkm":{},
"way.rkm":{},
"design1.rkm":{},
"taina.rkm":{},
"zstation.rkm":{},
"klad.rkm":{},
"mars.rkm":{},
"readme.txt":{},
"stranger.rkm":{},
"sos.rkm":{},
"desant0.rkm":{},
"football.rkm":{},
"soldier.rkm":{},
"boulder.rkm":{},
"scvosh.rkm":{},
"hokkey.rkm":{},
"landmoon.rkm":{},
"faraon.rkm":{},
"karate.rkm":{},
"reversi.rkm":{},
"lestn2.rkm":{},
},
},
"gm_2":{
dir:1,
items:{
"file_id.diz.txt":{},
"udav.rkm":{},
"descript.ion":{},
"wayp.rkm":{},
"bomber.rkm":{},
"pentis.rkm":{},
"xonix.rkm":{},
"ball.rkm":{},
"shturm_k.rkm":{},
"garden.rkm":{},
"gm_2.txt":{},
"tennisdk.rkm":{},
"life.rkm":{},
"panika.rkm":{},
},
},
"16":{
dir:1,
items:{
"urmash2.rkm":{},
"readme.txt":{},
"scrgen.rkm":{},
"volkano.rkm":{},
"sokoban.rkm":{},
"insscgen.bin":{},
"tetrisp.rkm":{},
"rubic.rkm":{},
"sossyst.rkm":{},
"xonixmic.rkm":{},
"urmash3.rkm":{},
"steklo.rkm":{},
"insbox.rkm":{},
"urmash0.rkm":{},
"shalun.rkm":{},
"polechud.rkm":{},
"urmash1.rkm":{},
"inssos.rkm":{},
"sosdb.tx":{},
},
},
"09":{
dir:1,
items:{
"rom4.rkm":{},
"instsc.rkm":{},
"handikr.rkm":{},
"readme.txt":{},
"poisk.rkm":{},
"vvodrk86.rkm":{},
"clock.rkm":{},
"lightpen.rkm":{},
"taylor12.rkm":{},
"golos2.rkm":{},
"forth.rkm":{},
"tailor10.rkm":{},
"drvmagn.rkm":{},
"floatsix.rkm":{},
"vyvodrk.rkm":{},
"supercal.rkm":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"bios.bin":{},
},
},
"doc":{
dir:1,
items:{
"Microsha_Floppy_controller_circuit.png":{},
"Microsha_S_N_Popov_Personal_computer_Microsha.djvu":{},
"Microsha_PCB.pdf":{},
"Microsha_Floppy_controller_PCB.png":{},
"Microsha_Circuit_numbers.pdf":{},
"Microsha_Circuit_chars.pdf":{},
"Microsha_Circuit.jpg":{},
"Microsha_User_manual.djvu":{},
},
},
},
},
"_C8080_compiler_last_broken_sources":{
dir:1,
items:{
"с8080.sln":{},
"stdafx.cpp":{},
"writer.cpp":{},
"stdafx.h":{},
"c8080.h":{},
"a.h":{},
"a_compileconsts.cpp":{},
"asm.h":{},
"stdlib8080.inc":{},
"a_compile.cpp":{},
"tasm.exe":{},
"cmd_postincdec.cpp":{},
"c8080.cpp":{},
"b_compinestate.cpp":{},
"cmd_mul_const.cpp":{},
"b_load.cpp":{},
"stackloadsave.cpp":{},
"cmd_shift.cpp":{},
"a_compilevar.cpp":{},
"a_compileoperator.cpp":{},
"c8080.vcxproj":{},
"ctype.h":{},
"c_parser.cpp":{},
"b_zforflaga.cpp":{},
"b_saveregs.cpp":{},
"a_compileoperator2_16_const_add.cpp":{},
"assembler.cpp":{},
"a_compileoperatorv2_8_const.cpp":{},
"b_needfunction.cpp":{},
"c_parser.h":{},
"a_compileset.cpp":{},
"a_compileoperatorv2_16_const.cpp":{},
"b_fork.cpp":{},
"-clean.bat":{},
"a_compileoperator2_16.cpp":{},
"nodes.h":{},
"cmd_calloperator.cpp":{},
"a_compileoperator2_8.cpp":{},
"a_compileconsti.cpp":{},
"stackloadsave.h":{},
"stdlib.inc":{},
"debug":{
dir:1,
items:{
"c8080.exe":{},
"include":{
dir:1,
items:{
"op_div":{},
"string.h":{},
"memswap.c":{},
"32":{
dir:1,
items:{
"sub32_32.c":{},
"set32.c":{},
"add32_16.c":{},
"cmp32_32.c":{},
"add32_32.c":{},
"sub32_16.c":{},
"div32_16.c":{},
},
},
"op_xor16":{},
"memcmp.c":{},
"strcpy.c":{},
"op_mul16":{},
"op_div16":{},
"rand.c":{},
"memset.c":{},
"radio86rk":{
dir:1,
items:{
"print2.c":{},
"getmemtop.c":{},
"radio8screen0B.c":{},
"charAddr.c":{},
"directCursor.c":{},
"printn.c":{},
"radio8screenvars.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print2m.c":{},
"print.c":{},
"printm.c":{},
"puttape.c":{},
"radio8screen1B.c":{},
"radio8screen2B.c":{},
"radio8screen2A.c":{},
"printcn.c":{},
"bios.h":{},
"kbhit.c":{},
"print2n.c":{},
"putch.c":{},
"radio8screen0.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"radio8screen1.c":{},
"radio8screen2C.c":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"orion":{
dir:1,
items:{
"getmemtop.c":{},
"clrscr.c":{},
"puthex.c":{},
"puttape.c":{},
"bios.h":{},
"putch.c":{},
"crctape.c":{},
"gettape.c":{},
},
},
"op_cmp16":{},
"spec":{
dir:1,
items:{
"setcolor.c":{},
"clrscr.c":{},
"bios.h":{},
"setcolorautodisable.c":{},
"key.h":{},
"putch.c":{},
"color.h":{},
},
},
"op_and16":{},
"strchr.c":{},
"strlen.c":{},
"op_il":{},
"op_sub16":{},
"op_mod":{},
"op_or16":{},
"fs":{
dir:1,
items:{
"fs_gettotal.c":{},
"fs_reboot.c":{},
"fs_open0.h":{},
"fs_getfree.c":{},
"fs_mkdir.c":{},
"fs_write.c":{},
"fs_read.c":{},
"fs_init.c":{},
"fs_open0.c":{},
"fs_create.c":{},
"fs.h":{},
"fs_findnext.c":{},
"fs_seek.c":{},
"fs_swap.c":{},
"fs_exec.c":{},
"fs_move.c":{},
"fs_open.c":{},
"fs_findfirst.c":{},
"fs_getsize.c":{},
"fs_delete.c":{},
},
},
"op_mul":{},
"stdlib.h":{},
"32.h":{},
"n":{
dir:1,
items:{
"i2s.c":{},
"i2s32.c":{},
},
},
"op_shl":{},
"lvov":{
dir:1,
items:{
"pset.c":{},
"fillrect.c":{},
"vaddr.c":{},
"putchall.c":{},
"readme.txt":{},
"bda.h":{},
"preset.c":{},
"line.c":{},
"putcrc.c":{},
"pilotsound.c":{},
"locate.c":{},
"sound.c":{},
"pilotsound.h":{},
"bios.h":{},
"putchprinter.c":{},
"color.c":{},
"putch.c":{},
"rect.c":{},
"paint.c":{},
"video.h":{},
},
},
"op_ig":{},
"strcmp.c":{},
"memcpy.c":{},
"memchr8.c":{},
"n.h":{},
"mem.h":{},
"op_shr16":{},
"memcpy_back.c":{},
"apogey":{
dir:1,
items:{
"apogeyscreen0.c":{},
"print2.c":{},
"getmemtop.c":{},
"charAddr.c":{},
"directCursor.c":{},
"apogeyscreen3C.c":{},
"apogeyscreen2C.c":{},
"printn.c":{},
"apogeyscreen0B.c":{},
"apogeyscreen2A.c":{},
"waithorzsync.c":{},
"clrscr.c":{},
"puthex.c":{},
"print2m.c":{},
"print.c":{},
"printm.c":{},
"apogeyscreen1.c":{},
"puttape.c":{},
"apogeyscreenvars.c":{},
"apogeyscreen2B.c":{},
"printcn.c":{},
"apogeyscreen3B.c":{},
"bios.h":{},
"apogeyscreen3A.c":{},
"apogeyscreen1B.c":{},
"kbhit.c":{},
"print2n.c":{},
"putch.c":{},
"crctape.c":{},
"print2cn.c":{},
"gettape.c":{},
"sound.h":{},
"gotoxy.c":{},
"screen_constrcutor.h":{},
"video.h":{},
},
},
"op_shr":{},
},
},
},
},
"cmd_incdec.cpp":{},
"a_compilesave.cpp":{},
"a_compilecondoperator.cpp":{},
"cmd_set8.cpp":{},
"cmd_add16.cpp":{},
"finlib":{
dir:1,
items:{
"file.h":{},
"winapi_exception.h":{},
"string.h":{},
"findfiles.h":{},
"exception.cpp":{},
"std.h":{},
"replace.cpp":{},
"string.cpp":{},
"types.h":{},
"exception.h":{},
"replace.h":{},
"file.cpp":{},
"findfiles.cpp":{},
"winapi_exception.cpp":{},
"fillbuffer.h":{},
},
},
"b.h":{},
"cmd_cmpimm16.cpp":{},
"a_compilesetv2_swap.cpp":{},
"a_compilesetv2_nswap.cpp":{},
"cmd_call.cpp":{},
"a_compileoperatorv2_16.cpp":{},
"cmd_alu.cpp":{},
"a_compileconvert.cpp":{},
"b_writejmp.cpp":{},
"a_compilemonooperator.cpp":{},
"a_compiledeaddr.cpp":{},
"cmd_mul16_const.cpp":{},
"cmd_callmonooperator.cpp":{},
"mem.h":{},
"b_zforflag8.cpp":{},
"tasm85.tab":{},
"a_compileincdecoperator.cpp":{},
"common.h":{},
"cmd_set16.cpp":{},
"assembler.h":{},
"cmd_alu16.cpp":{},
"a_compileoperatorv2_8.cpp":{},
},
},
"_Texas Instruments TI99_GROM_Emulator":{
dir:1,
items:{
"ready.jpg":{},
"ti99_grom.c":{},
},
},
"_pdp11asm":{
dir:1,
items:{
"test1":{
dir:1,
items:{
"bk0010_miner.bin":{},
"bk0010_miner.lst":{},
"readme.txt":{},
"-compile-and-run-.bat":{},
"bk0010_miner.asm":{},
"resources":{
dir:1,
items:{
"n4.bmp":{},
"1.bmp":{},
"n7.bmp":{},
"bad.bmp":{},
"cursor.bmp":{},
"good.bmp":{},
"block.bmp":{},
"n5.bmp":{},
"n2.bmp":{},
"7.bmp":{},
"2.bmp":{},
"8.bmp":{},
"f.bmp":{},
"un.bmp":{},
"logo.bmp":{},
"q.bmp":{},
"win.bmp":{},
"0.bmp":{},
"n9.bmp":{},
"b.bmp":{},
"n3.bmp":{},
"n6.bmp":{},
"6.bmp":{},
"n0.bmp":{},
"5.bmp":{},
"4.bmp":{},
"3.bmp":{},
"n8.bmp":{},
"n1.bmp":{},
},
},
},
},
"test2":{
dir:1,
items:{
"scale144.lst":{},
"-compile-and-run-.bat":{},
"scale144.bin":{},
"scale144.mac":{},
},
},
"pdp11asm":{
dir:1,
items:{
"lstwriter.h":{},
"c_bitmap.cpp":{},
"stdafx.cpp":{},
"stdafx.h":{},
"c_8080.cpp":{},
"compiler.h":{},
"c_pdp11.cpp":{},
"lstwriter.cpp":{},
"c_common.cpp":{},
"pdp11asm.cpp":{},
"output.h":{},
"parser.cpp":{},
"pdp11asm.vcxproj":{},
"parser.h":{},
},
},
"release":{
dir:1,
items:{
"pdp11asm.exe":{},
},
},
"test4":{
dir:1,
items:{
"test.bin":{},
"test.lst":{},
"-compile.bat":{},
"test.asm":{},
},
},
"pdp11asm.sln":{},
"test3":{
dir:1,
items:{
"test.bin":{},
"test.lst":{},
"-compile.bat":{},
"shell.asm":{},
},
},
},
},
"Electronica_MS_6312_Inkjet_printer":{
dir:1,
items:{
"english.txt":{
name:"Electronica MS6312",
params:"Year\x09≤1991",
body:"Elektronica MS6312 is a Soviet inkjet printer. Cartridge with liquid ink is used\x0Ain inkjet printers. Ink is pushing out of the cartridge on the paper sheet. In\x0Athis printer, pushing occurs due to fast heating ink. A tiny part of the ink is\x0Aheated and the wapour push emitted a tiny drop of ink on a sheet of paper. This\x0Aprinting principle is quieter, faster and better quality than dot matrix\x0Aprinters.\x0A\x0AIn the late 80s, dot matrix printer was a dream. Matrix and inkjet printers are\x0Avery similar. In these printers, the print head moves left and right on a sheet\x0Aof paper, slowly drawing letters and pictures. Matrix printers use an ink\x0Aribbon. Metal needles hit the tape dozens of times per second. The needles are\x0Apressed ink ribbon to a sheet of paper. They squeeze the ink out of the tape,\x0Aleaving ink on the sheet. Sometimes dry-dye plastic tapes are used, but the\x0Aessence it doesn't change. It's slow, noisy and poor quality. But at that time\x0Amany people who use computers could not even imagine that there are other\x0Aprinters. Quieter and faster. Printers that can be lifted with one hand. Like\x0Athe \x22Electronics MS6312\x22 printer.\x0A\x0AThe Electronics MS6312 printer uses a Soviet print head. Such head is no longer\x0Aavailable for sale. But we must praise the engineers, because fastening and\x0Acontacts of the Soviet head are fully compatible with the imported head\x0AHP51604A. This head can still be found in stores. The imported head is higher\x0Asupply voltage, so you need to replace the zener diode on the printer PCB. It\x0Adescribed in the instructions for the printer.\x0A\x0AThe PCB contains a standard circuit based on the KR580VM80A (i8080)\x0Amicroprocessor. Each KR580VV55A (i8255) chip is a 24-bit parallel port, that is,\x0Aa GPIO. Chip KR573RU10 (HM6516-9) is 2 kilobytes of RAM. White chip KR573RF4A\x0A(2764) is 8 kilobytes of ROM. This is where the printer program is stored. The\x0Asmall KR580GF24 (i8224) is a master clock. All together it's almost ATMega8 \x0Amicrocontroller. The remaining microcircuits are current amplifiers and simple\x0Alogics.\x0A",},
"photo":{
dir:1,
items:{
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"compatible_cartridge_hp51604a.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Электроника МС6312",
params:"Год\x09≤1991",
body:"Электроника МС6312 это советский струйный принтер. В струйных принтерах\x0Aиспользуется ёмкость с жидкими чернилами. Чернила из ёмкости выпрыскиваются\x0Aна лист бумаги. В этом принтере выпрыскивание происходит из-за резкого нагрева\x0Aчернил. Нагревается крохотная часть чернил и образующиеся газы выбрасывает\x0Aкрохотную капельку чернил на лист бумаги. Такой принцип печати тише, быстрее и\x0Aкачественнее, чем у матричных принтеров.\x0A\x0AВ конце 80-х пределом мечтаний был матричный принтер. Матричные и струйные\x0Aпринтеры очень похожи. В этих принтерах печатающая головка перемещается\x0Aвлево-вправо по листу бумаги, неспешно рисуя буквы и картинки. В матричных\x0Aпринтерах используется красящая лента. Обычно это ткань пропитанная чернилами.\x0AМеталлические иголки десятки раз в секунду ударяют по ленте. Иголки прижимают\x0Aкрасящую ленту к листу бумаги. Они выжимает из ленты чернила, оставляя на листе\x0Aбумаги точки. Иногда используются пластиковые ленты с сухим красителем, но сути\x0Aэто не меняет. Это медленно, шумно и не качественно. Но в то время многие\x0Aпользующиеся компьютерами люди даже представить себе не могли, что существуют\x0Aдругие принтеры. Более тихие и быстрые. Принтеры, которые можно поднять одной\x0Aрукой. Как принтер \x22Электроника МС6312\x22. Большинство людей и матричных принтеров\x0Aто не видело. Люди пользовались печатными машинками.\x0A\x0AВ принтере \x22Электроника МС6312\x22 применяется советская печатающая головка. Такую\x0Aголовку больше не найти в продаже. Но надо похвалить инженеров, потому что\x0Aкрепление и контакты советской головки полностью соответствуют импортной головке\x0AНР51604А. Эту головку еще можно найти в магазинах. У импортной головки выше\x0Aнапряжение питания, поэтому необходимо заменить стабилитрон на плате принтера.\x0AНапряжение питания необходимо увеличить с 18В до 24В, что требует замены \x0Aстабилитрона КС162А на Д814Д.\x0A\x0AК этому принтеру подходит драйвер Diconix-150 Plus.\x0A\x0AНа плате принтера собрана стандартная схема на микропроцессоре КР580ВМ80А.\x0AКаждая микросхема КР580ВВ55А это параллельный 24-х битный порт, то есть GPIO.\x0AМикросхема КР573РУ10 это 2 килобайта оперативной памяти. Белая микросхема\x0AКР573РФ4А это 8 килобайт постоянной памяти. Тут хранится программа принтера.\x0AМаленькая КР580ГФ24 это задающий генератор. Всё вместе это почти что\x0Aмикроконтроллер ATMega8. Остальные микросхемы это усилители тока и мелкая\x0Aлогика.\x0A\x0A",},
"doc":{
dir:1,
items:{
"Electronica_MS_6312_Inkjet_printer_Circuit_2.png":{},
"Electronica_MS_6312_Inkjet_printer_Circuit_1.png":{},
},
},
},
},
"Poisk":{
dir:1,
items:{
"english.txt":{
name:"Poisk",
params:"Year\x091991\x0ARAM\x09128 - 512 kB\x0AROM\x098 kB\x0ACPU\x09i8088 5 MHz\x0AGraph\x09320x200x4, 560x200x3, 640x200x2\x0ASound\x09i8253\x0AGroup\x09IBM PC",
body:"TODO",},
"tools":{
dir:1,
items:{
"cas2wav":{
dir:1,
items:{
"wav2cas_x64.exe":{},
"wav2cas.exe":{},
"cas2wav.exe":{},
"sources":{
dir:1,
items:{
"cas2wav.pas":{},
"poisk.txt":{},
"wav2cas.pas":{},
"cas2wav.cpp":{},
},
},
},
},
},
},
"photo":{
dir:1,
items:{
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"extensions":{
dir:1,
items:{
"isa8_adapter":{
dir:1,
items:{
"long_adapter":{
dir:1,
items:{
"gerber":{
dir:1,
items:{
"connecting.extrep":{},
"connecting.txt":{},
"connecting.gbl":{},
"connecting.ldp":{},
"connecting.gbp":{},
"connecting.gtp":{},
"connecting.gts":{},
"cam.rpt":{},
"connecting.rep":{},
"cam.drl":{},
"connecting.drr":{},
"about.txt":{},
"connecting.gbo":{},
"status report.txt":{},
"connecting.gm2":{},
"connecting.gto":{},
"connecting.gbs":{},
"connecting.apr":{},
"connecting.rul":{},
"connecting-macro.apr_lib":{},
"connecting.gtl":{},
},
},
"long_adapter.jpg":{},
"connecting.lay6":{},
"connecting.pdf":{},
},
},
"perehodnik_chn-2-isa8":{
dir:1,
items:{
"k901.pcb":{},
"s901.pcb":{},
"p1-isa8.txt":{},
},
},
"manual.odt":{},
"short_adapter":{
dir:1,
items:{
"adapter_photo.jpg":{},
"gerber":{
dir:1,
items:{
"connecting.extrep":{},
"connecting.txt":{},
"connecting.gbl":{},
"connecting.ldp":{},
"connecting.gbp":{},
"connecting.gtp":{},
"connecting.gts":{},
"cam.rpt":{},
"connecting.rep":{},
"cam.drl":{},
"connecting.drr":{},
"about.txt":{},
"connecting.gbo":{},
"status report.txt":{},
"connecting.gm2":{},
"connecting.gto":{},
"connecting.gbs":{},
"connecting.apr":{},
"connecting.rul":{},
"connecting-macro.apr_lib":{},
"connecting.gtl":{},
},
},
"connecting.lay6":{},
"short_adapter.jpg":{},
"connecting.pdf":{},
},
},
"roms_for_external_video":{
dir:1,
items:{
"msel_d6_2208_512k_vga.r4a":{},
"bios_vga-ega-cga_v2.5_pep_1993.bin":{},
"msel_d7_2203_vga.r4a":{},
"msel_d6_2208_128k_vga.r4a":{},
"b109_РТ4_st_640k_for_128k.r4a":{},
},
},
},
},
"Poisk_640_kB_RAM_Extension.jpg":{},
},
},
"sources":{
dir:1,
items:{
"drivers":{
dir:1,
items:{
"hpc-p.asm":{},
"drv20.asm":{},
},
},
"bios2":{
dir:1,
items:{
"d2.asm":{},
"biosequ1.asm":{},
"int12.asm":{},
"int17.asm":{},
"int15.asm":{},
"kbr.asm":{},
"poiskpr.asm":{},
"int_1a.asm":{},
"altgen.asm":{},
"chargen.asm":{},
"int_70.asm":{},
"hd_setup.asm":{},
"int11.asm":{},
"biosequ.asm":{},
"ivk_tit.asm":{},
"int5.asm":{},
"w64.asm":{},
"d3.asm":{},
"tyme_1.asm":{},
"int1a.asm":{},
"int14.asm":{},
"int10.asm":{},
"int13.asm":{},
"d7.asm":{},
"set_dop.asm":{},
"tyme_cmo.asm":{},
"int8.asm":{},
"d8.asm":{},
},
},
"bios":{
dir:1,
items:{
"tbl_int9.asm":{},
"int16n.asm":{},
"int10_bn.asm":{},
"int12.asm":{},
"int10_c.asm":{},
"alttab.asm":{},
"int9.asm":{},
"int10_b2.asm":{},
"bios.asm":{},
"drv20.asm":{},
"int11.asm":{},
"int19.asm":{},
"equ.asm":{},
"tbl_kbdp.asm":{},
"int15_a.asm":{},
"crt_gen.asm":{},
"int_time.asm":{},
"int1a.asm":{},
"int15_np.asm":{},
"rwcas.asm":{},
"scanint2.asm":{},
"test.asm":{},
"int10_a.asm":{},
"nmiser.asm":{},
"stp1.asm":{},
"int13.asm":{},
"vek.asm":{},
"stp2.asm":{},
"restart.asm":{},
"int15_b.asm":{},
"asmi.c":{},
"monn.asm":{},
},
},
},
},
"russian.txt":{
name:"Поиск",
params:"Год\x091991\x0AОЗУ\x09128 - 512 кБ\x0AПЗУ\x098 кБ\x0AПроц\x09К1810ВМ88 5 MГц\x0AГрафика\x09320x200x4, 560x200x3, 640x200x2\x0AЗвук\x09К580ВИ53\x0AГруппа\x09IBM PC",
body:"Поиск это IBM PC-совместимый советский домашний компьютер. Его особенность это\x0Aэмуляция текстовых видеорежимов. Видеоадаптер этого компьютера не поддерживает\x0Aтекстовые видеорежимы.\x0A\x0AПеред советскими инженерами поставили задачу создать максимально простой\x0Aкомпьютер способный выполнять программы для IBM PC. C материнской платой и\x0Aконтроллером дисковода всё достаточно просто. Почти все программы обращаются к\x0Aконтроллеру дисковода через операционную систему или BIOS. Можно не создавать\x0A100% копию IBM PC. А вот с видеоадаптером всё плохо. Операционная система\x0AMS DOS не позволяла работать с графикой. Она не выступала посредником между\x0Aпрограммой и оборудованием. Сейчас этим занимается подсистема DirectX или GDI в\x0AWindows, а раньше любая программа должна была напрямую обращаться к\x0Aвидеоадаптеру.\x0A\x0AВидеоадаптер CGA, являвшийся стандартом IBM PC, был больше и сложнее других\x0Aвидеоадаптеров. Удивительно то, что его графические возможности были хуже других\x0Aвидеоадаптеров. В нем не было никакого ускорения графики, не было спрайтов, не\x0Aбыло прокрутки экрана, не было произвольной палитры, не было возможности\x0Aзагрузить собственный шрифт. А тот минимум функциональности, что был сделан, был\x0Aсделан не без изъянов. Текстовый режим 80x25 16 цветов выводится с помехами\x0A(т.н. снег), а графические режимы имели черезстрочную адресацию. Это из-за\x0Aпримитивности используемой микросхемы MC6845.\x0A\x0AМикросхема MC6845 формирует адрес чтения из видеопамяти и синхросигналы для\x0Aмонитора. Это универсальная микросхема с множеством настроек. Настройки нужны,\x0Aчто бы настроить микросхему под любой компьютер, под разрешение экрана этого\x0Aкомпьютера, под тактовые частоты, под определенный стандарт мониторов. Конкретно\x0Aв CGA корректных сочетаний настроек микросхемы MC6845 было не много: ширина\x0Aэкрана 640 или 320 точек, высота шрифта 2, 4 или 8 точек. Введя некорректные\x0Aнастройки можно было даже повредить монитор. Иногда встречались мониторы у\x0Aкоторых при снижении частоты строк значительно увеличивалось высокое напряжение,\x0Aчто приводило к повреждению монитора. Программистам не стоило самим лезть в\x0Aнастройки микросхем. Планировалось, что для настройки программисты будут\x0Aиспользовать стандартные функции видео BIOS. Но раз есть возможность влезть, то\x0Aпрограммисты будут лезть. Тем более, что фирма IBM не все возможности\x0Aвидеоадаптера сделала доступными через BIOS. Программист через BIOS мог включить\x0Aтекстовые режимы 40x25, 80x25, графические режимы 320x200x4, 640x200x2. А как\x0Aминимум два шикарных графических режима 160x100x16 и 640x200x16 NTSC они забыли.\x0AА ведь видеоадаптер CGA способен отобразить даже 160x100 1024 цвета на NTSC\x0Aтелевизоре. Так же они забыли вынести возможность регулировки положения\x0Aизображения на экране, которая очень полезна в играх. Поэтому программисты сами\x0Aнастраивали оборудование и поэтому микросхема MC6845 стала неотъемлемой частью\x0AIBM PC. Не нужной усложняющей неотъемлемой частью.\x0A\x0AРазработчики компьютера \x22Поиск\x22 решили обойтись без микросхемы MC6845. Решили\x0Aсделать видеоадаптер как в большинстве 8 битных компьютеров: ряд счетчиков, ряд\x0Aмультиплексоров, общее для видеоадаптера и процессора ОЗУ. Регистры микросхемы\x0AMC6845 эмулировали программно. Когда программа обращается к регистрам, то\x0Aпроисходит немаскируемое прерывание, запускается подпрограмма BIOS, которая и\x0Aвыполняет нужную работу.\x0A\x0AРазработчики не стали устанавливать на печатную плату детали для аппаратного\x0Aтекстового режима. Когда программа обращается к текстовой видеопамяти (0xB8000\x0Aи далее), то происходит немаскируемое прерывание, запускается подпрограмма BIOS,\x0Aкоторая рисует в графической видеопамяти (0xA0000 и далее) символ. Разработчики\x0Aне стали ставить отдельный микроконтроллер на клавиатуру, сканированием\x0Aклавиатуры занимается центральный процессор.\x0A\x0AВ итоге получился недорогой компьютер, не значительно сложнее 8 битных\x0Aкомпьютертов, способный выполнять программы для IBM PC. Компьютер получился\x0Aмедленнее оригинала из-за общей для видеоадаптера и процессора памяти. Из-за\x0Aупрощений в схеме. Из-за необходимости в текстовом режиме программно рисовать\x0Aсимволы. Если программа часто обращалась к регистрам CGA, то скорость падала еще\x0Aсильнее. Ну и некоторые игры не видели клавиатуру Поиска. Или просто блокировали\x0Aработу подпрограммы BIOS обслуживающей клавиатуру.\x0A\x0AТекстовый режим 40x25x16 по настоящему был графическим режимом 320x200x4,\x0Aпоэтому вместо 16 цветов пользователь видел лишь 4 цвета. А текстовый режим\x0A80x25x16 по настоящему был графическим режимом 640x200x2. Или 560x480x3. Это\x0Aновый видеорежим. В области 8x1 пикселей первая точка всегда черная, а остальные\x0A7 точек могут быть черными/белыми или черными/розовыми на выбор.\x0A\x0AКомпьютеры продавались со встроенным объемом оперативной памяти 128 или 512\x0Aкилобайт. Для модели 128 килобайт можно было докупить внешний модуль расширения\x0Aпамяти на 256 или 512 килобайт. Докупив контроллер дисковода можно пользоваться\x0Aоперационной системой MS DOS и множеством программ для неё. И даже MS Windows.\x0A\x0AПЗУ компьютера \x22Поиск\x22 содержит только BIOS. После включения компьютер может\x0Aтолько лишь загрузить программу с магнитной ленты или внешнего ПЗУ. При\x0Aустановке контроллера дисковода, компьютер загружается с дискеты.\x0A",},
"software":{
dir:1,
items:{
"tapes":{
dir:1,
items:{
"jaba.cas":{},
"uglotr.cas":{},
"chess.cas":{},
"joycas.cas":{},
"desant.cas":{},
"gorod.cas":{},
"pchela.cas":{},
"ispp.cas":{},
"malar.cas":{},
"planeta.cas":{},
"labir.cas":{},
"voley.cas":{},
"basic.cas":{},
"polet.cas":{},
"zm.cas":{},
"pirat.cas":{},
"liv.cas":{},
"test.cas":{},
"ptica.cas":{},
"kot.cas":{},
"tetris.cas":{},
"km.cas":{},
"ataka.cas":{},
"reversi.cas":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"poisk_1991.bin":{},
"poisk_1989.bin":{},
"test":{
dir:1,
items:{
"p1_t_ram.rf4":{},
"p1_t_pol.rf4":{},
"p1_t_i_o.rf4":{},
"p1_t_pls.rf4":{},
},
},
"unsorted":{
dir:1,
items:{
"firmware-poisk-1.txt":{},
"rompoisk":{
dir:1,
items:{
"i5_gr.com":{},
"poiskrom":{
dir:1,
items:{
"net_1005.bin":{},
"mat_6121.bin":{},
"net_1003.bin":{},
"mat_6119.bin":{},
"pois_net.bin":{},
"mat_6118.bin":{},
"poisk.bin":{},
"mat_6120.bin":{},
"net_1004.bin":{},
"mat_6127.bin":{},
},
},
"int17.asm":{},
"i5.com":{},
"int5.asm":{},
"i17.com":{},
"i5_gr.asm":{},
},
},
"p1":{
dir:1,
items:{
"adnrf2.dat":{},
"b942_n_4.dat":{},
"adn14.dat":{},
"adn16.dat":{},
"adn18.dat":{},
"cgan.dat":{},
"b942_5mb.dat":{},
"b942_n_6.dat":{},
"adn17.dat":{},
"adn_turb.dat":{},
"adn66.dat":{},
"cga-.dat":{},
"adnu.dat":{},
},
},
"poisk1-rom":{
dir:1,
items:{
"p1_t_pol.bin":{},
"biosp1s.rf4":{},
"p1_t_ram.rf4":{},
"p1_t_ram.bin":{},
"p1rt5_12.rt5":{},
"p1_t_pol.rf4":{},
"b_hd_v11.rf2":{},
"boot_net.rf4":{},
"p1re3_33.dat":{},
"p1_2131.rt5":{},
"p1_2203.rt5":{},
"p1rt4_51.dat":{},
"b_ngmd_t.rf2":{},
"p1rt4_50.dat":{},
"p1_2130.rt4":{},
"p1_2204.re3":{},
"p1rt4_11.dat":{},
"p1_22089.rt4":{},
"p1rt4_16.dat":{},
"p1_2207.rt4":{},
"p1_22085.rt4":{},
"p1_t_i_o.rf4":{},
"p1_2206.rt4":{},
"p1re3_33.bin":{},
"p1_t_pls.rf4":{},
"p1rt4_55.dat":{},
"b_ngmd_n.rf2":{},
"p1_t_i_o.bin":{},
"p1rt5_12.dat":{},
"bnet_n21.rf4":{},
},
},
},
},
"rt4_128kb_ram.bin":{},
"rt4_512kb_ram.bin":{},
},
},
"doc":{
dir:1,
items:{
"Poisk_Circuit.pdf":{},
"Poisk_Connectors.jpg":{},
},
},
},
},
"README.md":{},
"UT-88":{
dir:1,
items:{
"english.txt":{
name:"UT-88",
params:"Year\x091988\x0ARAM\x0964 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AGraph\x09128x50x2\x0AText\x0964x25x2",
body:"\x22UT-88\x22 is a self-assembly computer. In the 80s in the USSR in some magazines\x0Apublished a circuits of computers for self-assembly. These were very simple\x0Acomputers. First of all, they were not intended for playing or work, but\x0Afor teaching digital circuitry.\x0A\x0Aand Circuits description of the computer \x22UT-88\x22 were published in 1989 in the\x0Amagazine \x22UT for skillful hands\x22 (\x22Lefty\x22, supplement to the magazine \x22Young\x0ATechnician\x22, 1989, No. 2-8). And later in several more books. Based on one of\x0Athese books, I built this computer.\x0A",},
"my_sources":{
dir:1,
items:{
"emu":{
dir:1,
items:{
"emu.ini":{},
"config":{
dir:1,
items:{
"ut88m.cfg":{},
},
},
"emu.exe":{},
"ut88":{
dir:1,
items:{
"ut88.bin":{},
"layout.kbd":{},
"ut88m.fnt":{},
},
},
"plugins":{
dir:1,
items:{
"mc6502.dll":{},
"x86.dll":{},
"nairi.dll":{},
"z80.dll":{},
"rus8bit.dll":{},
"indicator.dll":{},
"pdp11.dll":{},
},
},
},
},
"circuits_png":{
dir:1,
items:{
"video.png":{},
"cpu_ram_keyboard.png":{},
"power.png":{},
},
},
"ut88_original_rom_sources_not_compatible_with_my_circuit":{
dir:1,
items:{
"ut88.bin.lst":{},
"ut88.asm":{},
"Makefile":{},
"ut88.creator":{},
"ut88.bin.check":{},
"ut88.cmm":{},
"ut88.bin":{},
"ut88.files":{},
"bin":{
dir:1,
items:{
"cmm":{},
"sjasmplus":{},
},
},
},
},
"ut88_rom_sources":{
dir:1,
items:{
"test0.c":{},
"files":{
dir:1,
items:{
"krestno.rku":{},
"volcano.rku":{},
"tetris.rku":{},
"basic80.rku":{},
"rendzu.rku":{},
"2048.rku":{},
"kalah.rku":{},
"reversi.rku":{},
"tapper.rku":{},
"klad.rku":{},
"rikoshet.rku":{},
"circus.rku":{},
},
},
"ut88.asm":{},
"Makefile":{},
"ut88.creator":{},
"bios.c":{},
"testf.c":{},
"calcsum.cpp":{},
"unmlz.h":{},
"ut88.files":{},
"common.h":{},
"bin":{
dir:1,
items:{
"cmm":{},
"megalz.exe":{},
"sjasmplus":{},
},
},
},
},
"rom":{
dir:1,
items:{
"ut88_6x10.png":{},
"ut88.bin":{},
"ut88_6x10.bin":{},
},
},
"circuits_kicad":{
dir:1,
items:{
"kicad":{
dir:1,
items:{
"power-rescue.lib":{},
"power-rescue.dcm":{},
"Switch-ex.lib":{},
"74xx-ex.lib":{},
"74xx_IEEE-ex.lib":{},
"Memory_EPROM-ex.dcm":{},
"Switch-ex.bck":{},
"74xx_IEEE-ex.dcm":{},
"ut88-rescue.lib":{},
"Connector-ex.bck":{},
"Interface-ex.bck":{},
"Connector_Generic-ex.lib":{},
"74xx-ex.dcm":{},
"Device-ex.dcm":{},
"Device-ex.bck":{},
"Connector_Generic-ex.bck":{},
"Memory_EPROM-ex.bck":{},
"power-ex.lib":{},
"74xx-ex.bck":{},
"tmp.lib":{},
"Connector-ex.dcm":{},
"Connector-ex.lib":{},
"MCU_Intel-ex.dcm":{},
"74xx_IEEE-ex.bck":{},
"tmp.dcm":{},
"MCU_Intel-ex.lib":{},
"Connector_Generic-ex.dcm":{},
"Switch-ex.dcm":{},
"power-ex.dcm":{},
"Device-ex.lib":{},
"Interface-ex.lib":{},
"ut88-rescue.dcm":{},
"power-ex.bck":{},
"MCU_Intel-ex.bck":{},
"tmp.bck":{},
"Interface-ex.dcm":{},
"Memory_EPROM-ex.lib":{},
},
},
"video":{
dir:1,
items:{
"sym-lib-table":{},
"alt.lib":{},
"video.sch":{},
"video.pro":{},
},
},
"power":{
dir:1,
items:{
"power.pro":{},
"power.sch":{},
"sym-lib-table":{},
"alt.lib":{},
},
},
"cpu":{
dir:1,
items:{
"cpu.sch":{},
"cpu-cache.lib":{},
"sym-lib-table":{},
"alt.lib":{},
"cpu.pro":{},
"cpu.sch-bak":{},
},
},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"how_do_i_build.html":{
dir:1,
items:{
"build42.jpg":{},
"build58.jpg":{},
"build52.jpg":{},
"build20.png":{},
"build17.png":{},
"build7.jpg":{},
"build60.jpg":{},
"build38.png":{},
"build21.png":{},
"build55.jpg":{},
"build71.png":{},
"build15.jpg":{},
"build27.jpg":{},
"build6.jpg":{},
"build66.jpg":{},
"build10.jpg":{},
"build30.png":{},
"build57.png":{},
"build13.png":{},
"cpu_rom_ram_ports_circuit.png":{},
"build3.png":{},
"build34.jpg":{},
"build36.jpg":{},
"build4.png":{},
"build39.png":{},
"russian.html":{},
"build63.jpg":{},
"build67.jpg":{},
"build70.jpg":{},
"build54.jpg":{},
"build43.png":{},
"build41.png":{},
"build49.jpg":{},
"build11.jpg":{},
"build12.png":{},
"build5.png":{},
"build18.png":{},
"build46.jpg":{},
"build35.png":{},
"build1.jpg":{},
"build45.png":{},
"build44.png":{},
"build16.jpg":{},
"video_circuit.png":{},
"build47.jpg":{},
"build14.jpg":{},
"build9.jpg":{},
"build53.jpg":{},
"build65.jpg":{},
"build29.jpg":{},
"build40.png":{},
"build64.jpg":{},
"build62.jpg":{},
"build19.png":{},
"build37.jpg":{},
"build59.png":{},
"build25.png":{},
"build23.png":{},
"build32.png":{},
"build33.jpg":{},
"build24.png":{},
"build28.png":{},
"build50.jpg":{},
"build26.jpg":{},
"build31.png":{},
"build56.jpg":{},
"build69.jpg":{},
"build61.jpg":{},
"build48.jpg":{},
"power_unit_circuit.png":{},
"build2.png":{},
"build8.jpg":{},
"build68.jpg":{},
"build51.jpg":{},
"build22.jpg":{},
},
},
"russian.txt":{
name:"ЮТ-88",
params:"Год\x091988\x0AОЗУ\x0964 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AГрафика\x09128x50x2\x0AТекст\x0964x25x2",
body:"\x22ЮТ-88\x22 это компьютер для самостоятельной сборки. В 1980-х годах в журналаx СССР\x0Aпубликовались схемы таких компьютеров. Это были очень простые компьютеры.\x0AВ первую предназначеные не для игры или работы, а для обучению цифровой\x0Aсхемотехнике. \x0A\x0AСхемы и описание компьютера \x22ЮТ-88\x22 были напечатаны в 1989 году в журнале\x0A\x22ЮТ для умелых рук\x22 (\x22Левша\x22, приложение к журналу \x22Юный техник\x22, 1989 год,\x0A№ 2-8). А позже еще в нескольких книжках. Я собрал свой компьютер по книге \x0A\x22От самоделок на логических элементах до микроЭВМ\x22.\x0A",},
"8bit_font_editor.html":{
dir:1,
items:{
"fonts":{
dir:1,
items:{
"dvk_8x8.js":{},
"ut88_6x8.js":{},
"korvet_8x16.js":{},
"dvk_ksm_8x8.js":{},
"b2m_6x8.js":{},
"rk_com_8x8.js":{},
"unior_8x8.js":{},
"partner_6x8.js":{},
"ut88_6x10.js":{},
"micro80_8x8.js":{},
"galaxy_8x12.js":{},
"rk_com_8x14.js":{},
"iskra_1080_8x8.js":{},
"rk_com_8x16.js":{},
"agat_6x8.js":{},
},
},
"russian.html":{},
"icons":{
dir:1,
items:{
"new.svg":{},
"undo.svg":{},
"save.svg":{},
"swap.svg":{},
"open.svg":{},
"redo.svg":{},
},
},
},
},
"doc":{
dir:1,
items:{
"rom_sources.txt":{},
"From_homemade_devices_on_logic_elements_to_microcomputers.pdf":{},
},
},
},
synced:{
"UT-88/how_do_i_build.html/russian.html": "Как я собирал ЮТ-88",
"UT-88/8bit_font_editor.html/russian.html": "Online редактор шрифтов",
},
},
"_Chips":{
dir:1,
items:{
"580vm80_revd.pdf":{},
"i8255.pdf":{},
"i8253.pdf":{},
"ay-3-8910-sch.pdf":{},
"i8275.pdf":{},
"i8251.pdf":{},
"ay-3-8910.pdf":{},
"i8080.pdf":{},
"i8257.pdf":{},
},
},
"Electronica_MS_1502":{
dir:1,
items:{
"english.txt":{
name:"Electronica MS1502",
params:"Year\x09≤1991\x0ARAM\x09128 kB\x0AROM\x0916 kB\x0ACPU\x09i8088 5.33 MHz\x0AGraph\x09320x200x4, 640x200x2\x0AText\x0980x25x16, 80x25x16\x0ASound\x09i8253\x0AGroup\x09IBM PC",
body:"TODO\x0A\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Электроника МС1502",
params:"Год\x09≤1991\x0AОЗУ\x09128 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09К1810ВМ88 5.33 MГц\x0AГрафика\x09320x200x4, 640x200x2\x0AТекст\x0980x25x16, 80x25x16\x0AЗвук\x09К580ВИ53\x0AГруппа\x09IBM PC",
body:"Электроника МС1502 это IBM PC XT совместимый советский домашний компьютер. \x0AТолько без дополнительных модулей это лишь половина IBM PC XT. У этого\x0Aкомпьютера нет встроенного контроллера дисковода, а объем памяти всего 128\x0Aкилобайт. Часть этой памяти использует видеоадаптер и BIOS. Программам остается\x0Aсовсем не много. Пользоваться этим компьютером как полноценным IBM PC у вас не\x0Aполучится. Лишь самые простые игры объемом до 64 килобайт и не требующие\x0Aоперационной системы MS DOS запустятся на этом компьютере.\x0A\x0AКонтроллер дисковода, дополнительная память и прочие модули расширения\x0Aустанавливаются в слоты над клавишами. По сути это ISA шина.\x0A\x0AЕсли нет контроллера дисковода, то программы загружается с магнитофона.\x0AМагнитофон подключается к разъему МАГ. У компьютера есть разъем ИРПР. Это LPT\x0Aпорт. Туда можно подключить принтер. Разъем ИРПС это COM порт. Туда можно\x0Aподключить модем, мышь или содержилить два компьютера между собой.\x0A\x0AС контроллером дисковода и дополнительными 512 килобайтами памяти это уже\x0Aпохоже на IBM PC XT. На этот компьютер можно установить MS DOS и даже запустить\x0AMS Windows первых версий.\x0A\x0AОбычно IBM PC-совместимые компьютеры содержат сотни деталей и состоят из\x0Aнескольких печатных плат. Благодаря применению специализированных микросхем в\x0Aэтом компьютере всего одна печатная плата. (Блок питания не в счет.) Эта плата\x0Aсовмещает в себе: материнскую плату, плату портов и CGA-совместимый\x0Aвидеоадаптер. Все это находится внутри специализированных микросхем:\x0AКР1545ХМ10009, КР1545ХМ10012, КР1545ХМ10015, КР1545ХМ10031, КР1545ХМ10042.\x0A\x0AЭто и хорошо и плохо. Если сломаются специализированные микросхемы, то купить их\x0Aнегде. Компьютер будет уже не починить. А компьютер этот не особо надежный.\x0A\x0AЭтот компьютер продавался с 1991 года (а может быть и ранее) за 1800 руб. Это\x0Aнаписано в журнале Радио 1992/12. В ПЗУ компьютера записана дата 10/05/1989.\x0A\x0AЭто одна из самых приятных клавиатур среди клавиатур прочих советских\x0Aкомпьютеров.\x0A\x0A\x0A",},
"software":{
dir:1,
items:{
"boot_floppy":{
dir:1,
items:{
"boot_floppy.ima.7z":{},
},
},
"tapes":{
dir:1,
items:{
"basic":{
dir:1,
items:{
"basic.mp3":{},
"basic.txt":{},
},
},
"04_yoga":{
dir:1,
items:{
"04_yoga_0.png":{},
"04_yoga.txt":{},
"04_yoga.mp3":{},
"04_yoga_1.png":{},
"04_yoga_original.txt":{},
},
},
"goody":{
dir:1,
items:{
"goody.mp3":{},
"goody_original.txt":{},
"goody.txt":{},
},
},
"08_grif":{
dir:1,
items:{
"08_grif.txt":{},
"08_grif_1.png":{},
"08_grif.mp3":{},
"ms1502_original_tape.info.txt":{},
"08_grif_0.png":{},
},
},
"14_gop":{
dir:1,
items:{
"14_gop_0.png":{},
"14_gop.mp3":{},
"ms1502_original_tape.info.txt":{},
"14_gop_1.png":{},
"14_gop.txt":{},
},
},
"05_kalah":{
dir:1,
items:{
"05_kalah.txt":{},
"05_kalah.mp3":{},
"05_kalah_0.png":{},
"05_kalah_original.txt":{},
"05_kalah_1.png":{},
},
},
"01_bitet":{
dir:1,
items:{
"01_bitet.txt":{},
"01_bitet.mp3":{},
"01_bitet_1.png":{},
"01_bitet_original.txt":{},
"01_bitet_0.png":{},
},
},
"03_bask":{
dir:1,
items:{
"03_bask_0.png":{},
"03_bask.mp3":{},
"03_bask.txt":{},
"03_bask_orginal.txt":{},
},
},
"15_latch":{
dir:1,
items:{
"15_latch.mp3":{},
"15_latch_1.png":{},
"15_latch.txt":{},
"ms1502_original_tape.info.txt":{},
"15_latch_0.png":{},
},
},
"02_anti":{
dir:1,
items:{
"02_anti.txt":{},
"02_anti_1.png":{},
"02_anti_0.png":{},
"02_anti_original.txt":{},
"02_anti.mp3":{},
},
},
"pacman":{
dir:1,
items:{
"pacman.mp3":{},
"pacman.txt":{},
},
},
"18_scull":{
dir:1,
items:{
"ms1502_original_tape2.info.txt":{},
"18_SCULL.mp3":{},
"18_scull_1.png":{},
"18_scull_0.png":{},
"18_SCULL.txt":{},
},
},
"06_matr":{
dir:1,
items:{
"06_matr_0.png":{},
"06_matr_1.png":{},
"06_matr.txt":{},
"06_matr.mp3":{},
"ms1502_original_tape.info.txt":{},
},
},
"17_baza":{
dir:1,
items:{
"17_baza.mp3":{},
"ms1502_original_tape2.info.txt":{},
"17_baza_1.png":{},
"17_baza_0.png":{},
"17_baza.txt":{},
},
},
"12_compet":{
dir:1,
items:{
"12_compet_0.png":{},
"12_compet_1.png":{},
"12_compet.mp3":{},
"ms1502_original_tape.info.txt":{},
"12_compet.txt":{},
},
},
"11_box":{
dir:1,
items:{
"11_box.txt":{},
"11_box_1.png":{},
"11_box_0.png":{},
"11_box.mp3":{},
"ms1502_original_tape.info.txt":{},
},
},
"16_redak":{
dir:1,
items:{
"16_redak.txt":{},
"16_redak_0.png":{},
"ms1502_original_tape2.info.txt":{},
"16_redak.mp3":{},
"16_redak_1.png":{},
},
},
"07_pac":{
dir:1,
items:{
"07_pac_0.png":{},
"07_pac.txt":{},
"07_pac_1.png":{},
"07_pac.mp3":{},
"ms1502_original_tape.info.txt":{},
},
},
"13_detectiv":{
dir:1,
items:{
"13_detectiv.txt":{},
"13_detectiv.mp3":{},
"13_detectiv_1.png":{},
"13_detectiv_0.png":{},
"ms1502_original_tape.info.txt":{},
},
},
"10_ltr":{
dir:1,
items:{
"10_ltr_1.png":{},
"10_ltr_0.png":{},
"10_ltr.mp3":{},
"10_ltr.txt":{},
"ms1502_original_tape.info.txt":{},
},
},
"09_s12345":{
dir:1,
items:{
"09_s12345.txt":{},
"09_s12345_0.png":{},
"09_s12345_1.png":{},
"ms1502_original_tape.info.txt":{},
"09_s12345.mp3":{},
},
},
},
},
},
},
"firmware":{
dir:1,
items:{
"dd26.bin":{},
"dd25.bin":{},
},
},
"doc":{
dir:1,
items:{
"Electronica_MS1502_0095_Circuit.djvu":{},
"Electronica_MS1502_PCB.png":{},
"Electronica_MS1502_0106_FDD_Shema.djvu":{},
"Electronica_MS1502_0101_Prilogenie5_Shema.djvu":{},
"Electronica_MS1502_Floppy_controller_circuit_2.jpg":{},
"Electronica_MS1502_0103_Copyrovshik.djvu":{},
"Electronica_MS1502_0100_Basic_Manual.djvu":{},
"Electronica_MS1502_0096_Circuit.djvu":{},
"Electronica_MS1502_0099_Manual.djvu":{},
"Electronica_MS1502_Book_1.djvu":{},
"Electronica_MS1502_Floppy_controller_circuit_1.jpg":{},
"Electronica_MS1502_Book_2.djvu":{},
"Electronica_MS1502_0094.djvu":{},
"Electronica_MS1502_0105.djvu":{},
"Electronica_MS1502_Floppy_controller_PCB.jpg":{},
"Electronica_MS1502_0102_Prilogenie8_Shema.djvu":{},
"Electronica_MS1502_0097_Monitor_Manual.djvu":{},
"Electronica_MS1502_0107_FDD.djvu":{},
"Electronica_MS1502_Circuit.png":{},
"Electronica_MS1502_0098_Soft_Manual.djvu":{},
"Electronica_MS1502_0104_FDD.djvu":{},
},
},
},
},
"Electronica_KR-03":{
dir:1,
items:{
"english.txt":{
name:"Electronica KR-03",
params:"Year\x091987\x0ARAM\x0916 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AText\x0964x25x2, 64x31x2\x0AGraph\x09128x62x2\x0AGroup\x09Radio 86RK",
body:"Electronica KR-03 is a Radio 86RK with 16 kilobytes of RAM in a good metal case\x0Awith a reliable power supply and an excellent keyboard.\x0A\x0AThere is only 16 kilobytes of RAM here, usually 32 kilobytes are installed in\x0ARadio 86RK. RAM can be increased by soldering memory chips on the second floor.\x0AIt's a pity to lose the warranty? It have no warranty in anycase. The box of the\x0Acomputer says \x22Radioconstructor\x22 only so that the seller would have a legal way\x0Anot to give a guarantee for the computer. The computer was sold assembled and\x0Aready to go.\x0A\x0AMS7007 keyboard is used here. This is one of the best keyboards in the USSR.\x0AShe is reliable and pleasant. But, this keyboard is not compatible with Radio\x0A86RK. In almost all games, the labels on the buttons will not correspond to\x0Areality. For the game man is moving to the right, you must press not the right\x0Aarrow, but some kind of symbol. If the program works with the keyboard through\x0Athe BIOS functions, then everything is fine. Only most games work directly with\x0Athe hardware, which is why such problems arise. But these are trifles. No normal\x0Agames for Radio 86RK is avialable, but typing on this keyboard is a pleasure.\x0A",},
"photo":{
dir:1,
items:{
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"Электроника КР-03",
params:"Год\x091987\x0AОЗУ\x0916 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AТекст\x0964x25x2, 64x31x2\x0AГрафика\x09128x62x2\x0AГруппа\x09Радио 86РК",
body:"Электроника КР-03 это Радио 86РК с оперативной памятью 16 килобайт в хорошем\x0Aметаллическом корпусе с надежным блоком питания и отличной клавиатурой.\x0A\x0AОперативной памяти тут всего 16 килобайт, обычно в Радио 86РК установлено 32\x0Aкилобайта. При большом жалении её можно увеличить, впаяв микросхемы памяти\x0Aвторым этажом. Жалко лишаться гарантии? А её нет. На коробке компьютера\x0Aнаписано \x22Радиоконструктор\x22 только для того, что бы у продавца был законный\x0Aспособ не давать гарантии на компьютер. Компьютер продавался собранным и\x0Aготовым к работе.\x0A\x0AТут используется клавиатура МС7007. Это одна из лучших клавиатур в СССР. Она\x0Aнадежная и приятная. Только с Радио 86РК эта клавиатура не совместима. Почти во\x0Aвсех играх надписи на кнопках не будут соответствовать действительности. Что бы\x0Aчеловечек двигался вправо, вам придется нажимать не стрелку вправо, а какой то\x0Aсимвол. Если программа работает с клавиатурой через функции BIOS, то всё\x0Aнормально. Только большинство игр напрямую работают с аппаратурой, поэтому и\x0Aвозникают такие проблемы. Но это мелочи. Игр нормальных для Радио 86РК нет всё\x0Aравно, а вот печатать на этой клавиатуре одно удовольствие.\x0A\x0A",},
},
},
"Electronica_NC_8010":{
dir:1,
items:{
"english.txt":{
name:"Electronica NC-8010",
params:"Year\x09≤1981\x0ARAM\x0932 kB\x0ACPU\x09K1801VE1\x0AGraph\x09512x256x2\x0AGrouph\x09BK0010",
body:"Electronica NC-8010 is a prototype of the BK0010 computer. A computer \x0AElectronica NC-8010 was produced in only a few copies. You can look at this\x0Acomputer in the museums of Angstrem or Sitronics.\x0A\x0AUntil ~1980, NII TT processors and microcontrollers had their own command set. \x0AProbably the computer \x22Electronica NT-8010\x22 uses a microcontroller K1801VE1 as\x0Aa central processor. The K1801VE1 microcontroller has a command set ENC-80T.\x0AThe microcontroller has 2 kilobytes ROM and 256 bytes RAM. It is interesting\x0Athat microcontroller has a 16 bit multiplication command.\x0A\x0AAfter ~1980, the \x22Research Institute of Precision Technologies\x22 switched to\x0Athe PDP-11 command set. Ordered or on their own initiative, this history is\x0Asilent. They redid 16 bit microcontroller K1801VE1 with the ENC-80T command set\x0Ato 16 bit microprocessor K1801VM1 with PDP-11 command set. They removed ROM and\x0ARAM. But in the K1801VM1 microprocessor left programmable timer, similar in\x0Afunction to timers of any microcontroller. For example, it can count the\x0Apulses coming to the processor pin.\x0A\x0AThe BK0010 computer uses the new K1801VM1 microprocessor.\x0A",},
"photo":{
dir:1,
items:{
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"Электроника НЦ8010",
params:"Год\x09≤1981\x0AОЗУ\x0932 кБ\x0AПроц\x09К1801ВЕ1\x0AГрафика\x09512x256x2\x0AГруппа\x09БК0010",
body:"\x22Электроника НЦ-8010\x22 это протип компьютера БК0010. Компьютер \x0A\x22Электроника НЦ-8010\x22 был произведен всего в нескольких экземплярах. Увидеть\x0Aэтот компьютер можно в музеях фирм Ангстрем или Ситроникс.\x0A\x0AДо ~1980 года процессоры и микроконтроллеры НИИ ТТ имели собственную систему\x0Aкоманд. Вероятно в компьютере \x22Электроника НЦ-8010\x22 используется микроконтроллер\x0AК1801ВЕ1 в качестве центрального процессора. У микроконтроллера К1801ВЕ1 система\x0Aкоманд ЭНЦ-80Т. В микроконтроллер встроено 2 килобайта постоянной памяти и 256\x0Aбайт оперативной памяти. Интересно то, что среди команд этого микроконтроллера\x0Aприсутствует команда умножения 16 битных чисел.\x0A\x0AПосле ~1980 года \x22НИИ Точных Технологий\x22 перешли на систему команд PDP-11.\x0AПриказали или по своей инициативе, это история умалчивает. Они переделали 16\x0Aбитный микроконтроллер К1801ВE1 с системой команд ЭНЦ-80Т в 16 битный\x0Aмикропроцессор К1801ВМ1 системой команд PDP-11. Они убрали постоянную и\x0Aоперативную память. Но в микропроцессоре К1801ВМ1 от микроконтроллера остался\x0Aпрограммируемый таймер, похожий по функциям на таймер любого микроконтроллера.\x0AНапример, он может считать импульсы поступающие на ножку процессора.\x0A\x0AВ компьютере БК0010 используется уже новый микропроцессор К1801ВМ1.\x0A\x0A",},
"doc":{
dir:1,
items:{
"k1801ve1.pdf":{},
},
},
},
},
"_Cmm_compilter_source":{
dir:1,
items:{
"Parser.h":{},
"Parser.ih":{},
"cmm.includes":{},
"Makefile":{},
"ParserPreinclude.h":{},
"lex.cc":{},
"utf8tocp1251.h":{},
"cmm.l":{},
"const.h":{},
"_test.asm":{},
"main.cpp":{},
"cmm.creator":{},
"Scanner.ih":{},
"Scannerbase.h":{},
"cmm.y":{},
"parse.cc":{},
"cmm.cflags":{},
"Makefile.dos":{},
"_test.c":{},
"test.asm":{},
"fstools.h":{},
"Scanner.h":{},
"_test.h":{},
"utf8tocp1251.cpp":{},
"cmm.files":{},
"build":{
dir:1,
items:{
},
},
"cmm.cxxflags":{},
"Parserbase.h":{},
"compatible.h":{},
},
},
"_Books":{
dir:1,
items:{
"Осваиваем микрокомпьютер К-2 Б.Р.Смит 1989.djvu":{},
"Осваиваем микрокомпьютер К-1 Б.Р.Смит 1989.djvu":{},
"Энциклопедия профессора Фортрана.djvu":{},
"Е.В.Шикин, А.В.Боресков. Компьютерная графика. Динамика, реалистические изображения.pdf":{},
"Д.М.Комский - Кружок Технической Кибернетики 3Mb.djvu":{},
"Мир компьютеров в вопросах и ответах 1988.pdf":{},
},
},
"Electronica_KR-04":{
dir:1,
items:{
"english.txt":{
name:"Electronica KR-04",
params:"Year\x091990\x0ARAM\x0962 kB\x0AROM\x096 kB\x0ACPU\x09i8080 2.5 MHz\x0AText\x0960x28x2, 30x28x4\x0AGraph\x09480x224x2, 240x224x4\x0ASound\x09i8253\x0AGroup\x09Radio 86RK",
body:"TODO\x0A",},
"tools":{
dir:1,
items:{
"rk2wav":{
dir:1,
items:{
"rk2wav.exe":{},
"rk2wav.ubuntu64":{},
"rk2wav.c":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Электроника КР-04",
params:"Год\x091990\x0AОЗУ\x0962 кБ\x0AПЗУ\x096 кБ\x0AПроц\x09К580ВМ80А 2.5 MГц\x0AТекст\x0960x28x2, 30x28x4\x0AГрафика\x09480x224x2, 240x224x4\x0AЗвук\x09К580ВИ53\x0AГруппа\x09Радио 86РК",
body:"У этого компьютера очень интересная и мощная графическая система, но появился он\x0Aочень поздно. Этот компьютер продавался собранным и готовым к работе, но без\x0Aкорпуса. На фото самодельный корпус. Его сделал прошлый владелец еще в 90-х.\x0AВероятно продавались еще и голые печатные платы. Я находил эти платы на интернет\x0Aбарахолках.\x0A\x0AВидеоадаптер этого компьютера построен на микросхеме КР580ВГ75. На такой же\x0Aмикросхеме построен видеоадаптер компьютера \x22Радио 86РК\x22. Поэтому можно было бы\x0Aсказать, что \x22Электроника КР04\x22 это один из \x22Радио 86РК\x22. Но он настолько лучше\x0Aлюбого \x22Радио 86РК\x22, что так говорить не хочется. Давайте сравним:\x0A\x0AВ компьютере\x22Радио 86РК\x22 неизменяемый знакогенератор на 128 символов.\x0AЗнакогенератор не содержит строчных букв. В компьютере \x22Электроника КР04\x22\x0Aзнакогенератор на 2048 символов. Символы находятся в оперативной памяти\x0Aкомпьютера и могут быть изменены в любой момент времени.\x0A\x0AВ компьютере \x22Радио 86РК\x22 размер символа 6x8 точек. В компьютере \x22Электроника\x0AКР04\x22 размер символа 8x8 точек.\x0A\x0AВ компьютере \x22Радио 86РК\x22 ширина экрана всего 64 символа. Текстовые режимы\x0A64x25x2, 61x27x2, 61x31x2. В компьютере \x22Электроника КР04\x22 текстовые режимы\x0A80x25x2, 64x25x2, 60x28x4, 40x25x4.\x0A\x0AВ компьютере \x22Радио 86РК\x22 графика ну очень низкого разрешения. Всего 128x62\x0Aточек. В компьютере \x22Электроника КР04\x22 есть графические режимы 480x224x2 и\x0A240x224x4. Любая точка может быть любого цвета. Есть тейловый графический режим,\x0Aкоторый ускоряет графику в играх в десятки раз.\x0A\x0AВ компьютере \x22Радио 86РК\x22 нет цвета. В компьютере \x22Электроника КР04\x22 4 цвета\x0Aвыбираются из палитры в 64 цвета.\x0A\x0AВ компьютере \x22Радио 86РК\x22 16 или 32 килобайта оперативной памяти. В компьютере\x0A\x22Электроника КР04\x22 62 килобайта.\x0A\x0AВ компьютере \x22Радио 86РК\x22 процессор работает на частоте 1.7 МГц. В компьютере\x0A\x22Электроника КР04\x22 процессор работает на частоте 2.5 МГц.\x0A\x0AС \x22Радио 86РК\x22 этот компьютер совместим только на уровне BIOS.\x0A\x0A*** Программное обеспечение ***\x0A\x0AЕсли перезагрузить компьютер с нажатой клавишей пробел, то запустится встроенная\x0Aпрограмма проверки ОЗУ. Если ОЗУ исправно, то на экране отобразится текст \x22ОЗУ\x0AИСПРАВНО\x22. Если ОЗУ неисправно, то прозвучит звуковой сигнал частотой 800 Гц и\x0Aдлительностью 2 секунды. При этом на экране может быть отображен номер\x0Aнеисправной микросхемы ОЗУ.\x0A\x0AПосле включения компьютера вам будет предложено выбрать режим экрана:\x0A\x0A\x2248K/40\x22 - текст 40x25, графика 240x224, 4 цвета, программам доступно 48 кБ ОЗУ.\x0A\x0A\x2248K/80\x22 - текст 80x25, графика 480x224, 2 цвета, программам доступно 48 кБ ОЗУ.\x0A\x0A\x2216K/64\x22 - текст 64x25, 2 цвета, адрес видеопамяти соответствует компьютеру\x0AРадио 86РК 16 кБ.\x0A\x0A\x2232K/64\x22 - текст 64x25, 2 цвета, адрес видеопамяти соответствует компьютеру\x0AРадио 86РК 32 кБ.\x0A\x0AДалее запускается программа \x22Монитор\x22. Поддерживаются команды D, F, M, T, C, S,\x0AG, O, I, R, описание которых можно посмотреть у Радио 86РК.\x0A\x0A*** Как работает видеоадаптер ***\x0A\x0AТекстовый режим 64x25, 2 цвета из палитры в 64 цвета. Размер символа 8x8\x0Aпикселей. Знакогенератор содержит 2048 символов, т.е. 16 переключаемых наборов\x0Aпо 128 символов и допускается не более 16 переключений наборов в одной строке\x0Aсимволов на экране. Есть аппаратная вертикальная и горизонтальная прокрутка.\x0AМожно устанавливать произвольный адрес видеопамяти, т.е. поддерживается\x0Aнесколько видеостраниц.\x0A\x0AГрафический режим 480x224, 2 цвета из палитры в 64 цвета. Это тоже аппаратный\x0Aтекстовый режим 60x28 с размером символа 8x8, где экран заполнен не\x0Aповторяющимися символами, а программист изменяет знакогенератор.\x0A\x0AКак соответствуют режимы 64x25 и 480x224? Эти числа написаны в паспорте\x0Aкомпьютера, но если посчитать на пальцах, то получается следующее. Тактовая\x0Aчастота пикселей в этом компьютере 10 000 000 Гц. В строке будет гарантированно\x0Aвидимых 10000000 Гц / 15625 Гц * 0,75 = 480 пикселей или 480 / 8 = 60 символов.\x0AВыходит, что в текстовом режиме 64x25, будет гарантированно видно только 60\x0Aсимволов, а 4 символа будут находится за краем экрана. Т.е. правильно было бы\x0Aего назвать 60x25. Некоторые старые аналоговые мониторы можно было настроить\x0Aтак, что бы они отображали больше, чем положено по стандарту, но все современные\x0Aцифровые телевизоры будут отображать лишь 60 символов по горизонтали.\x0A\x0AТекстовый режим 80x25, 2 цвета из палитры в 64 цвета. Размер символа 6x8\x0Aпикселей. Межстрочный отступ в 1 пиксель. Реализован программно на основе режима\x0Aописанного выше.\x0A\x0AТекстовый режим 60x28, 4 цвета из палитры в 64 цвета. Размер символа 4x8\x0Aпикселей. Цвет назначается не знакоместу, а символу. Т.е. буква A везде будет\x0Aодного цвета. Цвет назначается каждому пикселю символа, т.е. буква A может быть\x0Aмногоцветной. В остальном этот режим аналогичен первому режиму 64x25.\x0A\x0AГрафический режим 240x224, 4 цвета из палитры в 64 цвета. Это тот же текстовый\x0Aрежим описанный выше.\x0A\x0AТекстовый режим 40x25, 4 цвета из палитры в 64 цвета. Размер символа 6x8.\x0AМежстрочный отступ в 1 пиксель. Реализован программно на основе режима\x0Aописанного выше.\x0A\x0AМикросхема КР580ВГ75 имеет множество настроек, изменяя которые можно получить и\x0Aдругие видеорежимы.\x0A\x0AС помощью ESC кодов и функции вывода текста в BIOS можно переключать\x0Aвидеорежимы, настраивать палитру, устанавливать цвет, рисовать точки, линии,\x0Aизображения.\x0A\x0A",},
"software":{
dir:1,
items:{
"original_tape":{
dir:1,
items:{
"tetris.rkr":{},
"tetris_autostart.rkr":{},
"test_input.rkr":{},
"assembler.rkr":{},
"robots.rkr":{},
"basic_demo.bsm":{},
"speed.rkr":{},
"text_editor.rkr":{},
"basic.rkr":{},
},
},
},
},
"firmware":{
dir:1,
items:{
"dd29.bin":{},
"dd30.bin":{},
"dd28.bin":{},
},
},
"doc":{
dir:1,
items:{
"Electronica_KR-04_User_manual_and_circuits.djvu":{},
"Electronica_KR-04_User_manual.pdf":{},
},
},
},
},
"Mikro-88":{
dir:1,
items:{
"english.txt":{
name:"Micro 88",
params:"Year\x09≤1989\x0ARAM\x0932 kB\x0AROM\x092 kB\x0ACPU\x09i8080 1.7 MHz\x0AText\x0964x25x2\x0AGraph\x09128x62x2\x0AGroup\x09Radio 86RK",
body:"This is a strandard \x22Radio 86RK\x22 computer. This is a computer with very modest\x0Acapabilities. It hasn't graphics, only black and white text mode with no\x0Alowercase letters. But here is how it is qualitatively assembled, one feast for\x0Athe eyes.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Микро 88",
params:"Год\x09≤1989\x0AОЗУ\x0932 кБ\x0AПЗУ\x092 кБ\x0AПроц\x09К580ВМ80А 1.7 MГц\x0AТекст\x0964x25x2\x0AГрафика\x09128x62x2\x0AГруппа\x09Радио 86РК",
body:"Это обычный Радио 86РК компьютер, то есть компьютер с очень скромными\x0Aвозможностями. Графики нет, только черно-белый текстовый режим без строчных\x0Aбукв. Но вот как он качественно собран, одно загляденье.\x0A",},
},
},
"Scorpion_ZS_256_Turbo":{
dir:1,
items:{
"english.txt":{
name:"Scorpion ZS-256",
params:"Year\x091991\x0ARAM\x09256 kB\x0AROM\x0964 kB\x0ACPU\x09Z80 7 Mhz\x0AGraph\x09256x192x15\x0AЗвук\x09AY-3-8910\x0AIn ROM\x09Basic\x0AGroup\x09ZX Spectrum 128",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"7.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Скорпион ЗС-256 (Scorpion ZS-256)",
params:"Год\x091991\x0AОЗУ\x09256 кБ\x0AПЗУ\x0964 кБ\x0AПроц\x09Z80 7 МГц\x0AГрафика\x09256x192x15\x0AЗвук\x09AY-3-8910\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09ZX Spectrum 128",
body:"Примерно с 1990 года ZX Spectrum-совместимые компьютеры вытеснили все остальные\x0Aкомпьютеры в нашей стране. Во первых, потому что для компьютера ZX Spectrum было\x0Aвыпущено множество программ (игр). Во вторых, потому что это был простой и\x0Aдешевый компьютер, аналог которого можно было собрать из советских деталей.\x0A\x0AСамым известным ZX Spectrum-совместимым компьютером был компьютер \x22Ленинград\x22.\x0AВся страна производила этот компьютер. От студентов до заводов. Продавались\x0Aголые печатные платы или собранные платы или компьютеры в корпусе. Корпус и\x0Aклавиатура у компьютера \x22Ленинград\x22 могла быть любой. Собирали компьютеры из\x0Aчего угодно. Главное правило сборки - чем дешевле, тем лучше. Компьютер \x0A\x22Ленинград\x22 разработал Сергей Зонов и как вы можете догадаться, никто ему не \x0Aотчислял процент с продаж \x22Ленинградов\x22. Поэтому следующий свой компьютер \x0A\x22Scorpion ZS-256\x22 он попытался защитить от копирования. На фото ниже видно, что\x0Aвсе надписи с микросхем стерты. Это была защита от копирования. В \x0AСанкт-Петербурге была создана фирма \x22Скорпион\x22, которая продавала новый\x0Aкомпьютер. Буквы ЗС (ZS) в названии компьютера это инициалы разработчика.\x0A\x0AКомпьютер \x22Ленинград\x22 выполняет большинство программ для оригинального \x0Aкомпьютера \x22ZX Spectrum 48\x22. Следующий компьютер \x22Scorpion ZS-256\x22 помимо \x0Aэтого еще умел выполнять программы для компьютера \x22ZX Spectrum 128\x22. \x0AК компьютеру Скорпион можно подключить дисковод, который позволет быстро \x0Aзагружать программы. В ПЗУ компьютера Скорпион записана программа \x22отладчик\x22.\x0AВ любой момент времени выполняющуюся программу можно прервать и посмотреть как \x0Aона работает. Это очень упрощало разработку и взлом программ (игр, демо). \x0AУ Скорпиона в два раз больше оперативной памяти, чем у самого крутого \x0Aоригинального \x22ZX Spectrum 128\x22.\x0A\x0AПомимо этого в последних версиях \x22Скорпионов\x22 процессор мог работать в турбо-\x0Aрежиме. Тактовая частота процессора увеличивалась в два раза.\x0A\x0AРазъем с краю печатной платы предназначен для подключения расширений. Например:\x0Aконтроллеров мыши, жесткого диска, дополнительной памяти, звуковых синтезаторов\x0A... Этот разъем получил название \x22ZX Bus\x22. Он стал стандартом для всех\x0Aотечественных ZX Spectrum-совместимых компьютеров.\x0A\x0A",},
"doc":{
dir:1,
items:{
"Scoption_ZS_256_Circuit.djvu":{},
},
},
},
},
"Pioner":{
dir:1,
items:{
"english.txt":{
name:"Pioner",
params:"Year\x09≤1992\x0ARAM\x0948 kB\x0AROM\x092-10 kB\x0ACPU\x09i8080 2 MHz\x0AGraph\x09384x256x5, 384x256x8\x0AGroup\x09Specialist",
body:"Pioner is a regular \x22Specialist\x22 computer with 5 color graphics. It hasn't a\x0Aparallel port. And it has an incompatible keyboard.\x0A\x0AIn the factory configuration, computer has only one ROM chip of 2 kilobyte. ROM\x0Achip contain \x22Monitor, version 1\x22. In this configuration, the computer cannot\x0Arun most programs. The PCB has places for 4 additional ROM chips. I added 2 more\x0AROM chips and flashed \x22Monitor, version 2 \x22. For some reason, the CS signal was\x0Anot connected to the additional ROMs, so I added two wires. Aftar the computer\x0Acan run all programs.\x0A\x0AIn the factory configuration, the keyboard (matrix of keys, key codes) does not\x0Amatch the original computer \x22Specialist\x22. The keyboard normally work only in\x0Aprograms uses keyboard by standard ROM functions. In most game programs, the\x0Afunctions of the arrow keys performed by other (inconveniently located) keys.\x0AThe buttons are very hard. Perhaps over time, the rubber has changed its\x0Aproperties. Now the rubber is as hard as car tires. Buttons swing under the\x0Afinger in all directions like an analog stick. The keyboard uses a thin\x0Atextolite instead of a film membrane.\x0A\x0AOtherwise, this is the coolest and most beautiful Specialist that I have seen.\x0A\x0AI added one K565RU5 RAM chip (6264 compatible) over installed chips. This made\x0Ait possible to increase the number of colors to 8. I added 2 more wires for\x0ARAM pins.\x0A\x0AI added a parallel port. I soldered new K580VV55 chip (i8255 compatible) over\x0Afactory installed K580VV55 chip. The developers did not provide place on the\x0APCB for the second K580BB55 chip, which is a shame. Another wire with a CS\x0Asignal was pulled along the board to this chip. And from the chip there is\x0Aa whole loop of wires to the controller of the SD card. This upgrade does not\x0Alook so beautiful, but it's worth it. Now this is a computer \x22Specialist\x22 in the\x0Amaximum configuration, which is convenient not only for games, but also for\x0Adevelopment.\x0A\x0AMore information can be found in the Specialist folder.\x0A\x0A",},
"photo":{
dir:1,
items:{
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Пионер",
params:"Год\x09≤1992\x0AОЗУ\x0948 кБ\x0AПЗУ\x092-10 кБ\x0AПроц\x09К580ВМ80А 2 MГц\x0AГрафика\x09384x256x5/8\x0AГруппа\x09Специалист",
body:"Компьютер \x22Пионер\x22 это обычный компьютер \x22Специалист\x22 с 5-и цветной графикой,\x0Aбез параллельного порта и несовместимой клавиатурой.\x0A\x0AВ заводской комплектации в компьютере \x22Пионер\x22 установлена всего одна микросхема\x0AПЗУ на 2 килобайта содержащая \x22Монитор первой версии\x22. В таком виде компьютер\x0Aне может выполнять большинство программ. На печатной плате присутствуют места\x0Aпод 4 дополнительные ПЗУ. Я добавил еще 2 микросхемы ПЗУ и прошил \x22Монитор\x0Aвторой версии\x22. Почему-то до дополнительных ПЗУ не был доведен сигнал CS,\x0Aпоэтому мне пришлось протянуть по плате два провода. Теперь компьютер может\x0Aвыполнять все программы.\x0A\x0AВ заводской комплектации клавиатура (матрица клавиш, коды клавиш) не\x0Aсоответствует оригинальному компьютеру \x22Специалист.\x22 Клавиатура предсказуемо\x0Aбудет работать только в программах работающих через стандартные функции ПЗУ.\x0AВ большинстве игровых программ функции клавиш-стрелок будут выполнять другие\x0A(неудобно расположенные) клавиши. При этом клавиши очень жесткие. Возможно со\x0Aвременем резина изменила свои свойства. Сейчас резина жесткая как покрышки\x0Aавтомобиля. А еще кнопки качаются под пальцем во все стороны как аналоговый\x0Aджойстик, но это не мешает печатать. В клавиатуре вместо пленочной мембраны\x0Aиспользуется тонкий текстолит.\x0A\x0AВ остальном, это самый крутой и красивый Специалист, который я видел.\x0A\x0AЯ добавил одну микросхему оперативной памяти К565РУ5 вторым этажом, это\x0Aпозволило увеличить кол-во цветов до 8-и. Мне пришлось протянуть еще 2 провода.\x0A\x0AЯ добавил параллельный порт. Впаял микросхему К580ВВ55 вторым этажом. \x0AРазработчики не предусмотрели места под вторую микросхему К580ВВ55, обидно. Еще\x0Aодин провод с сигналом CS потянулся по плате до этой микросхемы. А от микросхемы\x0Aцелый шлейф проводов до контроллера контроллера SD-карты. Эта доработка выглядит\x0Aуже не так красиво, но она того стоит. Теперь это компьютер \x22Специалист\x22 в\x0Aмаксимальной комплектации, который удобен не только для игр, но и для\x0Aразработки.\x0A\x0AБольше инфомрации вы найдете в папке Specialist.\x0A",},
"doc":{
dir:1,
items:{
"Pioner_User_manual_and_circuits.djvu":{},
},
},
},
},
"_Sega_Genesis_gamespads_to_PS2":{
dir:1,
items:{
"photo3.jpg":{},
"circuit":{
dir:1,
items:{
"ps2k_d.lyt":{},
"ps2k.dsn":{},
"ps2k.lyt":{},
},
},
"circuit.png":{},
"photo2.jpg":{},
"software":{
dir:1,
items:{
"kb.prj":{},
"kb.c":{},
},
},
"photo1.jpg":{},
},
},
"Electronica_MS_5316_Floppy_drive":{
dir:1,
items:{
"english.txt":{
name:"Electronica MS5316 Floppy drive",
params:"Year\x09≤1992",
body:"\x22Electronica MS5316\x22 is a case with a power supply and a floppy drive. Inside\x0Athe case different Soviet drives could be installed: MS5305, MS5311, MS5313 and\x0Aeven foreign drives. For example, I have a japanese drive \x22MITSUBISHI ELECTRIC \x0AU288Y073\x22. The lever is in the wrong place. Part of the case front panel is cut\x0Aout. Eyewitnesses said to me that it was in this form that it was sold.\x0A\x0ASome Soviet home computers could connect an external floppy drive. Floppy drive\x0Ain the 80s was a dream. Drive with controller the drive sometimes cost more\x0Athan the computer itself. User could buy a floppy drive without a case and\x0Ajust put it on the table near the computer. And use it without a case.\x0AOr user could buy such a nice external floppy drive.\x0A",},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Электроника МС5316 НГМД",
params:"Год\x09≤1992",
body:"\x22Электроника МС5316\x22 это корпус с блоком питания и дисководом. Внутри корпуса\x0Aмогли устанавливаться разные советские дисководы: МС5305, МС5311, МС5313 и даже\x0Aзарубежные. Например, у меня установлен японский дисковод \x22MITSUBISHI ELECTRIC\x0AU288Y073\x22. Передняя панель дисковода не совсем подходит к корпусу. У дисковода\x0Aрычаг не в том месте. Поэтому часть передней панели корпуса вырезана. Мне\x0Aрассказали очевидцы, что именно в таком виде он и продавался.\x0A\x0AК некоторым советским домашним компьютерам можно было подключить внешний\x0Aдисковод. Дисковод в конце 80-х годов был мечтой. Дисковод с контроллером\x0Aдисковода иногда стоил дороже самого компьютера. Можно было купить дисковод без\x0Aкорпуса и просто положить его на столе рядом с компьютером. А можно было купить\x0Aтакой симпатичный внешний дисковод.\x0A",},
},
},
"BK0010-01":{
dir:1,
items:{
"english.txt":{
name:"BK0010.01",
params:"Year\x091987\x0ARAM\x0932 kB\x0AROM\x0932 kB\x0ACPU\x09K1801VM1 3 MHz\x0AGraph\x09512x256x2, 256x256x4\x0AIn ROM\x09Basic\x0AGroup\x09BK0010",
body:"BK0010.01 is a improved version of the BK0010 computer. Computer PCB, processor,\x0Aperformance, amount of RAM is not changed and new equipment did not appear. This\x0Ais what has changed:\x0A\x0AThe flat keyboard BK0010 was beautiful and easy to repair, but the printing on\x0Ait was not convenient. In BK0010.01, a normal keyboard was installed. The keys\x0Aof which had big move. But this keyboard had a very strong bounce of contacts.\x0AIf slowly press the key to the end, then the computer will print 3-5 characters,\x0Aso users of BK0010.01 had a special way of printing, fast and weak touches.\x0A\x0AThe new keyboard did not fit in the old case. They did not make a new case. They\x0Aadded to the previous case 4 slats increasing its height. Because of this it\x0Abecame possible to disassemble the computer without breaking the seal. Worth\x0Aonly pull out the slats and the upper part of the case can be unscrewed, gain\x0Aaccess to the insides of a computer.\x0A\x0AThe unpopular programming language Focal, which was flashed into the computer's\x0AROM, changed to BASIC. Moreover, BASIC was not an interpreter, but a compiler in\x0Athreaded code. This means that the program runs faster, but the RAM spending \x0Amore.\x0A\x0AThe ability to program in Focal was retained. For BK0010.01 they released an\x0Aexternal expansion unit called MSTD, which contained a ROM with Focal language\x0Aand selftest programs. It may seem that the MSTD block is a step into the past,\x0Abut no. For the sake of this block, engineers added the ability to disable the\x0Ainternal ROM, which in the future allowed to increase the RAM of the computer,\x0Aproduce a RAM extension unit.\x0A\x0AA mysterious inscription \x22CAGLRCCC.R\x22 appeared in the upper left corner of the\x0Ascreen. And you don't guess what it is if no one tells you. It's a hint to you\x0Awhat's hot keys AP2+1 .. AP2+0 display the words: COLOR, AUTO, GOTO, LIST, RUN,\x0ACOLOR 1.0, CLOAD, CONT, ., RUN.\x0A\x0AAnd also in BK0010.01 there was always soldered details (probably always) for a\x0Acolor video output.\x0A",},
"my_software":{
dir:1,
items:{
"game_miner_on_cshr":{
dir:1,
items:{
"sources":{
dir:1,
items:{
"-make.bat":{},
"cshr_sources":{
dir:1,
items:{
"asm.h":{},
"src.cpp":{},
"bitmap.cpp":{},
"win2koi.h":{},
"bitmap.h":{},
"output.cpp":{},
"cshl.h":{},
"cshl.cpp":{},
"win2koi.cpp":{},
"output.h":{},
"src.h":{},
"asm.cpp":{},
"bk0010_cshr.cpp":{},
},
},
"bk0010_cshr.exe":{},
"bk0010_miner.asm":{},
"resources":{
dir:1,
items:{
"n4.bmp":{},
"1.bmp":{},
"n7.bmp":{},
"bad.bmp":{},
"cursor.bmp":{},
"good.bmp":{},
"block.bmp":{},
"n5.bmp":{},
"n2.bmp":{},
"7.bmp":{},
"2.bmp":{},
"8.bmp":{},
"f.bmp":{},
"un.bmp":{},
"logo.bmp":{},
"q.bmp":{},
"win.bmp":{},
"0.bmp":{},
"n9.bmp":{},
"b.bmp":{},
"n3.bmp":{},
"n6.bmp":{},
"6.bmp":{},
"n0.bmp":{},
"5.bmp":{},
"4.bmp":{},
"3.bmp":{},
"n8.bmp":{},
"n1.bmp":{},
},
},
},
},
"screenshot1.png":{},
"miner.bin":{},
"screenshot3.png":{},
"screenshot4.png":{},
"screenshot2.png":{},
"screenshot5.png":{},
},
},
"game_miner_on_asm":{
dir:1,
items:{
"screenshot2.jpg":{},
"screenshot3.jpg":{},
"sources":{
dir:1,
items:{
"miner.asm":{},
"resources":{
dir:1,
items:{
"n4.bmp":{},
"1.bmp":{},
"n7.bmp":{},
"bad.bmp":{},
"cursor.bmp":{},
"good.bmp":{},
"block.bmp":{},
"n5.bmp":{},
"n2.bmp":{},
"7.bmp":{},
"2.bmp":{},
"8.bmp":{},
"f.bmp":{},
"un.bmp":{},
"logo.bmp":{},
"q.bmp":{},
"win.bmp":{},
"0.bmp":{},
"n9.bmp":{},
"b.bmp":{},
"n3.bmp":{},
"n6.bmp":{},
"6.bmp":{},
"n0.bmp":{},
"5.bmp":{},
"4.bmp":{},
"3.bmp":{},
"n8.bmp":{},
"n1.bmp":{},
},
},
},
},
"miner.bin":{},
"screenshot1.jpg":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"БК0010.01",
params:"Год\x091987\x0AОЗУ\x0932 кБ\x0AПЗУ\x0932 кБ\x0AПроц\x09К1801ВМ1 3 MГц\x0AГрафика\x09512x256x2, 256x256x4\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09БК0010",
body:"БК0010.01 это доработанная версия компьютера БК0010. Печатная плата компьютера\x0Aкомпьютера, процессор, производительность, объем оперативной памяти не \x0Aизменились и нового оборудования не появилось. Изменилось вот что:\x0A\x0AПлоская клавиатура БК0010 была красива и удобна в ремонте, но печать на ней было\x0Aне удобно. В БК0010.01 установили нормальную клавиатуру. Клавиши которой имели \x0Aбольшой ход. Но у этой клавиатуры был очень сильный дребезг контактов. Если\x0Aплавно нажать на клавишу до конца, то компьютер напечатает 3-5 символов, поэтому\x0Aу пользователей БК0010.01 вырабатывался особый способ печати, резкими и легкими\x0Aкасаниями.\x0A\x0AНовая клавиатура не помещалась в старый корпус. Новый корпус делать не стали,\x0Aа добавили к прошлому корпусу 4 планки увеличивающие его высоту. Из-за этого\x0Aпоявилась возможность разобрать компьютер не нарушая пломбу. Стоит только\x0Aвытащить планки и верхнюю часть корпуса можно отвернуть, получив доступ к\x0Aвнутренностям компьютера.\x0A\x0AНепопулярный язык программирования Фокал, который был прошит в ПЗУ компьютера,\x0Aзаменили на Бейсик. Причем, Бейсик был не интерпретатором, а компилятором в\x0Aшитый код. Это значит, что программа работает быстрее, но оперативной памяти\x0Aтратится больше.\x0A\x0AВозможность программирования в Фокале сохранили. Для БК0010.01 выпустили внешний\x0Aблок расширения под названием МСТД, который содержал ПЗУ с Фокалом и программами\x0Aпроверки компьютера. Может показаться, что блок МСТД это шаг в прошлое, но нет.\x0AРади этого блока инженеры добавили возможность отключения внутреннего ПЗУ, что в\x0Aбудущем позволило увеличить оперативную память компьютера. Т.е. выпустить блок\x0Aрасширения ОЗУ.\x0A\x0AВ верхнем левому углу экрана появилась загадочная надпись \x22CAGLRCCC.R\x22. И вы не\x0Aдогадаетесь что это, если вам никто не скажет. Это подсказка вам, что горячие\x0Aклавиши AP2+1 .. AР2+0 выводят слова: COLOR, AUTO, GOTO, LIST, RUN, COLOR 1,0,\x0ACLOAD, CONT, ., RUN.\x0A\x0AА так же в БК0010.01 всегда (вероятно всегда) был распаян цветной видеовыход.\x0A",},
"start_screen.png":{},
},
},
"_MakeScl":{
dir:1,
items:{
"Makefile":{},
"maketrd.files":{},
"trdfile.h":{},
"abstractfile.h":{},
"trdfile.cpp":{},
"fstools.cpp":{},
"maketrd.cpp":{},
"maketrd.includes":{},
"sclfile.cpp":{},
"fstools.h":{},
"maketrd.creator":{},
"sclfile.h":{},
},
},
"Pentagon_128":{
dir:1,
items:{
"english.txt":{
name:"Pengaton 128",
params:"Year\x091991\x0ARAM\x09128 kB\x0AROM\x0932 kB\x0ACPU\x09Z80 3.5 MHz\x0AGraph\x09256x192x15\x0ASound\x09AY-3-8910\x0AIn ROM\x09Basic\x0AGroup\x09ZX Spectrum",
body:"TODO\x0A",},
"photo":{
dir:1,
items:{
"1.jpg":{},
"0.jpg":{},
},
},
"russian.txt":{
name:"Пентагон 128 (Pengaton 128)",
params:"Год\x091991\x0AОЗУ\x09128 кБ\x0AПЗУ\x0932 кБ\x0AПроц\x09Z80 3.5 MГц\x0AГрафика\x09256x192x15\x0AЗвук\x09AY-3-8910\x0AВ ПЗУ\x09Бейсик\x0AГруппа\x09ZX Spectrum",
body:"Компьютер Пентагон 128 это стандарт ZX Spectrum совместимых компьютеров в СССР\x0Aи СНГ. Все игры и демо-программы в СССР или СНГ писались и пишутся либо для\x0Aкомпьютера \x22ZX Spectrum 48К\x22, либо для компьютера \x22Пентагон 128\x22.\x0A\x0AТак мне сказали люди, которые и в 2020-х годах продолжают писать программы для\x0Aэтого компьютера. Но где то пишут программы и для более современных ZX Specturm\x0Aсовместимых компьютеров, например русского ZX Evolution или иностранного ZX\x0ASpectrum Next. Поэтому решать вам.\x0A\x0AКомпьютер Пентагон 128 умеет все, что умеет оригинальный компьютер ZX Spectrum\x0A128. Только в него еще встроен контроллер дисковода Beta Disk Interface и он\x0Aнемного быстрее оригинального компьютера.\x0A\x0AНа первых версиях плат компьютеров Пентагон 128 не было места под звуковой\x0Aсинтезатор AY-3-8910. Он устанавливался на отдельную плату. В моей новодельной\x0Aплате 2017 года этот звуковой синтезатор уже впаян основную в плату.\x0A\x0AКакого то определенного корпуса у компьютера Пентагон 128 не было. Была какая\x0Aто коробка закрывающая ужас внутри. Но в этой коробке никто узнать Пентагон не\x0Aмог. Компьютер Пентагон 128 узнают не по корпусу и не по клавиатуре, а по\x0Aпечатной плате.\x0A\x0AПо моему личному мнению, компьютер \x22Пентагон 128\x22 можно рассматривать как\x0Aпродолжение радиолюбительских компьютеров для самостоятельной сборки: Микро-80,\x0AРадио 86РК, Специалист, Орион 128, Ленинград, Пентагон 128.\x0A\x0AЯ считаю эту плату самой красивой потому что в качестве блокировочных\x0Aконденсаторов использованы SMD. И установлены они с обратной стороны платы.\x0AСверху плата выглядит максимально аутентично. Конденсаторы не мешают любоваться\x0Aплатой. Их не видно и они никуда не могут замкнуть.\x0A\x0A",},
"doc":{
dir:1,
items:{
"Pentagon_128_Circuit_2.djvu":{},
"Pentagon_128_2017_with_AY_Circuits.pdf":{},
"Pentagon_128_2017_with_AY_PCB.pdf":{},
"Pentagon_48К_Circuit.djvu":{},
"Pentagon_128_Circuit_Guschin_S_V.pdf":{},
"Pentagon_128_Circuit.png":{},
},
},
},
},
"Electronica_MK_85M":{
dir:1,
items:{
"english.txt":{
name:"Electronica MK-85",
params:"Year\x091986\x0ARAM\x092 - 6 kB\x0AROM\x0916 kB\x0ACPU\x09T36VM1-2 1 Mhz\x0AText\x0912x1x2\x0AGraph\x0960x7x2\x0AIn ROM\x09Basic",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"emulator":{
dir:1,
items:{
"ram.bin":{},
"keys.bmp":{},
"face.bmp":{},
"whatsnew.txt":{},
"mk85strt.png":{},
"mk85m.exe":{},
"mk85load.png":{},
"rom.bin":{},
"mk85m.ini":{},
"overlay.bmp":{},
"mk85fipr.png":{},
"mk85mcin.png":{},
},
},
},
},
"photo":{
dir:1,
items:{
"16.jpg":{},
"9.jpg":{},
"7.jpg":{},
"17.jpg":{},
"11.jpg":{},
"3.jpg":{},
"6.jpg":{},
"15.jpg":{},
"5.jpg":{},
"2.jpg":{},
"13.jpg":{},
"12.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"10.jpg":{},
"14.jpg":{},
"8.jpg":{},
},
},
"execbinary.html":{
dir:1,
items:{
"execbinary1.png":{},
"russian.html":{},
"execbinary2.jpg":{},
},
},
"russian.txt":{
name:"Электроника МК-85",
params:"Год\x091986\x0AОЗУ\x092 - 6 кБ\x0AПЗУ\x0916 кБ\x0AПроц\x09Т36ВМ1-2 1 МГц\x0AТекст\x0912x1x2\x0AГрафика\x0960x7x2\x0AВ ПЗУ\x09Бейсик",
body:"Электроника МК-85 это советский портативный компьютер. Кратко его можно описать\x0Aтак: до 220 часов работы от аккумулятора, 16 битный процессор с системой команд\x0APDP-11, ОЗУ объемом 2 или 6 килобайт, жидкокристаллический экран на 12 символов\x0Aи встроенный Бейсик.\x0A\x0AМикрокомпьютер выпускался рекордное время и на него был спрос. Он поступил в\x0Aпродажу в 1986 году. Это самое начало эры промышленно выпускаемых домашних\x0Aкомпьютеров: БК0010, Радио 86РК, Корвет, Поиск, Вектор... Причем, Электроника\x0AМК-85 стоила дешевле любого компьютера, всего 145 рублей. Она была с нами с\x0Aсамого начала и выпускалась до 2000-х годов, когда советские домашние компьютеры\x0Aбыли забыты, а на наших столах стояли компьютеры с процессорами Пентиум или\x0ACелерон, появился интернет, 3D ускорители, компакт диски, цифровая музыка и\x0Aфильмы.\x0A\x0AКомпьютер выполняет программы на Бейсике и хоть это было не предумотрено\x0Aразработчиками, но еще и в машинном коде. Запуск собственного машинного кода\x0Aстал возможен благодаря ошибке в подпрограмме обработки нажатия кнопки [AC].\x0AПодключить МК-85 к компьютеру или каким либо внешним устройствам невозможно, так\x0Aкак у компьютера нет ни одного внешнего информационного разъёма. Проблема не в\x0Aэлектронике, как раз в схеме компьютера был предусмотрен внешний разъем, просто\x0Aразъем не был установлен и не поддержан программно. Все программы и данные\x0Aвводятся с клавиатуры и хранятся в памяти компьютера, пока не разрядится\x0Aаккумулятор.\x0A\x0AНа дисплее отображается 12 символов, символ состоит из матрицы точек 5x7. Бейсик\x0Aпозволяет выводить на экран не только цифры и буквы, но и собственные символы и\x0Aдаже графику. Но на дисплее между символами есть промежутки, поэтому вывести\x0Aслитную графику в разрешении 60x7 не получится.\x0A\x0AВнутри МК-85 установлен 16-битный процессор совместимый с системой команд\x0APDP-11. Установлено 6 Кб оперативной памяти. Это в модели МК-85М, а в модели\x0AМК-85 было всего 2 Кб. Модель МК-85 можно доработать до МК-85М впаяв две не\x0Aустановленные на заводе микросхемы памяти. В компьютере установлено ПЗУ объемом\x0A16 Кб содержащее программу калькулятора, интерпретатор Бейсика и программу\x0Aсамодиагностики. Это очень хорошие характеристики для карманного компьютера,\x0Aэто почти БК0010.\x0A\x0AКомпьютер может работать в режимах: экономии и турбо. В режиме экономии\x0Aкомпьютер потребляет до 20 мВт и может работать от аккумулятора от 80 до 220\x0Aчасов. Для запуска в турбо режиме, надо перезагрузить микрокомпьютер с зажатой\x0Aклавишей +. Само собой, аккумулятор разрядится значительно быстрее. Тактовая\x0Aчастота процессора в режиме турбо составляет 2 МГц, что сравнимо с настольными\x0Aкомпьютерами того времени.\x0A\x0AЗапустить программу самодиагностики можно из Бейска введя команду TEST, но\x0Aучтите, что эта команда удалит все программы сохраненные в ОЗУ. А введя команду\x0AWHO вы узнаете кто разработал программу компьютера.\x0A\x0AСхема МК-85 крайне проста, всего несколько микросхем: процессор, чипсет\x0A(контроллер клавиатуры, параллельный порт, дешифратор адресов), статическое ОЗУ,\x0AПЗУ, контроллер ЖК дисплея. Во второй версии схемы процессор и чипсет объединили\x0Aв одном корпусе.\x0A\x0AВыпускались версии МК-85 содержащие в ПЗУ специальные программы. Например,\x0AЭлектроника МК-85Б и Электроника МК-85С вместо Бейсика содержали программы\x0Aшифрования.\x0A\x0A*** Немного о разработчиках ***\x0A\x0AМикрокомпьютер разработан в НИИ Точной Технологии, который сейчас называется\x0AАнгстрем. За редким исключением НИИ ТТ единственный мог выпускать собственные\x0Aпроцессоры и микросхемы для домашних компьютеров. НИИ ТТ разработал популярные\x0A16-битные персональные компьютеры ДВК, БК001x и УКНЦ. В них так же\x0Aиспользовались собственные процессоры и специализированные микросхемы.\x0A\x0AУ НИИ ТТ были очень крутые технологии и возможности, но свободы у НИИТТ было\x0Aмало. До 1980-х они выпускали компьютеры собственной архитектуры (НЦ) и\x0Aпроцессоры с собственной системой команд. Но примерно в 1980 году разработчикам\x0Aсказали - все ваши компьютеры в мусор, теперь вы будете делать клоны компьютеров\x0APDP-11 американской фирмы DEC.\x0A\x0AРазработчики не стали копировать компьютеры, микросхемы и процессоры. Может быть\x0Aим было стыдно, может быть амбиции, а может быть было проще переделать\x0Aсуществующие компьютеры. В самые короткие сроки, буквально за год, НИИ ТТ\x0Aизменил микропрограмму своих процессоров так, что бы процессоры смогли выполнять\x0Aпрограммы для PDP-11.\x0A\x0AЧто такое микропрограмма? Если говорить по простому, то большинство процессоров\x0Aработает на собственном языке программирования с очень простыми командами. На\x0Aэтом языке программирования написан эмулятор другого процессора. Например, в\x0Aсистеме команд X86 есть команда умножения. Одна команда - одно умножение. Но\x0Aникаких электронных блоков умножения в процессоре 8086 нет. Процессор умножает\x0Aпо программе, т.е. микропрограмме содержащей команды сложения, сдвиги, условия\x0Aи циклы. Поэтому процессору 8086 требуется 118-133 тактов для выполнения одной\x0Aкоманды умножения.\x0A\x0AТак как процессор НИИ ТТ изначально не затачивался под систему команд PDP-11, а\x0Aуже после разработки был переделан, то и производительность получилась ниже\x0Aпроцессора фирмы DEC. Но зато НИИ ТТ смогли поместить весь процессор в одну\x0Aмикросхему. Процессор фирмы DEC представлял собой несколько микросхем.\x0A\x0AЗатем, в 1984 году разработчикам показали карманный компьютер Casio FX-700P и\x0Aсказали - что бы у меня на столе лежал такой же советского производства!\x0AПеречить руководству было нельзя, через год на стол лег микрокомпьютер внешне\x0Aидентичный Casio, но изнутри... То ли разработчикам НИИТТ было стыдно заниматься\x0Aкопированием, то ли хотелось сделать что то своё, то ли найти применение\x0Aсобственному процессору способному сутками работать от часовых батареек. На\x0Aстоле лежал советский Casio, даже Бейсик был похож, даже работать с ним можно\x0Aбыло по документации от Casio. Но внутри компьютера всё сделали по своему.\x0AУстановили собственные микросхемы, собственный экономичный 16-битный процессор\x0Aс навязанной системной команд PDP-11. И в 1986 году компьютер поступил в\x0Aпродажу.\x0A\x0A*** Пример программы ***\x0A\x0A* 1 PRINT \x22Змейка\x22: DEFM 420\x0A* 10 VAC: G=-1: A=1: C=26: D=3: X=30: Y=3\x0A* 20 FOR I=0 TO 4: DRAW 26+I,3: Z(206+I)=A: NEXT I:\x0A* 30 G=G+1\x0A* 40 E=INT(RAN#*59): F=INT(RAN#*6): IF Z(E+60*F)>0 THEN 40\x0A* 50 DRAW E,F\x0A* 60 GOTO 55+A*10\x0A* 65 X=X+1: IF X=60 THEN 500\x0A* 67 GOTO 100\x0A* 75 Y=Y+1: IF Y=7 THEN 500\x0A* 77 GOTO 100\x0A* 85 X=X-1: IF X=-1 THEN 500\x0A* 87 GOTO 100\x0A* 95 Y=Y-1: IF Y=-1 THEN 500\x0A* 100 IF Z(X+60*Y)>0 THEN 500\x0A* 110 DRAW X,Y\x0A* 120 B=ASCIKEY: IF B=50; IF A≠2; A=4\x0A* 130 IF B=54; IF A≠3; A=1\x0A* 140 IF B=56; IF A≠4; A=2\x0A* 150 IF B=52; IF A≠1; A=3\x0A* 155 Z(X+60*Y)=A\x0A* 160 IF X=E; IF Y=F THEN 30\x0A* 170 DRAWC C,D: H=C+60*D: GOTO 170+Z(H)*10\x0A* 180 Z(H)=0: C=C+1: GOTO 60\x0A* 190 Z(H)=0: D=D+1: GOTO 60\x0A* 200 Z(H)=0: C=C-1: GOTO 60\x0A* 210 Z(H)=0: D=D-1: GOTO 60\x0A* 500 PRINT \x22Game over. score-\x22;G\x0A* 510 INPUT \x22Repeat\x22,$:IF $=\x22Y\x22 THEN 10\x0A* 520 DEFM 0",},
"doc":{
dir:1,
items:{
"Electronica_MK85_User_manual.djvu":{},
"150_programs_for_Elektronica_MK85.chm":{},
"KA1013VM1.djvu":{},
"Computer_technics_and_its_using_2_1992_Personal_computer_Electronica_MK85.djvu":{},
"Electronica_MK85_Circuit.png":{},
"KA1013VG2-4.pdf":{},
},
},
},
synced:{
"Electronica_MK_85M/execbinary.html/russian.html": "Запуск машинного кода",
},
},
"Electronica_MS_0511_UKNC":{
dir:1,
items:{
"english.txt":{
name:"Electronica MS0511 UKNC",
params:"Year\x091987\x0ARAM\x09192 kB\x0AROM\x0932 kB\x0ACPU\x09KM1801VM2 8 MHz + KM1801VM2 6 MHz\x0AГрафика\x09640x288x8, 53 colors palette\x0AGroup\x09PDP11",
body:"TODO\x0A",},
"utils":{
dir:1,
items:{
"emulator":{
dir:1,
items:{
"ukncbtl.exe":{},
"rendervfw.dll":{},
"readme.txt":{},
"renderdx9.dll":{},
"renderopengl.dll":{},
"ukncbtl.ini":{},
},
},
},
},
"photo":{
dir:1,
items:{
"9.jpg":{},
"7.jpg":{},
"3.jpg":{},
"6.jpg":{},
"5.jpg":{},
"2.jpg":{},
"1.jpg":{},
"4.jpg":{},
"0.jpg":{},
"8.jpg":{},
},
},
"russian.txt":{
name:"Электроника МС0511 УКНЦ",
params:"Год\x091987\x0AОЗУ\x09192 кБ\x0AПЗУ\x0932 кБ\x0AПроц\x09КМ1801ВМ2 8 МГц + КМ1801ВМ2 6 МГц\x0AГрафика\x09640x288x8, палитра 53 цв\x0AГруппа\x09PDP11",
body:"Электроника МС0511 это советский школьный компьютер. Единственный школьный\x0Aкомпьютер, который дома было не встретить. (Найдутся конечно исключения.)\x0AВыпускался с 1987 по 1991 год и было выпущено аж ~300 тысяч компьютеров.\x0A\x0AКомпьютер этот совместим с компьютерами PDP-11. На нём запускается родная для\x0APDP-11 операционная система RT-11. Компьютеры PDP появились в 1960 году и были\x0Aсамыми популярными мини- и микро-компьютерами до появляения IBM PC. На PDP\x0Aпоявился язык программирования Си, игра Тетрис, операционная система UNIX. UNIX\x0Aможно запустить на Электронике МС0511.\x0A\x0AЭтот компьютер так же называют УКНЦ, это аббревиатура \x22Учебный Компьютер -\x0AНаучный Центр\x22. НПО \x22Научный центр\x22 это разработчики компьютера. Они еще\x0Aразработали компьютеры БК001x и ДВК.\x0A\x0AКомпьютер УКНЦ интересен тем, что он двухпроцессорный. В нем установлено два\x0Aодинаковых процессора КМ1801ВМ2. Это 16-битные процессоры советской разработки\x0Aс системой команд PDP-11. Процессоры умеют умножать и делить целые 16-битные\x0Aчисла.\x0A\x0AПервый процессор называется \x22центральный процессор\x22, на нем выполняются\x0Aзагружаемые пользователем программы. Второй процессор называется \x22периферийный\x0Aпроцессор\x22, обычно на нём выполняются подпрограммы взаимодействия с периферией:\x0Aэкраном, клавиатурой, локальной сетью, последовательным портом, принтером,\x0Aдисководом. Но так же программист может использовать периферийный процессор по\x0Aсвоему усмотрению.\x0A\x0AВидеоадаптер компьютера (для 1987 года) обладает выдающимися параметрами.\x0AРазрешение экрана 640x288 8 цветов из палитры в 53 цвета. Палитра устаналивается\x0Aдля каждой строи, т.е. на экране можно отобразить сразу все 53 цвета. Но в\x0Aстроке выбрать любые сочения цветов нельзя, тут 16 фиксированных наборов цветов.\x0AПоддерживается апаратаная вертикальная прокрутка экрана. В компьютере\x0Aустановлено 192 килобайта оперативной памяти из которой до 96 килобайт\x0Aиспользуется видеоадаптером.\x0A\x0AУ компьютера отличная клавиатура. К компьютеру можно подключить два монитора.\x0AМожно подключить принтер. Есть последовательный порт. В большинстве случаев в\x0Aкомпьютере установлен модуль подключения локальной сети.\x0A\x0AВ школах компьютеры УКНЦ были соединены в локальную сеть. На учительском\x0Aкомпьютере был установлен контроллер дисковода. Учительский компьютер загружал\x0Aоперационную систему с дискеты, а ученические компьютеры загружались по\x0Aлокальной сети.\x0A\x0AЕсли у Вас есть УКНЦ, но нет контроллера дисковода или эмулятора учительского\x0Aкомпьютера (программа для IBM PC), то вы можете загрузить только лишь несколько\x0Aпростых программ с магнитной ленты или MP3-плеера.\x0A\x0AЭто один из немногих советских компьютеров содержащий специализированные\x0Aмикросхемы.\x0A\x0A",},
"software":{
dir:1,
items:{
"tape":{
dir:1,
items:{
"uknc_cbasic.wav.7z":{},
"uknc_garden.wav.7z":{},
"uknc_mision.wav.7z":{},
"uknc_klad.wav.7z":{},
"uknc_dbas.wav.7z":{},
"uknc_cat.wav.7z":{},
"uknc_vert.wav.7z":{},
},
},
"floppy":{
dir:1,
items:{
"base_dat.dsk":{},
"rbland.dsk":{},
"redact.dsk":{},
"logo.dsk":{},
"net11rt.dsk":{},
"kornet.dsk":{},
"free.dsk":{},
"unix.dsk":{},
"roo&rob.dsk":{},
"editor.dsk":{},
"sysGME.dsk":{},
"turb_bas.dsk":{},
"game.dsk":{},
},
},
"unix":{
dir:1,
items:{
"readme.txt":{},
"unix.dsk":{},
},
},
},
},
},
},
},
};
